//----- (00000001400B9FEC) ----------------------------------------------------
void __fastcall Up_ForwardUpdateToPrimary(__int64 a1)
{
  __int64 v1; // rdi
  __int128 v3; // xmm2
  __int128 v4; // xmm3
  int v5; // eax
  __int64 v6; // r10
  __int128 v7; // xmm4
  __int128 v8; // xmm5
  __int64 v9; // rax
  _OWORD *v10; // rax
  __int128 v11; // xmm0
  __int128 v12; // xmm1
  __int64 v13; // rcx
  __int128 v14; // xmm0
  SOCKET v15; // rax
  __int128 v16; // xmm1
  __int128 v17; // [rsp+30h] [rbp-40h] BYREF
  __int128 v18; // [rsp+40h] [rbp-30h]
  __int128 v19; // [rsp+50h] [rbp-20h]
  __int128 v20; // [rsp+60h] [rbp-10h]

  v1 = *(_QWORD *)(a1 + 208);
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
  {
    WPP_SF_qs(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x86u,
      (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids,
      a1,
      *(_QWORD *)(v1 + 16));
  }
  if ( *(_DWORD *)(v1 + 372) != 1 )
  {
    v3 = *(_OWORD *)(v1 + 1184);
    v17 = v3;
    v4 = *(_OWORD *)(v1 + 1200);
    v18 = v4;
    v19 = *(_OWORD *)(v1 + 1216);
    v20 = *(_OWORD *)(v1 + 1232);
    LOBYTE(v5) = DnsAddr_IsClear(&v17);
    if ( !v5 )
      goto LABEL_10;
    v9 = *(_QWORD *)(v1 + 1168);
    if ( v9 && *(_DWORD *)(v9 + 4) )
    {
      v17 = *(_OWORD *)(v9 + 32);
      v18 = *(_OWORD *)(v9 + 48);
      v19 = *(_OWORD *)(v9 + 64);
      v20 = *(_OWORD *)(v9 + 80);
      v10 = *(_OWORD **)(v1 + 1168);
      *(_OWORD *)(v1 + 1184) = v10[2];
      *(_OWORD *)(v1 + 1200) = v10[3];
      *(_OWORD *)(v1 + 1216) = v10[4];
      *(_OWORD *)(v1 + 1232) = v10[5];
      v8 = v20;
      v7 = v19;
      v4 = v18;
      v3 = v17;
LABEL_10:
      v11 = *(_OWORD *)(a1 + 64);
      v12 = *(_OWORD *)(a1 + 80);
      v13 = *(unsigned __int16 *)(a1 + 6302);
      *(_QWORD *)(a1 + 1312) = *(_QWORD *)(a1 + 56);
      *(_WORD *)(a1 + 1386) = *(_WORD *)(a1 + 6304);
      *(_BYTE *)(a1 + 1412) = 0;
      *(_OWORD *)(a1 + 1320) = v11;
      *(_QWORD *)(a1 + 32) = v13 + a1 + 6304;
      v14 = *(_OWORD *)(a1 + 96);
      v15 = g_UdpSendSocket4;
      *(_OWORD *)(a1 + 1336) = v12;
      *(_QWORD *)(a1 + 56) = v15;
      v16 = *(_OWORD *)(a1 + 112);
      *(_OWORD *)(a1 + 64) = v3;
      *(_OWORD *)(a1 + 80) = v4;
      *(_OWORD *)(a1 + 96) = v7;
      *(_OWORD *)(a1 + 112) = v8;
      *(_WORD *)(a1 + 66) = 13568;
      *(_OWORD *)(a1 + 1352) = v14;
      *(_OWORD *)(a1 + 1368) = v16;
      if ( (unsigned __int16)v13 <= 0x200u )
      {
        updateForwardConnectCallback(a1, 1);
      }
      else
      {
        _InterlockedIncrement(&dword_1401C81C4);
        dword_1401B9714 = Dns_GetCurrentTimeInSeconds();
        Tcp_ConnectForForwarding(
          a1,
          (struct in_addr *)&v17,
          dword_1401B9714 + dword_1401B97BC,
          (void (__fastcall *)(__int64, _QWORD))updateForwardConnectCallback);
      }
      return;
    }
    if ( (CDnsClientSubnetRecordsTrie **)v6 != &WPP_GLOBAL_Control
      && (*(_DWORD *)(v6 + 68) & 0x80000) != 0
      && *(_BYTE *)(v6 + 65) >= 2u )
    {
      WPP_SF_q(*(_QWORD *)(v6 + 56), 0x87u, (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids, a1);
    }
    Reject_RequestIntact(a1, 2u, 0);
  }
}
// 1400BA09C: variable 'v5' is possibly undefined
// 1400BA186: variable 'v7' is possibly undefined
// 1400BA18A: variable 'v8' is possibly undefined
// 1400BA1DE: variable 'v6' is possibly undefined
// 1401B9714: using guessed type int dword_1401B9714;
// 1401B97BC: using guessed type int dword_1401B97BC;
// 1401C81C4: using guessed type int dword_1401C81C4;
