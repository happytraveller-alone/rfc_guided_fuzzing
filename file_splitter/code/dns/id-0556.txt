//----- (00000001400505F4) ----------------------------------------------------
ULONG __fastcall Template_zzzzqb(
        __int64 a1,
        const EVENT_DESCRIPTOR *a2,
        const unsigned __int16 *a3,
        const unsigned __int16 *a4,
        const unsigned __int16 *a5,
        const unsigned __int16 *a6,
        int a7,
        __int64 a8)
{
  __int64 v8; // rcx
  int v10; // r10d
  __int64 v11; // rax
  ULONG v12; // edx
  const wchar_t *v13; // r11
  const wchar_t *v14; // rax
  __int64 v15; // rax
  int v16; // edx
  const wchar_t *v17; // rax
  __int64 v18; // rax
  int v19; // r8d
  const wchar_t *v20; // rax
  bool v21; // zf
  struct _EVENT_DATA_DESCRIPTOR UserData; // [rsp+20h] [rbp-39h] BYREF
  const wchar_t *v24; // [rsp+30h] [rbp-29h]
  int v25; // [rsp+38h] [rbp-21h]
  int v26; // [rsp+3Ch] [rbp-1Dh]
  const wchar_t *v27; // [rsp+40h] [rbp-19h]
  int v28; // [rsp+48h] [rbp-11h]
  int v29; // [rsp+4Ch] [rbp-Dh]
  const wchar_t *v30; // [rsp+50h] [rbp-9h]
  int v31; // [rsp+58h] [rbp-1h]
  int v32; // [rsp+5Ch] [rbp+3h]
  int *v33; // [rsp+60h] [rbp+7h]
  __int64 v34; // [rsp+68h] [rbp+Fh]
  __int64 v35; // [rsp+70h] [rbp+17h]
  int v36; // [rsp+78h] [rbp+1Fh]
  int v37; // [rsp+7Ch] [rbp+23h]

  v8 = -1i64;
  v10 = 10;
  if ( a3 )
  {
    v11 = -1i64;
    do
      ++v11;
    while ( a3[v11] );
    v12 = 2 * v11 + 2;
  }
  else
  {
    v12 = 10;
  }
  UserData.Size = v12;
  v13 = L"NULL";
  UserData.Reserved = 0;
  v14 = L"NULL";
  if ( a3 )
    v14 = a3;
  UserData.Ptr = (ULONGLONG)v14;
  if ( a4 )
  {
    v15 = -1i64;
    do
      ++v15;
    while ( a4[v15] );
    v16 = 2 * v15 + 2;
  }
  else
  {
    v16 = 10;
  }
  v25 = v16;
  v17 = L"NULL";
  if ( a4 )
    v17 = a4;
  v26 = 0;
  v24 = v17;
  if ( a5 )
  {
    v18 = -1i64;
    do
      ++v18;
    while ( a5[v18] );
    v19 = 2 * v18 + 2;
  }
  else
  {
    v19 = 10;
  }
  v28 = v19;
  v20 = L"NULL";
  v29 = 0;
  if ( a5 )
    v20 = a5;
  v27 = v20;
  v21 = a6 == 0i64;
  if ( a6 )
  {
    do
      ++v8;
    while ( a6[v8] );
    v10 = 2 * v8 + 2;
    v21 = a6 == 0i64;
  }
  if ( !v21 )
    v13 = a6;
  v31 = v10;
  v30 = v13;
  v33 = &a7;
  v35 = a8;
  v36 = a7;
  v32 = 0;
  v34 = 4i64;
  v37 = 0;
  return EventWrite(Microsoft_Windows_DNS_Server_ServiceHandle, a2, 6u, &UserData);
}
