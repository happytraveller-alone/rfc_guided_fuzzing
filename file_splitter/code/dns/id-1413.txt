//----- (00000001400B1C14) ----------------------------------------------------
_QWORD *__fastcall btreeRebalanceLeftJustifyPrivate(_QWORD *a1, unsigned int a2)
{
  _QWORD *v4; // r8
  _QWORD *v5; // rax
  _QWORD *v6; // rcx
  _QWORD *v7; // rdx
  unsigned int v9; // ecx
  unsigned int v10; // eax
  unsigned int v11; // edi
  unsigned int v12; // edi
  __int64 v13; // rbx
  _QWORD *v14; // rax
  _QWORD *v15; // rax

  if ( a2 > 3 )
  {
    v9 = 1;
    v10 = a2;
    while ( 1 )
    {
      v10 >>= 1;
      if ( !v10 )
        break;
      v9 *= 2;
    }
    v11 = a2 + (v9 >> 1) - v9;
    if ( v11 > v9 )
      v11 = v9;
    v12 = v11 - 1;
    v13 = a1[v12];
    v14 = btreeRebalanceLeftJustifyPrivate(a1, v12);
    *(_QWORD *)(v13 + 16) = v14;
    v14[1] = v13;
    v15 = btreeRebalanceLeftJustifyPrivate(&a1[v12 + 1], a2 - (v12 + 1));
    *(_QWORD *)(v13 + 24) = v15;
    v15[1] = v13;
    return (_QWORD *)v13;
  }
  else
  {
    if ( a2 == 1 )
    {
      v4 = (_QWORD *)*a1;
      v4[2] = 0i64;
      v4[3] = 0i64;
    }
    else
    {
      v4 = (_QWORD *)a1[1];
      if ( a2 == 2 )
      {
        v5 = (_QWORD *)*a1;
        v4[2] = *a1;
        v4[3] = 0i64;
        v5[1] = v4;
        v5[2] = 0i64;
        v5[3] = 0i64;
      }
      else
      {
        v6 = (_QWORD *)*a1;
        v7 = (_QWORD *)a1[2];
        v4[2] = v6;
        v4[3] = v7;
        v6[1] = v4;
        v6[2] = 0i64;
        v6[3] = 0i64;
        v7[1] = v4;
        v7[2] = 0i64;
        v7[3] = 0i64;
      }
    }
    return v4;
  }
}
