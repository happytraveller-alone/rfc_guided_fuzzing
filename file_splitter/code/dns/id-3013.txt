//----- (000000014015B734) ----------------------------------------------------
unsigned __int16 *__fastcall Dns_CreateConcatenatedString_W(char **a1, unsigned int a2, __int64 a3)
{
  char *v5; // rax
  __int64 v6; // rcx
  __int64 v7; // rsi
  __int64 v8; // rdx
  unsigned __int16 *v9; // rax
  const unsigned __int16 *v10; // r9
  unsigned __int16 *v11; // rbx
  DWORD v12; // ecx
  int v13; // ebp
  char *i; // rax

  if ( (byte_1401BA003 & 0x10) != 0 )
    WPP_SF_(19i64, (unsigned __int16)&WPP_55e0bf752fa338bf02c5c4b0361aeb86_Traceguids, a3);
  if ( !a1 || !a2 )
  {
LABEL_19:
    v12 = 87;
    goto LABEL_20;
  }
  v5 = *a1;
  LODWORD(v6) = 0;
  v7 = 1i64;
  while ( v5 )
  {
    v6 = (unsigned int)(v6 + 1);
    if ( (unsigned int)v6 >= a2 )
      goto LABEL_19;
    v8 = -1i64;
    do
      ++v8;
    while ( *(_WORD *)&v5[2 * v8] );
    v5 = a1[v6];
    v7 = (unsigned int)(v8 + v7);
  }
  v9 = (unsigned __int16 *)Dns_AllocZero((unsigned int)(2 * v7));
  v11 = v9;
  if ( !v9 )
  {
    v12 = 14;
LABEL_20:
    SetLastError(v12);
    return 0i64;
  }
  *v9 = 0;
  v13 = 0;
  for ( i = *a1; i; i = a1[v13] )
  {
    ++v13;
    StringCchCatW(v11, v7, i);
  }
  if ( (byte_1401BA003 & 0x10) != 0 )
    WPP_SF_S(20i64, (unsigned __int16)&WPP_55e0bf752fa338bf02c5c4b0361aeb86_Traceguids, (__int64)v11, v10);
  return v11;
}
// 14015B7FC: variable 'v10' is possibly undefined
// 1401BA003: using guessed type char byte_1401BA003;
