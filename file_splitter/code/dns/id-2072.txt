//----- (0000000140103448) ----------------------------------------------------
__int64 __fastcall DnsOls_CopyDNSSECproperties(__int64 a1, __int64 a2)
{
  unsigned int v4; // esi
  void *v5; // rbp
  int v6; // edx
  int v7; // eax
  int v8; // ecx
  int v9; // eax
  int v10; // ecx
  int v11; // eax
  int v12; // ecx
  int v13; // eax
  int v14; // ecx
  int v15; // eax
  int v16; // ecx
  int v17; // edx
  char *v18; // rcx
  void *v19; // rax
  char *v20; // rcx
  void *v21; // rax
  size_t v22; // rcx
  void *v23; // rax

  v4 = 0;
  v5 = 0i64;
  *(_DWORD *)a2 ^= (*(_DWORD *)(a1 + 1040) ^ *(_DWORD *)a2) & 1;
  v6 = *(_DWORD *)a2 ^ (*(_DWORD *)(a1 + 1040) ^ *(_DWORD *)a2) & 2;
  *(_DWORD *)a2 = v6;
  v7 = v6 ^ (*(_DWORD *)(a1 + 1040) ^ v6) & 4;
  *(_DWORD *)a2 = v7;
  v8 = v7 ^ (*(_DWORD *)(a1 + 1040) ^ v7) & 8;
  *(_DWORD *)a2 = v8;
  v9 = v8 ^ (*(_DWORD *)(a1 + 1040) ^ v8) & 0x10;
  *(_DWORD *)a2 = v9;
  v10 = v9 ^ (*(_DWORD *)(a1 + 1040) ^ v9) & 0x20;
  *(_DWORD *)a2 = v10;
  v11 = v10 ^ (*(_DWORD *)(a1 + 1040) ^ v10) & 0x1C0;
  *(_DWORD *)a2 = v11;
  v12 = v11 ^ (*(_DWORD *)(a1 + 1040) ^ v11) & 0xE00;
  *(_DWORD *)a2 = v12;
  v13 = v12 ^ (*(_DWORD *)(a1 + 1040) ^ v12) & 0x1000;
  *(_DWORD *)a2 = v13;
  v14 = v13 ^ (*(_DWORD *)(a1 + 1040) ^ v13) & 0x2000;
  *(_DWORD *)a2 = v14;
  v15 = v14 ^ (*(_DWORD *)(a1 + 1040) ^ v14) & 0x4000;
  *(_DWORD *)a2 = v15;
  v16 = v15 ^ (*(_DWORD *)(a1 + 1040) ^ v15) & 0x8000;
  *(_DWORD *)a2 = v16;
  v17 = v16 ^ (*(_DWORD *)(a1 + 1040) ^ v16) & 0x10000;
  *(_DWORD *)a2 = v17;
  *(_DWORD *)a2 = v17 ^ (*(_DWORD *)(a1 + 1040) ^ v17) & 0x20000;
  *(_BYTE *)(a2 + 4) = *(_BYTE *)(a1 + 1044);
  *(_BYTE *)(a2 + 5) = *(_BYTE *)(a1 + 1045);
  *(_WORD *)(a2 + 6) = *(_WORD *)(a1 + 1046);
  v18 = *(char **)(a1 + 1048);
  if ( v18 )
  {
    v19 = Dns_StringCopyAllocate(v18, 0, 1i64, 1);
    *(_QWORD *)(a2 + 8) = v19;
    if ( !v19 )
      goto LABEL_7;
  }
  *(_DWORD *)(a2 + 16) = *(_DWORD *)(a1 + 1056);
  *(_DWORD *)(a2 + 20) = *(_DWORD *)(a1 + 1060);
  *(_DWORD *)(a2 + 24) = *(_DWORD *)(a1 + 1064);
  *(_DWORD *)(a2 + 28) = *(_DWORD *)(a1 + 1068);
  *(_DWORD *)(a2 + 32) = *(_DWORD *)(a1 + 1072);
  v20 = *(char **)(a1 + 1080);
  if ( v20 )
  {
    v21 = Dns_StringCopyAllocate(v20, 0, 2i64, 2);
    *(_QWORD *)(a2 + 40) = v21;
    if ( !v21 )
      goto LABEL_7;
  }
  v22 = *(unsigned int *)(a1 + 1096);
  if ( !(_DWORD)v22 )
  {
LABEL_9:
    *(_QWORD *)(a2 + 48) = v5;
    *(_DWORD *)(a2 + 56) = *(_DWORD *)(a1 + 1096);
    *(_DWORD *)(a2 + 60) = *(_DWORD *)(a1 + 1100);
    *(_DWORD *)(a2 + 64) = *(_DWORD *)(a1 + 1104);
    *(_DWORD *)(a2 + 68) = *(_DWORD *)(a1 + 1108);
    *(_DWORD *)(a2 + 72) = *(_DWORD *)(a1 + 1112);
    *(_QWORD *)(a2 + 76) = *(_QWORD *)(a1 + 1116);
    *(_QWORD *)(a2 + 88) = *(_QWORD *)(a1 + 1128);
    return v4;
  }
  v23 = Mem_AllocZero(v22, 0i64, "ds\\dns\\server\\server\\olsrpc.cpp", 5632);
  v5 = v23;
  if ( v23 )
  {
    memcpy_0(v23, *(const void **)(a1 + 1088), *(unsigned int *)(a1 + 1096));
    goto LABEL_9;
  }
LABEL_7:
  v4 = 14;
  FreeOLSParams(a2);
  return v4;
}
