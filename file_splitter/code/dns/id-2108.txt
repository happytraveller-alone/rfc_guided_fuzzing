//----- (0000000140109F78) ----------------------------------------------------
const void **__fastcall ____Adjust_heap_PEAPEAV__vector_EV__allocator_E_std___std___JPEAV12_VCCompareCanonicalizedData__1__DnsOls_GetSortedCanonicalizedRdata__YAJPEAU_Dbase_Record___KAEAV__vector_PEAV__vector_EV__allocator_E_std___std__V__allocator_PEAV__vector_EV__allocator_E_std___std___2__2__Z__std__YAXPEAPEAV__vector_EV__allocator_E_std___0__J1__QEAPEAV10_VCCompareCanonicalizedData__1__DnsOls_GetSortedCanonicalizedRdata__YAJPEAU_Dbase_Record___KAEAV__vector_PEAV__vector_EV__allocator_E_std___std__V__allocator_PEAV__vector_EV__allocator_E_std___std___2__0__Z__Z(
        __int64 a1,
        __int64 a2,
        __int64 a3,
        const void ***a4)
{
  __int64 v4; // rdi
  __int64 i; // rbx
  __int64 v10; // r10
  __int64 v11; // rax
  size_t v12; // r14
  size_t v13; // r8
  size_t v14; // r15
  int v15; // eax
  bool v16; // al
  __int64 v17; // rax
  __int64 v18; // r15
  _BYTE *v19; // rdx
  char *v20; // rbp
  unsigned __int64 v21; // r14
  size_t v22; // r8
  int v23; // eax
  bool v24; // al
  __int64 v25; // rax
  __int64 v26; // rdi
  const void **result; // rax

  v4 = 2 * a2 + 2;
  for ( i = a2; v4 < a3; v4 = 2 * v4 + 2 )
  {
    v10 = *(_QWORD *)(a1 + 8 * v4 - 8);
    v11 = *(_QWORD *)(a1 + 8 * v4);
    v12 = *(_QWORD *)(v10 + 8) - *(_QWORD *)v10;
    v13 = v12;
    v14 = *(_QWORD *)(v11 + 8) - *(_QWORD *)v11;
    if ( v14 < v12 )
      v13 = *(_QWORD *)(v11 + 8) - *(_QWORD *)v11;
    v15 = memcmp_0(*(const void **)v11, *(const void **)v10, v13);
    if ( v15 )
    {
      v16 = v15 < 0;
    }
    else
    {
      if ( v14 < v12 )
        goto LABEL_9;
      v16 = 0;
    }
    if ( v16 )
LABEL_9:
      --v4;
    *(_QWORD *)(a1 + 8 * i) = *(_QWORD *)(a1 + 8 * v4);
    i = v4;
  }
  if ( v4 == a3 )
  {
    *(_QWORD *)(a1 + 8 * i) = *(_QWORD *)(a1 + 8 * a3 - 8);
    i = a3 - 1;
  }
  v17 = i - 1;
  while ( 1 )
  {
    v25 = v17 / 2;
    v26 = v25;
    if ( a2 >= i )
      break;
    v18 = *(_QWORD *)(a1 + 8 * v25);
    v19 = **a4;
    v20 = (char *)((_BYTE *)(*a4)[1] - v19);
    v21 = *(_QWORD *)(v18 + 8) - *(_QWORD *)v18;
    v22 = (size_t)v20;
    if ( v21 < (unsigned __int64)v20 )
      v22 = *(_QWORD *)(v18 + 8) - *(_QWORD *)v18;
    v23 = memcmp_0(*(const void **)v18, v19, v22);
    if ( v23 )
    {
      v24 = v23 < 0;
    }
    else
    {
      if ( v21 < (unsigned __int64)v20 )
        goto LABEL_21;
      v24 = 0;
    }
    if ( !v24 )
      break;
LABEL_21:
    *(_QWORD *)(a1 + 8 * i) = v18;
    v17 = v26 - 1;
    i = v26;
  }
  result = *a4;
  *(_QWORD *)(a1 + 8 * i) = *a4;
  return result;
}
