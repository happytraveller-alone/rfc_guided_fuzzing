//----- (000000014013FD3C) ----------------------------------------------------
void std::_Tree<std::_Tmap_traits<unsigned long,CDnsPolicy *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const,CDnsPolicy *>>,0>>::~_Tree<std::_Tmap_traits<unsigned long,CDnsPolicy *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const,CDnsPolicy *>>,0>>()
{
  __int64 v0; // rdi
  void ***v1; // rbx
  void ***v2; // r14

  v0 = qword_1401B9408;
  v1 = *(void ****)(qword_1401B9408 + 8);
  v2 = v1;
  if ( !*((_BYTE *)v1 + 41) )
  {
    do
    {
      std::_Tree<std::_Tmap_traits<_lookup_name *,_DnsTreeNode *,DnsSign::CLookupNameCompare,std::allocator<std::pair<_lookup_name * const,_DnsTreeNode *>>,0>>::_Erase(
        (__int64)&g_PolicyProcessingOrder,
        v2[2]);
      v2 = (void ***)*v2;
      operator delete(v1);
      v1 = v2;
    }
    while ( !*((_BYTE *)v2 + 41) );
    v0 = qword_1401B9408;
  }
  *(_QWORD *)(v0 + 8) = v0;
  *(_QWORD *)qword_1401B9408 = qword_1401B9408;
  *(_QWORD *)(qword_1401B9408 + 16) = qword_1401B9408;
  qword_1401B9410 = 0i64;
  operator delete((void *)qword_1401B9408);
}
// 140184CA8: using guessed type void __stdcall operator delete(void *);
// 1401B9408: using guessed type __int64 qword_1401B9408;
// 1401B9410: using guessed type __int64 qword_1401B9410;
