//----- (00000001400EA638) ----------------------------------------------------
__int64 __fastcall FreeNsec3NodeMap(__int64 a1)
{
  _QWORD *v1; // rax
  _QWORD *v3; // rbx
  _QWORD **v4; // rdi
  __int64 *v5; // rax
  __int64 i; // rax
  _QWORD *v7; // rdi
  _QWORD *j; // rbx
  __int64 result; // rax

  v1 = *(_QWORD **)(a1 + 8);
  v3 = (_QWORD *)*v1;
  if ( (_QWORD *)*v1 != v1 )
  {
    do
    {
      v4 = (_QWORD **)v3[3];
      Mem_Free(v4[46], 0i64, 0i64, (__int64)"ds\\dns\\server\\server\\olscore.cpp", 70);
      operator delete(v4);
      if ( !*((_BYTE *)v3 + 41) )
      {
        v5 = (__int64 *)v3[2];
        if ( *((_BYTE *)v5 + 41) )
        {
          for ( i = v3[1]; !*(_BYTE *)(i + 41) && v3 == *(_QWORD **)(i + 16); i = *(_QWORD *)(i + 8) )
            v3 = (_QWORD *)i;
          v3 = (_QWORD *)i;
        }
        else
        {
          do
          {
            v3 = v5;
            v5 = (__int64 *)*v5;
          }
          while ( !*((_BYTE *)v5 + 41) );
        }
      }
    }
    while ( v3 != *(_QWORD **)(a1 + 8) );
  }
  v7 = *(_QWORD **)(*(_QWORD *)(a1 + 8) + 8i64);
  for ( j = v7; !*((_BYTE *)j + 41); v7 = j )
  {
    std::_Tree<std::_Tmap_traits<_lookup_name *,_DnsTreeNode *,DnsSign::CLookupNameCompare,std::allocator<std::pair<_lookup_name * const,_DnsTreeNode *>>,0>>::_Erase(
      a1,
      (void **)j[2]);
    j = (_QWORD *)*j;
    operator delete(v7);
  }
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8i64) = *(_QWORD *)(a1 + 8);
  **(_QWORD **)(a1 + 8) = *(_QWORD *)(a1 + 8);
  result = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(result + 16) = result;
  *(_QWORD *)(a1 + 16) = 0i64;
  return result;
}
// 140184CA8: using guessed type void __stdcall operator delete(void *);
