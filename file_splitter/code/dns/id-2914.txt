//----- (0000000140152B48) ----------------------------------------------------
__int64 __fastcall DnsVal_InitAlgorithm(
        LPCWSTR pszAlgId,
        const WCHAR *a2,
        BCRYPT_ALG_HANDLE *a3,
        BCRYPT_ALG_HANDLE *a4,
        _DWORD *a5,
        _DWORD *a6)
{
  int Property; // edi
  CDnsClientSubnetRecordsTrie *v11; // rax
  unsigned __int16 v12; // dx
  _DWORD *v14; // rcx
  UCHAR v15[4]; // [rsp+30h] [rbp-20h] BYREF
  ULONG pcbResult; // [rsp+34h] [rbp-1Ch] BYREF
  BCRYPT_ALG_HANDLE phAlgorithm; // [rsp+38h] [rbp-18h] BYREF
  BCRYPT_ALG_HANDLE hAlgorithm; // [rsp+40h] [rbp-10h] BYREF
  int pbOutput; // [rsp+78h] [rbp+28h] BYREF

  phAlgorithm = 0i64;
  hAlgorithm = 0i64;
  if ( a2 )
  {
    Property = BCryptOpenAlgorithmProvider(&phAlgorithm, a2, 0i64, 0);
    if ( Property < 0 )
    {
      v11 = WPP_GLOBAL_Control;
      if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        || (*((_BYTE *)WPP_GLOBAL_Control + 28) & 1) == 0
        || *((_BYTE *)WPP_GLOBAL_Control + 25) < 4u )
      {
        goto LABEL_25;
      }
      v12 = 60;
LABEL_7:
      WPP_SF_DS(
        *((_QWORD *)v11 + 2),
        v12,
        (__int64)&WPP_c53e2308f6cf3329db3757b8a77c9921_Traceguids,
        Property,
        (__int64)a2);
LABEL_25:
      if ( phAlgorithm )
        BCryptCloseAlgorithmProvider(phAlgorithm, 0);
      if ( hAlgorithm )
        BCryptCloseAlgorithmProvider(hAlgorithm, 0);
      return (unsigned int)Property;
    }
    Property = BCryptGetProperty(phAlgorithm, L"ObjectLength", (PUCHAR)&pbOutput, 4u, &pcbResult, 0);
    if ( Property < 0 )
    {
      v11 = WPP_GLOBAL_Control;
      if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        || (*((_BYTE *)WPP_GLOBAL_Control + 28) & 1) == 0
        || *((_BYTE *)WPP_GLOBAL_Control + 25) < 4u )
      {
        goto LABEL_25;
      }
      v12 = 61;
      goto LABEL_7;
    }
    Property = BCryptGetProperty(phAlgorithm, L"HashDigestLength", v15, 4u, &pcbResult, 0);
    if ( Property < 0 )
    {
      v11 = WPP_GLOBAL_Control;
      if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        || (*((_BYTE *)WPP_GLOBAL_Control + 28) & 1) == 0
        || *((_BYTE *)WPP_GLOBAL_Control + 25) < 4u )
      {
        goto LABEL_25;
      }
      v12 = 62;
      goto LABEL_7;
    }
  }
  else
  {
    pbOutput = 0;
    *(_DWORD *)v15 = 0;
  }
  if ( pszAlgId )
  {
    Property = BCryptOpenAlgorithmProvider(&hAlgorithm, pszAlgId, 0i64, 0);
    if ( Property < 0 )
    {
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_BYTE *)WPP_GLOBAL_Control + 28) & 1) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 25) >= 4u )
      {
        WPP_SF_DS(
          *((_QWORD *)WPP_GLOBAL_Control + 2),
          0x3Fu,
          (__int64)&WPP_c53e2308f6cf3329db3757b8a77c9921_Traceguids,
          Property,
          (__int64)pszAlgId);
      }
      goto LABEL_25;
    }
LABEL_36:
    v14 = a5;
    *a3 = phAlgorithm;
    *a4 = hAlgorithm;
    *v14 = pbOutput;
    *a6 = *(_DWORD *)v15;
    return 0i64;
  }
  if ( a2 )
    goto LABEL_36;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 28) & 1) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 25) >= 4u )
  {
    WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 2), 0x40u, (__int64)&WPP_c53e2308f6cf3329db3757b8a77c9921_Traceguids);
  }
  return 3221225712i64;
}
