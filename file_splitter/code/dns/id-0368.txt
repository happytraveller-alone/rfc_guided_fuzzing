//----- (000000014002F95C) ----------------------------------------------------
__int64 __fastcall Dp_LoadFromCrossRef(LDAP *ld, LDAPMessage *entry, __int64 a3, _DWORD *a4)
{
  LDAP *v5; // rdi
  WCHAR *v6; // r12
  __int64 v7; // r13
  PWCHAR *RangedAttributeValues; // r14
  __int64 v10; // rsi
  void *v11; // rax
  const wchar_t **valuesW; // rax
  CDnsClientSubnetRecordsTrie *v13; // rcx
  unsigned __int16 v14; // dx
  int v15; // r15d
  __int64 v16; // rdx
  __int64 v17; // r8
  __int64 v18; // rdx
  __int64 v19; // r8
  PWCHAR *v21; // rax
  void *v22; // rax
  const wchar_t **v23; // rax
  int v24; // eax
  __int64 v25; // r8
  __int64 v26; // r9
  void *SD; // rbx
  LDAP *v28; // rbx
  PWCHAR *v29; // rax
  void *v30; // rax
  PWCHAR *v31; // rax
  void *v32; // rax
  void *v33; // rax
  char **v34; // r12
  unsigned int v35; // ecx
  __int64 v36; // rdx
  __int64 v37; // rdx
  _QWORD *v38; // r13
  int v39; // ebx
  char **v40; // rcx
  unsigned int v41; // r15d
  char **v42; // rax
  CDnsClientSubnetRecordsTrie *v43; // rcx
  _QWORD *v44; // rax
  __int64 v45; // rbx
  __int64 v46; // r8
  __int64 v47; // rbx
  int v48; // r8d
  __int64 v49; // r9
  int v50; // r11d
  unsigned __int16 **v51; // rcx
  const char *v52; // r9
  bool v53; // zf
  LDAPMessage *v54; // r12
  int v55; // edx
  unsigned __int16 *v56; // rax
  const wchar_t **v57; // rax
  __int64 v58; // rdx
  int v59; // eax
  LDAP *v60; // rax
  LDAP *v61; // rax
  CDnsClientSubnetRecordsTrie *v62; // rcx
  const char *v63; // r9
  unsigned __int16 v64; // dx
  int v65; // rax^4
  PSID v66; // rbx
  void *v67; // rdx
  int HaveAce; // ebx
  int LastError; // r9d
  unsigned __int16 v70; // dx
  const WCHAR *v71; // rax
  __int64 v72; // [rsp+20h] [rbp-99h]
  int v73; // [rsp+28h] [rbp-91h]
  int v74; // [rsp+28h] [rbp-91h]
  int v75; // [rsp+40h] [rbp-79h]
  char *dnW; // [rsp+50h] [rbp-69h]
  __int64 v78; // [rsp+58h] [rbp-61h] BYREF
  LDAP *lda; // [rsp+60h] [rbp-59h] BYREF
  int v80; // [rsp+68h] [rbp-51h]
  __int64 v81; // [rsp+70h] [rbp-49h] BYREF
  LDAPMessage *res; // [rsp+78h] [rbp-41h]
  _DWORD *v83; // [rsp+80h] [rbp-39h]
  __int128 v84; // [rsp+90h] [rbp-29h] BYREF
  __int128 v85; // [rsp+A0h] [rbp-19h] BYREF
  __int128 v86; // [rsp+B0h] [rbp-9h]
  __int64 v87; // [rsp+C0h] [rbp+7h]

  v80 = -1;
  lda = ld;
  LODWORD(v5) = 13;
  v6 = 0i64;
  LODWORD(v78) = 13;
  res = 0i64;
  v83 = a4;
  v7 = a3;
  RangedAttributeValues = 0i64;
  v75 = 1;
  EnterCriticalSection(&g_DpCS);
  if ( v7 )
  {
    v10 = v7;
    v80 = *(_DWORD *)(v7 + 16);
    v81 = v7;
  }
  else
  {
    v81 = (__int64)Mem_AllocZero(0x88ui64, 12i64, "ds\\dns\\server\\server\\dpart.c", 2560);
    v10 = v81;
    if ( !v81 )
      goto LABEL_9;
  }
  *(_DWORD *)(v10 + 96) = 0;
  dnW = (char *)ldap_get_dnW(ld, entry);
  v6 = (WCHAR *)dnW;
  if ( !dnW )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_q(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x29u,
        (__int64)&WPP_0f7f6e0c97433b7ed77e9ce4b2e20f93_Traceguids,
        entry);
    }
    goto LABEL_24;
  }
  Timeout_FreeWithFunctionEx(*(_QWORD *)(v10 + 48), 0i64, (__int64)"ds\\dns\\server\\server\\dpart.c", 2581);
  v11 = Dns_StringCopyAllocate(dnW, 0, 1i64, 1);
  *(_QWORD *)(v10 + 48) = v11;
  if ( v11 )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_S(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x2Au,
        (__int64)&WPP_0f7f6e0c97433b7ed77e9ce4b2e20f93_Traceguids,
        (const unsigned __int16 *)dnW);
    }
    valuesW = (const wchar_t **)ldap_get_valuesW(ld, entry, (const PWSTR)L"Enabled");
    RangedAttributeValues = (PWCHAR *)valuesW;
    if ( valuesW && *valuesW && !_wcsicmp(*valuesW, L"FALSE") )
    {
      v13 = WPP_GLOBAL_Control;
      if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        || (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) == 0
        || *((_BYTE *)WPP_GLOBAL_Control + 65) < 4u )
      {
        goto LABEL_23;
      }
      v14 = 43;
      goto LABEL_22;
    }
    ldap_value_freeW(RangedAttributeValues);
    v21 = ldap_get_valuesW(ld, entry, off_1401B6C60);
    RangedAttributeValues = v21;
    if ( v21 && *v21 )
    {
      Timeout_FreeWithFunctionEx(*(_QWORD *)(v10 + 72), 0i64, (__int64)"ds\\dns\\server\\server\\dpart.c", 2627);
      v22 = Dns_StringCopyAllocate((char *)*RangedAttributeValues, 0, 1i64, 1);
      *(_QWORD *)(v10 + 72) = v22;
      if ( !v22 )
      {
LABEL_42:
        LODWORD(v5) = 14;
        goto LABEL_23;
      }
      ldap_value_freeW(RangedAttributeValues);
      v23 = (const wchar_t **)ldap_get_valuesW(ld, entry, (const PWSTR)L"systemFlags");
      RangedAttributeValues = (PWCHAR *)v23;
      if ( v23 && *v23 )
      {
        v24 = _wtoi(*v23);
        *(_DWORD *)(v10 + 88) = v24;
        if ( (v24 & 3) != 1 )
        {
          if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
            && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
          {
            WPP_SF_SDS(*((_QWORD *)WPP_GLOBAL_Control + 7), (__int64)&WPP_GLOBAL_Control, v25, v26, v24, (__int64)dnW);
          }
          goto LABEL_23;
        }
        if ( !wcsncmp((const wchar_t *)dnW, L"CN=Enterprise Schema,", 0x15ui64)
          || !wcsncmp((const wchar_t *)dnW, L"CN=Enterprise Configuration,", 0x1Cui64) )
        {
          v13 = WPP_GLOBAL_Control;
          if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            || (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) == 0
            || *((_BYTE *)WPP_GLOBAL_Control + 65) < 4u )
          {
            goto LABEL_23;
          }
          v14 = 47;
LABEL_22:
          WPP_SF_S(
            *((_QWORD *)v13 + 7),
            v14,
            (__int64)&WPP_0f7f6e0c97433b7ed77e9ce4b2e20f93_Traceguids,
            (const unsigned __int16 *)dnW);
LABEL_23:
          v7 = a3;
          goto LABEL_24;
        }
        SD = Ds_ReadSD(ld, entry);
        Timeout_FreeWithFunctionEx(*(_QWORD *)(v10 + 128), 0i64, (__int64)"ds\\dns\\server\\server\\dpart.c", 2690);
        *(_QWORD *)(v10 + 128) = SD;
        ldap_value_freeW(RangedAttributeValues);
        v28 = lda;
        v29 = ldap_get_valuesW(lda, entry, (const PWSTR)L"nCName");
        RangedAttributeValues = v29;
        if ( v29 && *v29 )
        {
          Timeout_FreeWithFunctionEx(*(_QWORD *)(v10 + 40), 0i64, (__int64)"ds\\dns\\server\\server\\dpart.c", 2711);
          v30 = Dns_StringCopyAllocate((char *)*RangedAttributeValues, 0, 1i64, 1);
          *(_QWORD *)(v10 + 40) = v30;
          if ( !v30 )
            goto LABEL_42;
          v75 = 0;
          ldap_value_freeW(RangedAttributeValues);
          v31 = ldap_get_valuesW(v28, entry, (const PWSTR)L"dnsRoot");
          RangedAttributeValues = v31;
          if ( v31 && *v31 )
          {
            Timeout_FreeWithFunctionEx(*(_QWORD *)(v10 + 32), 0i64, (__int64)"ds\\dns\\server\\server\\dpart.c", 2768);
            v32 = Dns_StringCopyAllocate((char *)*RangedAttributeValues, 0, 1i64, 1);
            v5 = 0i64;
            *(_QWORD *)(v10 + 32) = v32;
            if ( !v32 )
              goto LABEL_42;
            Timeout_FreeWithFunctionEx(*(_QWORD *)(v10 + 24), 0i64, (__int64)"ds\\dns\\server\\server\\dpart.c", 2776);
            v33 = Dns_StringCopyAllocate((char *)*RangedAttributeValues, 0, 1i64, 2);
            *(_QWORD *)(v10 + 24) = v33;
            if ( !v33 )
              goto LABEL_42;
            ldap_value_freeW(RangedAttributeValues);
            RangedAttributeValues = (PWCHAR *)Ds_GetRangedAttributeValues(
                                                v28,
                                                entry,
                                                (WCHAR *)dnW,
                                                L"msDS-NC-Replica-Locations",
                                                v72,
                                                v73,
                                                (ULONG *)&v78);
            if ( (v78 & 0xFFFFFFEF) != 0 )
            {
              if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
                && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
              {
                WPP_SF_DS(
                  *((_QWORD *)WPP_GLOBAL_Control + 7),
                  0x33u,
                  (__int64)&WPP_0f7f6e0c97433b7ed77e9ce4b2e20f93_Traceguids,
                  v78,
                  (__int64)dnW);
              }
              LODWORD(v5) = 9002;
              goto LABEL_23;
            }
            ldap_value_freeW(0i64);
            v34 = (char **)Ds_GetRangedAttributeValues(
                             v28,
                             entry,
                             (WCHAR *)dnW,
                             L"msDS-NC-RO-Replica-Locations",
                             v72,
                             v74,
                             (ULONG *)&v78);
            Timeout_FreeWithFunctionEx(
              *(_QWORD *)(v10 + 80),
              (__int64)freeStringArray,
              (__int64)"ds\\dns\\server\\server\\dpart.c",
              2833);
            if ( RangedAttributeValues && *RangedAttributeValues )
            {
              if ( v34 )
              {
                v35 = 0;
                LODWORD(v36) = 0;
                do
                {
                  v36 = (unsigned int)(v36 + 1);
                  ++v35;
                }
                while ( RangedAttributeValues[v36] );
                LODWORD(v37) = 0;
                if ( *v34 )
                {
                  do
                  {
                    v37 = (unsigned int)(v37 + 1);
                    ++v35;
                  }
                  while ( v34[v37] );
                }
                if ( v35 >= 0xFFFFFFF )
                {
                  LODWORD(v5) = 87;
LABEL_70:
                  v6 = (WCHAR *)dnW;
                  goto LABEL_23;
                }
                v38 = Mem_AllocZero(8 * v35 + 8, 12i64, "ds\\dns\\server\\server\\dpart.c", 2866);
                v39 = 0;
                if ( *RangedAttributeValues )
                {
                  v40 = (char **)RangedAttributeValues;
                  while ( 1 )
                  {
                    v38[v39] = Dns_StringCopyAllocate(*v40, 0, 1i64, 1);
                    if ( !*(_QWORD *)((char *)v38 + (_QWORD)v5) )
                      goto LABEL_82;
                    v5 = (LDAP *)(8i64 * (unsigned int)++v39);
                    v40 = (char **)((char *)RangedAttributeValues + (_QWORD)v5);
                    if ( !*(PWCHAR *)((char *)RangedAttributeValues + (_QWORD)v5) )
                    {
                      v5 = 0i64;
                      break;
                    }
                  }
                }
                v41 = 0;
                if ( *v34 )
                {
                  v42 = v34;
                  while ( 1 )
                  {
                    v38[v39] = Dns_StringCopyAllocate(*v42, 0, 1i64, 1);
                    if ( !*(_QWORD *)((char *)v38 + (_QWORD)v5) )
                      break;
                    ++v41;
                    ++v39;
                    v5 = (LDAP *)(8i64 * v41);
                    v42 = (char **)((char *)v34 + (_QWORD)v5);
                    if ( !*(char **)((char *)v34 + (_QWORD)v5) )
                    {
                      LODWORD(v5) = 0;
                      goto LABEL_81;
                    }
                  }
LABEL_82:
                  LODWORD(v5) = 14;
                  goto LABEL_70;
                }
LABEL_81:
                *(_QWORD *)(v10 + 80) = v38;
              }
              else
              {
                *(_QWORD *)(v10 + 80) = RangedAttributeValues;
                RangedAttributeValues = 0i64;
              }
              freeStringArray(RangedAttributeValues);
              freeStringArray(v34);
              v43 = WPP_GLOBAL_Control;
              RangedAttributeValues = 0i64;
              if ( (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0 )
              {
                if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                  && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
                {
                  WPP_SF_s(
                    *((_QWORD *)WPP_GLOBAL_Control + 7),
                    0x35u,
                    (__int64)&WPP_0f7f6e0c97433b7ed77e9ce4b2e20f93_Traceguids,
                    *(const char **)(v10 + 24));
                  v43 = WPP_GLOBAL_Control;
                }
                v44 = *(_QWORD **)(v10 + 80);
                if ( *v44 )
                {
                  v45 = 0i64;
                  v46 = 0i64;
                  do
                  {
                    if ( v43 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                      && (*((_DWORD *)v43 + 17) & 0x400) != 0
                      && *((_BYTE *)v43 + 65) >= 4u )
                    {
                      WPP_SF_DS(
                        *((_QWORD *)v43 + 7),
                        0x36u,
                        (__int64)&WPP_0f7f6e0c97433b7ed77e9ce4b2e20f93_Traceguids,
                        (int)v5,
                        v44[v46]);
                      v43 = WPP_GLOBAL_Control;
                    }
                    v44 = *(_QWORD **)(v10 + 80);
                    ++v45;
                    LODWORD(v5) = (_DWORD)v5 + 1;
                    v46 = v45;
                  }
                  while ( v44[v45] );
                }
                LODWORD(v5) = 0;
              }
              v47 = (__int64)dnW;
            }
            else
            {
              if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                || (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) == 0 )
              {
                v47 = (__int64)dnW;
              }
              else
              {
                v47 = (__int64)dnW;
                if ( *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
                  WPP_SF_DS(
                    *((_QWORD *)WPP_GLOBAL_Control + 7),
                    0x34u,
                    (__int64)&WPP_0f7f6e0c97433b7ed77e9ce4b2e20f93_Traceguids,
                    0,
                    (__int64)dnW);
              }
              *(_QWORD *)(v10 + 80) = 0i64;
            }
            ldap_value_freeW(RangedAttributeValues);
            RangedAttributeValues = 0i64;
            v50 = 0;
            if ( qword_1401B6B28 )
            {
              v51 = *(unsigned __int16 ***)(v10 + 80);
              if ( v51 )
              {
                while ( 1 )
                {
                  v56 = *v51;
                  if ( !*v51 )
                    break;
                  v49 = qword_1401B6B28 - (_QWORD)v56;
                  do
                  {
                    v55 = *(unsigned __int16 *)((char *)v56 + v49);
                    v48 = *v56 - v55;
                    if ( v48 )
                      break;
                    ++v56;
                  }
                  while ( v55 );
                  if ( !v48 )
                  {
                    *(_DWORD *)(v10 + 100) |= 0x10u;
                    v50 = 1;
                    goto LABEL_100;
                  }
                  ++v51;
                }
              }
            }
            *(_DWORD *)(v10 + 100) &= ~0x10u;
LABEL_100:
            if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
              && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
              && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
            {
              v52 = "false";
              if ( v50 )
                v52 = "true";
              WPP_SF_sds(
                *((_QWORD *)WPP_GLOBAL_Control + 7),
                0x37u,
                (__int64)&WPP_0f7f6e0c97433b7ed77e9ce4b2e20f93_Traceguids,
                v52,
                *(_DWORD *)(v10 + 100),
                *(_QWORD *)(v10 + 24));
            }
            *(_DWORD *)(v10 + 100) &= ~0x20u;
            v15 = 0;
            *(_DWORD *)(v10 + 16) = 0;
            v53 = (*(_BYTE *)(v10 + 100) & 0x10) == 0;
            LODWORD(v78) = 0;
            if ( !v53 )
            {
              v5 = lda;
              res = Ds_LoadOrCreateDSObject(lda, *(PWSTR *)(v10 + 40), 0i64, 0, 0i64, &v78);
              v54 = res;
              if ( !res )
              {
                *(_DWORD *)(v10 + 16) = 3;
                LODWORD(v5) = 9905;
                goto LABEL_109;
              }
              ldap_value_freeW(0i64);
              v57 = (const wchar_t **)ldap_get_valuesW(v5, v54, (const PWSTR)L"instanceType");
              LODWORD(v5) = 0;
              RangedAttributeValues = (PWCHAR *)v57;
              if ( v57 && *v57 )
              {
                v59 = wcstol(*v57, 0i64, 10);
                LODWORD(v49) = v59;
                if ( (v59 & 0x10) != 0 )
                {
                  *(_DWORD *)(v10 + 16) = 1;
                }
                else if ( (v59 & 0x20) != 0 )
                {
                  *(_DWORD *)(v10 + 16) = 2;
                }
                if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                  && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
                  && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
                {
                  WPP_SF_DDS(
                    *((_QWORD *)WPP_GLOBAL_Control + 7),
                    0x38u,
                    (__int64)&WPP_0f7f6e0c97433b7ed77e9ce4b2e20f93_Traceguids,
                    v59,
                    *(_DWORD *)(v10 + 16),
                    v47);
                }
              }
              if ( v80 != 1 || *(_DWORD *)(v10 + 16) || (*(_BYTE *)(v10 + 104) & 2) != 0 )
              {
                if ( *(_DWORD *)(v10 + 16) == 1 && (*(_BYTE *)(v10 + 104) & 1) == 0 )
                {
                  v61 = *(LDAP **)(v10 + 32);
                  v84 = DNS_EVENT_DP_REPLICATION_START;
                  lda = v61;
                  Eventlog_LogEvent((__int64)&v84, v58, 1u, (unsigned __int16 **)&lda, (unsigned __int8 *)1, 0, 0, 0i64);
                  *(_DWORD *)(v10 + 104) |= 1u;
                }
              }
              else
              {
                v60 = *(LDAP **)(v10 + 32);
                v84 = DNS_EVENT_DP_REPLICATION_FINISHED;
                lda = v60;
                Eventlog_LogEvent((__int64)&v84, v58, 1u, (unsigned __int16 **)&lda, (unsigned __int8 *)1, 0, 0, 0i64);
                *(_DWORD *)(v10 + 104) |= 2u;
              }
            }
            if ( g_pszDomainDefaultDpFqdn && !_stricmp(g_pszDomainDefaultDpFqdn, *(const char **)(v10 + 24)) )
            {
              *(_DWORD *)(v10 + 100) |= 5u;
              v62 = WPP_GLOBAL_Control;
              if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
                && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
              {
                v63 = g_pszDomainDefaultDpFqdn;
                v64 = 57;
                v65 = HIDWORD(g_pDomainDp);
LABEL_155:
                HIDWORD(v72) = v65;
                WPP_SF_sq(*((_QWORD *)v62 + 7), v64, (__int64)&WPP_0f7f6e0c97433b7ed77e9ce4b2e20f93_Traceguids, v63);
              }
            }
            else
            {
              if ( !g_pszForestDefaultDpFqdn || _stricmp(g_pszForestDefaultDpFqdn, *(const char **)(v10 + 24)) )
              {
                *(_DWORD *)(v10 + 100) &= 0xFFFFFFF2;
                goto LABEL_157;
              }
              *(_DWORD *)(v10 + 100) |= 9u;
              v62 = WPP_GLOBAL_Control;
              if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
                && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
              {
                v63 = g_pszForestDefaultDpFqdn;
                v64 = 58;
                v65 = HIDWORD(g_pForestDp);
                goto LABEL_155;
              }
            }
LABEL_157:
            if ( (*(_DWORD *)(v10 + 100) & 8) != 0 || (*(_BYTE *)(v10 + 100) & 4) != 0 )
            {
              v66 = (PSID)g_pDomainControllersSid;
              v67 = *(void **)(v10 + 128);
              if ( (*(_DWORD *)(v10 + 100) & 8) != 0 )
                v66 = g_pEnterpriseDomainControllersSid;
              v87 = 0i64;
              v85 = 0i64;
              v86 = 0i64;
              if ( (unsigned int)CSecurityDescriptor::Attach((PACL *)&v85, v67, v48, v49) )
              {
                CSecurityDescriptor::~CSecurityDescriptor((CSecurityDescriptor *)&v85);
              }
              else
              {
                if ( *((_QWORD *)&v86 + 1) )
                  HaveAce = CSecurityDescriptor::DoesPrincipleHaveAce((PACL *)&v85, v66);
                else
                  HaveAce = 0;
                CSecurityDescriptor::~CSecurityDescriptor((CSecurityDescriptor *)&v85);
                if ( HaveAce )
                  goto LABEL_109;
              }
              Dp_AlterPartitionSecurity(*(_QWORD *)(v10 + 40), ((*(_BYTE *)(v10 + 100) & 8) != 0) + 1);
            }
LABEL_109:
            v6 = (WCHAR *)dnW;
LABEL_110:
            v7 = a3;
            goto LABEL_25;
          }
          if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            || (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) == 0
            || *((_BYTE *)WPP_GLOBAL_Control + 65) < 4u )
          {
            goto LABEL_23;
          }
          LastError = LdapGetLastError();
          v70 = 50;
          v71 = L"dnsRoot";
        }
        else
        {
          if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            || (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) == 0
            || *((_BYTE *)WPP_GLOBAL_Control + 65) < 4u )
          {
            goto LABEL_23;
          }
          LastError = LdapGetLastError();
          v70 = 48;
          v71 = L"nCName";
        }
      }
      else
      {
        if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          || (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) == 0
          || *((_BYTE *)WPP_GLOBAL_Control + 65) < 4u )
        {
          goto LABEL_23;
        }
        LastError = LdapGetLastError();
        v70 = 45;
        v71 = L"systemFlags";
      }
    }
    else
    {
      if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        || (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) == 0 )
      {
        goto LABEL_23;
      }
      if ( *((_BYTE *)WPP_GLOBAL_Control + 65) < 4u )
      {
        v15 = 1;
        goto LABEL_110;
      }
      LastError = LdapGetLastError();
      v70 = 44;
      v71 = off_1401B6C60;
    }
    WPP_SF_DSS(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      v70,
      (__int64)&WPP_0f7f6e0c97433b7ed77e9ce4b2e20f93_Traceguids,
      LastError,
      (__int64)v71,
      (__int64)dnW);
    goto LABEL_23;
  }
LABEL_9:
  LODWORD(v5) = 14;
LABEL_24:
  v15 = v75;
LABEL_25:
  ldap_msgfree(res);
  if ( v10 && !v7 )
  {
    if ( !(_DWORD)v5 && !v15 )
      goto LABEL_32;
    Dp_FreeDpInfo(&v81, v16, v17);
    v10 = v81;
  }
  if ( v15 )
    LODWORD(v5) = 0;
LABEL_32:
  LeaveCriticalSection(&g_DpCS);
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    LODWORD(v72) = (_DWORD)v5;
    WPP_SF_qdS(*((_QWORD *)WPP_GLOBAL_Control + 7), v18, v19, v10, v72, v6);
  }
  ldap_memfreeW(v6);
  ldap_value_freeW(RangedAttributeValues);
  if ( v83 )
    *v83 = (_DWORD)v5;
  return v10;
}
// 14002FB70: variable 'v16' is possibly undefined
// 14002FB70: variable 'v17' is possibly undefined
// 14002FBBE: variable 'v18' is possibly undefined
// 14002FBBE: variable 'v19' is possibly undefined
// 14002FBBE: variable 'v72' is possibly undefined
// 14002FE50: variable 'v73' is possibly undefined
// 14002FEC6: variable 'v74' is possibly undefined
// 14003031B: variable 'v58' is possibly undefined
// 140030463: variable 'v48' is possibly undefined
// 140030463: variable 'v49' is possibly undefined
// 1400305D9: variable 'v25' is possibly undefined
// 1400305D9: variable 'v26' is possibly undefined
// 1401860D8: using guessed type __int128 DNS_EVENT_DP_REPLICATION_START;
// 140186128: using guessed type __int128 DNS_EVENT_DP_REPLICATION_FINISHED;
// 14018B2C8: using guessed type wchar_t aMsdsNcReplicaL[26];
// 14018B300: using guessed type wchar_t aMsdsNcRoReplic[29];
// 1401B6B28: using guessed type __int64 qword_1401B6B28;
// 1401B8C98: using guessed type __int64 g_pDomainDp;
// 1401B8CA0: using guessed type __int64 g_pForestDp;
// 1401C94F0: using guessed type __int64 g_pDomainControllersSid;
