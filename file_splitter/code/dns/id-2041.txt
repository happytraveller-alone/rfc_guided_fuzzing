//----- (00000001400FC588) ----------------------------------------------------
__int64 __fastcall gatherMasterAddressesForSite(
        struct _zone_info *a1,
        unsigned __int16 *a2,
        unsigned __int16 *a3,
        struct _DnsAddrArray *a4)
{
  unsigned __int64 v4; // r12
  const WCHAR *v5; // rbx
  const WCHAR *v6; // r14
  struct _zone_info *v7; // r15
  struct _DnsAddrArray *v8; // rdi
  unsigned int v9; // r13d
  int DcOpenW; // eax
  CDnsClientSubnetRecordsTrie *v11; // r10
  int DcNextW; // eax
  DWORD DcNameW; // eax
  bool v14; // di
  int v15; // ebx
  size_t v16; // r8
  __int64 v17; // rax
  LPWSTR DomainControllerName; // rax
  const char *v19; // r9
  int v20; // r14d
  int v21; // r15d
  __int64 i; // rbx
  LPSOCKADDR lpSockaddr; // rdx
  int v24; // eax
  const char *v25; // rax
  unsigned __int16 v26; // dx
  __int64 v27; // r8
  struct _DnsAddrArray *v28; // rdi
  const char *v29; // rax
  const char *v30; // rax
  char v32; // [rsp+40h] [rbp-89h]
  bool v33; // [rsp+41h] [rbp-88h]
  LPWSTR DnsHostName; // [rsp+48h] [rbp-81h] BYREF
  ULONG SockAddressCount; // [rsp+50h] [rbp-79h] BYREF
  unsigned __int16 *v36; // [rsp+58h] [rbp-71h]
  PDOMAIN_CONTROLLER_INFOW DomainControllerInfo; // [rsp+60h] [rbp-69h] BYREF
  LPSOCKET_ADDRESS SockAddresses; // [rsp+68h] [rbp-61h] BYREF
  HANDLE GetDcContextHandle; // [rsp+70h] [rbp-59h] BYREF
  struct _DnsAddrArray *v40; // [rsp+78h] [rbp-51h]
  struct _zone_info *v41; // [rsp+80h] [rbp-49h]
  unsigned __int16 *v42; // [rsp+88h] [rbp-41h]
  struct _DnsAddr v43; // [rsp+90h] [rbp-39h] BYREF
  wchar_t String2[4]; // [rsp+D0h] [rbp+7h] BYREF

  v4 = 0i64;
  v42 = a2;
  v5 = a3;
  v41 = a1;
  v6 = a2;
  v40 = a4;
  v7 = a1;
  v36 = a3;
  v8 = a4;
  GetDcContextHandle = 0i64;
  v9 = 0;
  v33 = (unsigned int)DnsAddrArray_GetFamilyCount((__int64)g_ServerAddrs, 23) == 0;
  DcOpenW = DsGetDcOpenW(v6, 1u, v5, 0i64, 0i64, 0x1000u, &GetDcContextHandle);
  if ( DcOpenW )
  {
    v11 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x200000) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
    {
      WPP_SF_DSS(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x13u,
        (__int64)&WPP_9f3fa3b6e1fd31b2a2f779badde708de_Traceguids,
        DcOpenW,
        (__int64)v5,
        (__int64)v6);
      v11 = WPP_GLOBAL_Control;
    }
    goto LABEL_104;
  }
  v32 = 1;
LABEL_7:
  SockAddressCount = 0;
  SockAddresses = 0i64;
  DnsHostName = 0i64;
  DcNextW = DsGetDcNextW(GetDcContextHandle, &SockAddressCount, &SockAddresses, &DnsHostName);
  if ( !DcNextW )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x200000) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
    {
      WPP_SF_SD(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x15u,
        (__int64)&WPP_9f3fa3b6e1fd31b2a2f779badde708de_Traceguids,
        DnsHostName);
    }
    DomainControllerInfo = 0i64;
    DcNameW = DsGetDcNameW(DnsHostName, v6, 0i64, 0i64, 0x1000u, &DomainControllerInfo);
    v14 = 0;
    wcscpy(String2, L"\\\\");
    v15 = DcNameW;
    if ( !DcNameW )
    {
      if ( DomainControllerInfo )
      {
        if ( DomainControllerInfo->DomainControllerName )
        {
          v16 = -1i64;
          do
            ++v16;
          while ( String2[v16] );
          if ( !wcsncmp(DomainControllerInfo->DomainControllerName, String2, v16) )
          {
            v17 = -1i64;
            do
              ++v17;
            while ( String2[v17] );
            v14 = _wcsicmp(&DomainControllerInfo->DomainControllerName[v17], DnsHostName) == 0;
          }
        }
      }
    }
    v11 = WPP_GLOBAL_Control;
    if ( (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x200000) == 0 )
      goto LABEL_35;
    if ( v15 )
    {
      if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        || *((_BYTE *)WPP_GLOBAL_Control + 65) < 4u )
      {
        goto LABEL_35;
      }
      WPP_SF_DS(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x17u,
        (__int64)&WPP_9f3fa3b6e1fd31b2a2f779badde708de_Traceguids,
        v15,
        (__int64)DnsHostName);
    }
    else
    {
      if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        || *((_BYTE *)WPP_GLOBAL_Control + 65) < 5u )
      {
        goto LABEL_35;
      }
      if ( DomainControllerInfo )
        DomainControllerName = DomainControllerInfo->DomainControllerName;
      else
        DomainControllerName = 0i64;
      v19 = "non-writable";
      if ( v14 )
        v19 = "writable";
      WPP_SF_sSS(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x16u,
        (__int64)&WPP_9f3fa3b6e1fd31b2a2f779badde708de_Traceguids,
        v19,
        (__int64)DnsHostName,
        (__int64)DomainControllerName);
    }
    v11 = WPP_GLOBAL_Control;
LABEL_35:
    v20 = 0;
    v21 = 0;
    if ( !v14 )
      goto LABEL_86;
    for ( i = 0i64; ; ++i )
    {
      if ( !SockAddresses )
      {
        v4 = 0i64;
        goto LABEL_89;
      }
      if ( v4 >= SockAddressCount )
        goto LABEL_86;
      lpSockaddr = SockAddresses[i].lpSockaddr;
      if ( lpSockaddr->sa_family == 23 && v21 >= 3 || lpSockaddr->sa_family == 2 && v20 >= 3 )
      {
        if ( v11 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)v11 + 17) & 0x200000) != 0
          && *((_BYTE *)v11 + 65) >= 5u )
        {
          WPP_SF_D(
            *((_QWORD *)v11 + 7),
            0x18u,
            (__int64)&WPP_9f3fa3b6e1fd31b2a2f779badde708de_Traceguids,
            lpSockaddr->sa_family);
          goto LABEL_47;
        }
      }
      else if ( lpSockaddr->sa_family == 23 && v33 )
      {
        if ( v11 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)v11 + 17) & 0x200000) != 0
          && *((_BYTE *)v11 + 65) >= 5u )
        {
          WPP_SF_(*((_QWORD *)v11 + 7), 0x19u, (__int64)&WPP_9f3fa3b6e1fd31b2a2f779badde708de_Traceguids);
          goto LABEL_47;
        }
      }
      else
      {
        if ( !(unsigned int)DnsAddr_Build(&v43, &lpSockaddr->sa_family, lpSockaddr->sa_family) )
          goto LABEL_47;
        LOBYTE(v24) = DnsAddr_IsLoopback(&v43, 0);
        if ( v24 )
        {
          v11 = WPP_GLOBAL_Control;
          if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x200000) != 0
            && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
          {
            v25 = DnsAddr_Ntoa((struct in_addr *)&v43);
            v26 = 26;
            goto LABEL_61;
          }
        }
        else if ( (unsigned int)DnsAddrArray_ContainsAddr((__int64)g_ServerAddrs, &v43, 3) )
        {
          v11 = WPP_GLOBAL_Control;
          if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x200000) != 0
            && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
          {
            v25 = DnsAddr_Ntoa((struct in_addr *)&v43);
            v26 = 27;
            goto LABEL_61;
          }
        }
        else
        {
          if ( !validateMasterIp(v41, (struct in_addr *)&v43) )
          {
            v11 = WPP_GLOBAL_Control;
            if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
              && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x200000) != 0
              && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
            {
              v30 = DnsAddr_Ntoa((struct in_addr *)&v43);
              WPP_SF_Ss(
                *((_QWORD *)WPP_GLOBAL_Control + 7),
                0x1Cu,
                (__int64)&WPP_9f3fa3b6e1fd31b2a2f779badde708de_Traceguids,
                DnsHostName,
                (__int64)v30);
              v11 = WPP_GLOBAL_Control;
            }
LABEL_86:
            v4 = 0i64;
LABEL_87:
            if ( SockAddresses )
            {
              LocalFree(SockAddresses);
              v11 = WPP_GLOBAL_Control;
            }
LABEL_89:
            if ( DnsHostName )
            {
              NetApiBufferFree(DnsHostName);
              v11 = WPP_GLOBAL_Control;
            }
            if ( DomainControllerInfo )
            {
              NetApiBufferFree(DomainControllerInfo);
              v11 = WPP_GLOBAL_Control;
            }
            v6 = v42;
            if ( !v32 )
              goto LABEL_102;
            goto LABEL_7;
          }
          v28 = v40;
          if ( (unsigned int)DnsAddrArray_AddAddr(&v40->MaxCount, (__int64)&v43, v27, 3) )
          {
            v11 = WPP_GLOBAL_Control;
            if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
              && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x200000) != 0
              && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
            {
              v29 = DnsAddr_Ntoa((struct in_addr *)&v43);
              WPP_SF_s(
                *((_QWORD *)WPP_GLOBAL_Control + 7),
                0x1Eu,
                (__int64)&WPP_9f3fa3b6e1fd31b2a2f779badde708de_Traceguids,
                v29);
              v11 = WPP_GLOBAL_Control;
            }
            ++v9;
            if ( SockAddresses[i].lpSockaddr->sa_family == 23 )
              ++v21;
            else
              ++v20;
          }
          else
          {
            if ( v28->AddrCount >= v28->MaxCount )
            {
              v11 = WPP_GLOBAL_Control;
              v4 = 0i64;
              v32 = 0;
              goto LABEL_87;
            }
            v11 = WPP_GLOBAL_Control;
            if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
              && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x200000) != 0
              && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
            {
              v25 = DnsAddr_Ntoa((struct in_addr *)&v43);
              v26 = 29;
LABEL_61:
              WPP_SF_s(
                *((_QWORD *)WPP_GLOBAL_Control + 7),
                v26,
                (__int64)&WPP_9f3fa3b6e1fd31b2a2f779badde708de_Traceguids,
                v25);
LABEL_47:
              v11 = WPP_GLOBAL_Control;
            }
          }
        }
      }
      ++v4;
    }
  }
  if ( DcNextW == 259 )
  {
    v11 = WPP_GLOBAL_Control;
    goto LABEL_102;
  }
  v11 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    || (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x200000) == 0 )
  {
LABEL_102:
    v5 = v36;
  }
  else
  {
    v5 = v36;
    if ( *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
    {
      WPP_SF_DSS(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x14u,
        (__int64)&WPP_9f3fa3b6e1fd31b2a2f779badde708de_Traceguids,
        DcNextW,
        (__int64)v36,
        (__int64)v6);
      v11 = WPP_GLOBAL_Control;
    }
  }
  v8 = v40;
  v7 = v41;
LABEL_104:
  if ( GetDcContextHandle )
  {
    DsGetDcCloseW(GetDcContextHandle);
    v11 = WPP_GLOBAL_Control;
  }
  if ( (*((_DWORD *)v11 + 17) & 0x200000) != 0 )
  {
    if ( v11 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control && *((_BYTE *)v11 + 65) >= 4u )
      WPP_SF_DSs(
        *((_QWORD *)v11 + 7),
        0x1Fu,
        (__int64)&WPP_9f3fa3b6e1fd31b2a2f779badde708de_Traceguids,
        v9,
        (__int64)v5,
        *((_QWORD *)v7 + 2));
    if ( v9 )
      Dbg_DnsAddrArray("Updated master list", (__int64)v8);
  }
  return v9;
}
// 1400FC92D: variable 'v24' is possibly undefined
// 1400FC9F6: variable 'v27' is possibly undefined
