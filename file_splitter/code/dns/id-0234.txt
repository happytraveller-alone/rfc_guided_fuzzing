//----- (000000014001E5E4) ----------------------------------------------------
__int64 __fastcall processResourceRecord(__int64 a1, _DWORD *a2)
{
  __int64 v3; // r14
  _BYTE *v5; // rax
  __int64 v6; // r15
  unsigned int v7; // edi
  __int64 v8; // rcx
  unsigned __int64 v9; // rdi
  __int128 *v11; // rcx
  __int64 v12; // rcx
  unsigned int v13; // ecx
  __int64 v14; // r13
  int v15; // eax
  unsigned int v16; // eax
  unsigned int v17; // eax
  unsigned int v18; // eax
  unsigned int v19; // eax
  __int128 *v20; // rcx
  char v21; // al
  __int128 v22; // [rsp+58h] [rbp-29h] BYREF
  __int128 v23; // [rsp+68h] [rbp-19h] BYREF
  __int128 v24; // [rsp+78h] [rbp-9h] BYREF
  __int128 v25; // [rsp+88h] [rbp+7h] BYREF
  __int128 v26; // [rsp+98h] [rbp+17h] BYREF
  __int128 v27; // [rsp+A8h] [rbp+27h] BYREF
  __int128 v28; // [rsp+B8h] [rbp+37h] BYREF

  v3 = *(_QWORD *)(a1 + 9880);
  *a2 = 0;
  v5 = Lookup_ZoneNode(v3, (unsigned __int8 *)(a1 + 282), 0i64, 0i64, 272, 0i64, 0i64, 0i64);
  v6 = (__int64)v5;
  if ( !v5 )
    return 123;
  v8 = *(_QWORD *)(a1 + 9896);
  if ( v5 != (_BYTE *)v8 )
    DnsBL_ProcessNodeLoad(v8);
  *(_QWORD *)(a1 + 9896) = v6;
  v9 = *(unsigned __int16 *)(a1 + 808);
  if ( *(_DWORD *)(a1 + 812) )
  {
LABEL_9:
    if ( (_WORD)v9 != 6 )
      goto LABEL_13;
    goto LABEL_10;
  }
  if ( (_WORD)v9 != 6 )
  {
    if ( *(_DWORD *)(v3 + 372) )
    {
      v22 = DNS_EVENT_INVALID_SOA_RECORD;
      File_LogFileParsingError(&v22, a1, 0i64);
      *a2 = 1;
      return (unsigned int)-1072573183;
    }
    goto LABEL_9;
  }
LABEL_10:
  if ( *(_QWORD *)(v3 + 40) != v6 && *(_QWORD *)(v3 + 64) != v6 )
  {
    v23 = DNS_EVENT_INVALID_SOA_RECORD;
    File_LogFileParsingError(&v23, a1, 0i64);
    return 3222394113i64;
  }
LABEL_13:
  if ( *(_BYTE *)(v6 + 96) != 0xF2 && *(_DWORD *)(v3 + 372) )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x20) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_sqqdqq(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0xCu,
        (__int64)&WPP_ff95921f3fb1365ca081f7107c962c02_Traceguids,
        *(const char **)(v3 + 16));
    }
    if ( (_WORD)v9 == 2 )
    {
      if ( *(_BYTE *)(v6 + 96) != 67 )
      {
        v11 = &v24;
        v24 = DNS_EVENT_FILE_INVALID_NS_NODE;
LABEL_22:
        File_LogFileParsingError(v11, a1, 0i64);
        return 123;
      }
    }
    else if ( (unsigned __int16)v9 > 0x32u || (v12 = 0x5C80010000002i64, !_bittest64(&v12, v9)) )
    {
      if ( dword_1401B98C4 )
      {
        v11 = &v25;
        v25 = DNS_EVENT_FILE_NODE_OUTSIDE_ZONE;
        goto LABEL_22;
      }
    }
  }
  v13 = *(_DWORD *)(v3 + 372);
  v14 = *(_QWORD *)(a1 + 800);
  if ( v13 - 1 <= 1 || v13 >= 5 )
  {
    if ( *(_DWORD *)(a1 + 272) )
    {
      v15 = *(_DWORD *)(a1 + 276);
      *(_DWORD *)(v14 + 20) = v15;
      if ( v15 == -1 )
      {
        if ( *(_DWORD *)(a1 + 268) == *(_DWORD *)(a1 + 264) )
          *(_WORD *)(v14 + 10) |= 0x40u;
        *(_DWORD *)(v14 + 20) = *(_DWORD *)(a1 + 268);
      }
      else
      {
        *(_WORD *)(v14 + 10) |= 0x20u;
      }
    }
    else
    {
      *(_DWORD *)(v14 + 20) = *(_DWORD *)(a1 + 268);
      if ( *(_DWORD *)(a1 + 268) == *(_DWORD *)(a1 + 264) )
        *(_WORD *)(v14 + 10) |= 0x40u;
    }
  }
  v16 = RR_AddToNode(v3, v6, v14);
  v7 = v16;
  if ( !v16 )
  {
    if ( g_pTrustAnchorsZone && v3 == g_pTrustAnchorsZone )
      DNSSEC_AddOrUpdateTrustAnchorsInRFC5011State((struct _DnsTreeNode *)v6, v14);
    if ( *(_BYTE *)(v6 + 96) == 0xF2 && !*(_DWORD *)(a1 + 1676) && g_isRegisteredForUTC == 1 )
    {
      v21 = Name_ResourceTypeForCountName((struct _CountName *)(a1 + 538));
      if ( (v21 & 3) == 3 )
      {
        _InterlockedIncrement(&dword_1401B95EC);
      }
      else if ( (v21 & 1) != 0 )
      {
        _InterlockedIncrement(&dword_1401B95E8);
      }
      else if ( (v21 & 2) != 0 )
      {
        _InterlockedIncrement(&dword_1401B95E4);
      }
    }
    ++*(_DWORD *)(v3 + 444);
    return v7;
  }
  v17 = v16 - 9708;
  if ( v17 )
  {
    v18 = v17 - 1;
    if ( v18 )
    {
      v19 = v18 - 2;
      if ( !v19 )
      {
        RR_Free(v14);
        return 0i64;
      }
      if ( v19 != 11 )
      {
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x20) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
        {
          WPP_SF_D(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            0xDu,
            (__int64)&WPP_ff95921f3fb1365ca081f7107c962c02_Traceguids,
            v7);
        }
        return v7;
      }
      v20 = &v26;
      v26 = DNS_EVENT_PARSED_ALIAS_LOOP;
    }
    else
    {
      v20 = &v27;
      v27 = DNS_EVENT_PARSED_CNAME_NOT_ALONE;
    }
  }
  else
  {
    v20 = &v28;
    v28 = DNS_EVENT_PARSED_ADD_RR_AT_CNAME;
  }
  File_LogFileParsingError(v20, a1, 0i64);
  return v7;
}
// 140186628: using guessed type __int128 DNS_EVENT_FILE_INVALID_NS_NODE;
// 140186688: using guessed type __int128 DNS_EVENT_PARSED_CNAME_NOT_ALONE;
// 140186868: using guessed type __int128 DNS_EVENT_FILE_NODE_OUTSIDE_ZONE;
// 140186F00: using guessed type __int128 DNS_EVENT_PARSED_ALIAS_LOOP;
// 140187568: using guessed type __int128 DNS_EVENT_PARSED_ADD_RR_AT_CNAME;
// 140187638: using guessed type __int128 DNS_EVENT_INVALID_SOA_RECORD;
// 1401B8C48: using guessed type __int64 g_pTrustAnchorsZone;
// 1401B9190: using guessed type int g_isRegisteredForUTC;
// 1401B95E4: using guessed type int dword_1401B95E4;
// 1401B95E8: using guessed type int dword_1401B95E8;
// 1401B95EC: using guessed type int dword_1401B95EC;
// 1401B98C4: using guessed type int dword_1401B98C4;
