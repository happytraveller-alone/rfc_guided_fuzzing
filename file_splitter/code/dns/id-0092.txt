//----- (000000014000B400) ----------------------------------------------------
__int64 __fastcall selectRootHints(__int64 **a1)
{
  int v2; // edx
  unsigned int v3; // esi
  unsigned int v4; // ecx
  int v5; // r15d
  int v6; // r8d
  __int64 v7; // r13
  __int64 **v8; // rax
  __int64 *v9; // rdi
  int v10; // r12d
  int v11; // eax
  __int64 v12; // rsi
  int v13; // ebp
  __int64 *v14; // r14
  int v15; // eax
  CDnsClientSubnetRecordsTrie *v16; // rcx
  int v18; // [rsp+20h] [rbp-58h]
  unsigned int v19; // [rsp+80h] [rbp+8h]
  int v20; // [rsp+88h] [rbp+10h]
  int v21; // [rsp+90h] [rbp+18h]
  unsigned int v22; // [rsp+98h] [rbp+20h]

  v2 = 0;
  v3 = 0;
  v4 = 0;
  v21 = 0;
  v5 = 0;
  v19 = 0;
  v6 = 100000000;
  v22 = 0;
  if ( *a1 )
  {
    v7 = 0i64;
    v8 = a1;
    do
    {
      v9 = *v8;
      v10 = 0;
      if ( *v8 )
      {
        do
        {
          v11 = 1;
          v20 = 1;
          if ( *((_WORD *)v9 + 8) == 2 )
          {
            ++v10;
            if ( !v5 )
            {
              v12 = 0i64;
              if ( *a1 )
              {
                do
                {
                  v13 = 0;
                  if ( v12 != v7 )
                  {
                    v14 = a1[v12];
                    while ( 1 )
                    {
                      if ( !v14 )
                      {
LABEL_15:
                        v11 = v13 != 0 ? v20 : 0;
                        v20 = v11;
                        goto LABEL_16;
                      }
                      v18 = --v6;
                      if ( v6 <= 0 )
                        break;
                      if ( *((_WORD *)v14 + 8) == 2 )
                      {
                        v15 = _stricmp((const char *)v14[4], (const char *)v9[4]);
                        v6 = v18;
                        if ( !v15 )
                          v13 = 1;
                      }
                      v14 = (__int64 *)*v14;
                      if ( v13 )
                        goto LABEL_15;
                    }
                    v16 = WPP_GLOBAL_Control;
                    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0
                      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
                    {
                      WPP_SF_(
                        *((_QWORD *)WPP_GLOBAL_Control + 7),
                        0x1Fu,
                        (__int64)&WPP_dd5a12aafb1b34b87fc868998e41e2af_Traceguids);
                      v16 = WPP_GLOBAL_Control;
                    }
                    v3 = v19;
                    v5 = 0;
                    goto LABEL_25;
                  }
LABEL_16:
                  ++v12;
                }
                while ( a1[v12] );
                if ( !v11 )
                  goto LABEL_19;
              }
              v5 = 1;
            }
          }
LABEL_19:
          v9 = (__int64 *)*v9;
        }
        while ( v9 );
        v3 = v19;
        v4 = v22;
        v2 = v21;
      }
      if ( v10 > v2 )
      {
        v2 = v10;
        v19 = v4;
        v21 = v10;
        v3 = v4;
      }
      ++v7;
      v22 = ++v4;
      v8 = &a1[v7];
    }
    while ( *v8 );
    v16 = WPP_GLOBAL_Control;
LABEL_25:
    if ( v5 )
    {
      if ( v16 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_BYTE *)v16 + 68) & 2) != 0
        && *((_BYTE *)v16 + 65) >= 4u )
      {
        WPP_SF_D(*((_QWORD *)v16 + 7), 0x20u, (__int64)&WPP_dd5a12aafb1b34b87fc868998e41e2af_Traceguids, v3);
      }
      return v3;
    }
  }
  else
  {
    v16 = WPP_GLOBAL_Control;
  }
  if ( v16 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)v16 + 68) & 2) != 0
    && *((_BYTE *)v16 + 65) >= 4u )
  {
    WPP_SF_(*((_QWORD *)v16 + 7), 0x21u, (__int64)&WPP_dd5a12aafb1b34b87fc868998e41e2af_Traceguids);
  }
  return 0xFFFFFFFFi64;
}
