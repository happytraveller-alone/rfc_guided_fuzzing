//----- (0000000140157194) ----------------------------------------------------
__int64 __fastcall Dns_ParseSigTimeW(__int64 *a1)
{
  __int64 v1; // rdx
  __int64 v3; // rax
  __int64 v4; // xmm0_8
  unsigned __int16 v5; // ax
  struct _FILETIME FileTime; // [rsp+20h] [rbp-40h] BYREF
  SYSTEMTIME SystemTime; // [rsp+28h] [rbp-38h] BYREF
  wchar_t String[4]; // [rsp+38h] [rbp-28h] BYREF
  __int16 v10; // [rsp+40h] [rbp-20h]

  LODWORD(v1) = -1;
  v3 = -1i64;
  FileTime = 0i64;
  do
    ++v3;
  while ( *((_WORD *)a1 + v3) );
  if ( (_DWORD)v3 == 14 )
  {
    v4 = *a1;
    *(_QWORD *)&SystemTime.wHour = 0i64;
    *(_QWORD *)String = v4;
    v10 = 0;
    v5 = _wtoi(String);
    String[2] = 0;
    *(_QWORD *)&SystemTime.wYear = v5;
    *(_DWORD *)String = *((_DWORD *)a1 + 2);
    *(_DWORD *)&SystemTime.wMonth = (unsigned __int16)_wtoi(String);
    *(_DWORD *)String = *((_DWORD *)a1 + 3);
    SystemTime.wDay = _wtoi(String);
    *(_DWORD *)String = *((_DWORD *)a1 + 4);
    *(_QWORD *)&SystemTime.wHour = (unsigned __int16)_wtoi(String);
    *(_DWORD *)String = *((_DWORD *)a1 + 5);
    *(_DWORD *)&SystemTime.wMinute = (unsigned __int16)_wtoi(String);
    *(_DWORD *)String = *((_DWORD *)a1 + 6);
    SystemTime.wSecond = _wtoi(String);
    SystemTimeToFileTime(&SystemTime, &FileTime);
    *(struct _FILETIME *)&SystemTime.wYear = FileTime;
    return (unsigned int)((*(_QWORD *)&FileTime - 116444736000000000i64) / 0x989680ui64);
  }
  return (unsigned int)v1;
}
