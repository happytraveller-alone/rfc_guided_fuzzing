//----- (00000001400C05E4) ----------------------------------------------------
__int64 __fastcall ZoneScopes_LockAll(__int64 a1, int a2, int a3, _DWORD *a4, __int64 **a5)
{
  __int64 **v7; // r14
  __int64 v8; // rcx
  unsigned int v9; // edx
  unsigned int v10; // ebp
  __int64 v12; // rsi
  __int64 *v13; // rdi
  int v14; // r12d
  _QWORD *v15; // rax
  _QWORD *v16; // rbx
  __int64 *v17; // rax
  __int64 v18; // rcx
  __int64 *v19; // rax
  __int64 j; // rax
  __int64 *v21; // rsi
  unsigned int v22; // ebx
  CDnsClientSubnetRecordsTrie *v23; // rcx
  __int64 *i; // rbx
  unsigned int v25; // [rsp+78h] [rbp+10h] BYREF
  int v26; // [rsp+80h] [rbp+18h]

  v26 = a3;
  v25 = 0;
  if ( a4 )
    *a4 = 0;
  v7 = a5;
  if ( a5 )
    *a5 = 0i64;
  if ( a2 )
  {
    v8 = *(_QWORD *)(a1 + 168);
    v25 = -1;
    v9 = 10000;
    if ( a3 == -1 )
      v9 = -1;
    if ( (unsigned int)acquireRead(v8, v9, &v25) == -1 )
    {
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x10) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
      {
        WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x1Cu, (__int64)&WPP_e9a0d5dea449334d7c383477da81f939_Traceguids);
      }
      return 9607;
    }
    v25 = 1;
  }
  if ( !*(_QWORD *)(a1 + 184) )
    return 0i64;
  v12 = *(_QWORD *)(a1 + 160);
  v10 = 0;
  v13 = 0i64;
  v14 = 0;
  v15 = *(_QWORD **)(v12 + 8);
  v16 = (_QWORD *)*v15;
  if ( (_QWORD *)*v15 == v15 )
  {
LABEL_31:
    v21 = v13;
    if ( v13 )
    {
      v22 = v26;
      while ( !(unsigned int)Zone_LockForWriteEx(*v21, 2, v22, (__int64)"ds\\dns\\server\\server\\zone.c", 96) )
      {
        v21 = (__int64 *)v21[1];
        if ( !v21 )
          goto LABEL_35;
      }
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x10) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        WPP_SF_S(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0x1Eu,
          (__int64)&WPP_e9a0d5dea449334d7c383477da81f939_Traceguids,
          *(const unsigned __int16 **)(*v21 + 192));
      }
      v10 = 9607;
      for ( i = v13; i != v21; i = (__int64 *)i[1] )
        Zone_UnlockAfterWriteEx(*i, 2, (__int64)"ds\\dns\\server\\server\\zone.c", 119);
    }
    else
    {
LABEL_35:
      if ( a4 )
        *a4 = v14;
      if ( v7 )
      {
        *v7 = v13;
        v13 = 0i64;
      }
    }
    if ( v13 )
      Free_ScopeList(v13);
    if ( !v10 )
      return v10;
  }
  else
  {
    while ( 1 )
    {
      v17 = (__int64 *)Mem_AllocZero(0x10ui64, 4i64, "ds\\dns\\server\\server\\zoneutil.cpp", 1273);
      if ( !v17 )
        break;
      v18 = v16[4];
      v17[1] = 0i64;
      *v17 = v18;
      if ( v13 )
        v17[1] = (__int64)v13;
      ++v14;
      v13 = v17;
      if ( !*((_BYTE *)v16 + 41) )
      {
        v19 = (__int64 *)v16[2];
        if ( *((_BYTE *)v19 + 41) )
        {
          for ( j = v16[1]; !*(_BYTE *)(j + 41) && v16 == *(_QWORD **)(j + 16); j = *(_QWORD *)(j + 8) )
            v16 = (_QWORD *)j;
          v16 = (_QWORD *)j;
        }
        else
        {
          do
          {
            v16 = v19;
            v19 = (__int64 *)*v19;
          }
          while ( !*((_BYTE *)v19 + 41) );
        }
      }
      if ( v16 == *(_QWORD **)(v12 + 8) )
        goto LABEL_31;
    }
    v23 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x10) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
    {
      WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x17u, (__int64)&WPP_5dd087cb468e333d3a5b59f2603de819_Traceguids);
      v23 = WPP_GLOBAL_Control;
    }
    if ( v13 )
    {
      Free_ScopeList(v13);
      v23 = WPP_GLOBAL_Control;
    }
    v10 = 14;
    if ( v23 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)v23 + 68) & 0x10) != 0
      && *((_BYTE *)v23 + 65) >= 2u )
    {
      WPP_SF_S(
        *((_QWORD *)v23 + 7),
        0x1Du,
        (__int64)&WPP_e9a0d5dea449334d7c383477da81f939_Traceguids,
        *(const unsigned __int16 **)(a1 + 24));
    }
  }
  if ( v25 )
  {
    v25 = -1;
    releaseRead(*(_QWORD *)(a1 + 168), &v25, 1);
  }
  return v10;
}
