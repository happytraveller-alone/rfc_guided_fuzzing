//----- (0000000140015210) ----------------------------------------------------
void **__fastcall Dbase_LockEx(__int64 a1, int a2, __int64 a3, char a4)
{
  void **result; // rax
  __int64 v5; // rdi
  int v9; // edx
  __int64 v10; // r8
  __int64 v11; // r9
  CDnsClientSubnetRecordsTrie *v12; // rcx
  void *v13; // rax
  int v14; // [rsp+20h] [rbp-38h]
  void *retaddr; // [rsp+58h] [rbp+0h] BYREF
  unsigned int v16; // [rsp+68h] [rbp+10h] BYREF

  result = &retaddr;
  v5 = 0i64;
  if ( a2 )
  {
    v9 = a2 - 1;
    if ( v9 )
    {
      if ( v9 == 1 )
      {
        v16 = -1;
        DbaseLockCount = acquireWrite(DbaseLock, 0xFFFFFFFF, &v16);
        if ( DbaseLockCount == 1 )
          DbaseLockThread = GetCurrentThreadId();
        v12 = WPP_GLOBAL_Control;
        result = (void **)&WPP_GLOBAL_Control;
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 8) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
        {
          if ( a1 )
          {
            v13 = FormatLabelA(*(unsigned __int8 *)(a1 + 101), (const void *)(a1 + 102));
            v12 = WPP_GLOBAL_Control;
            v5 = (__int64)v13;
          }
          return (void **)WPP_SF_ddqsds(*((_QWORD *)v12 + 7), 0xBu, v10, v11, v14, a1, v5, a4, a3);
        }
      }
    }
    else
    {
      v16 = -1;
      return (void **)acquireUpdate(DbaseLock, 0xFFFFFFFF, &v16, 1);
    }
  }
  else
  {
    v16 = -1;
    return (void **)acquireRead(DbaseLock, 0xFFFFFFFF, &v16);
  }
  return result;
}
// 1400152D1: variable 'v10' is possibly undefined
// 1400152D1: variable 'v11' is possibly undefined
// 1400152D1: variable 'v14' is possibly undefined
// 1401EC5E8: using guessed type __int64 DbaseLock;
// 1401EC5F0: using guessed type int DbaseLockCount;
// 1401EC5F4: using guessed type int DbaseLockThread;
