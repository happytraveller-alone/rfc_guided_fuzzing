//----- (000000014000ADA4) ----------------------------------------------------
__int64 __fastcall flagDnsServerInAdapterList(_QWORD *a1, _WORD *a2, int a3, int a4)
{
  unsigned int v4; // r12d
  _QWORD *v6; // rbx
  int v7; // r14d
  _QWORD *v8; // rcx
  _QWORD *v9; // rax
  _QWORD *v10; // rsi
  __int64 v11; // rdi
  int v12; // eax
  unsigned int v13; // ebp
  unsigned __int64 v14; // r15
  unsigned int v15; // ecx
  __int64 v16; // rax
  _QWORD *v18; // [rsp+60h] [rbp+8h]
  _WORD *v19; // [rsp+68h] [rbp+10h]
  int v20; // [rsp+78h] [rbp+20h]

  v20 = a4;
  v19 = a2;
  v4 = 0;
  v18 = a1;
  v6 = a1;
  if ( a1 )
  {
    while ( !v6[11] && !v6[20] )
    {
LABEL_21:
      v6 = (_QWORD *)*v6;
      v18 = v6;
      if ( !v6 )
        return v4;
    }
    v7 = 0;
    v8 = v6 + 12;
    v9 = v6 + 3;
    while ( 1 )
    {
      v10 = v9;
      if ( v7 )
        v10 = v8;
      if ( !v10 )
        goto LABEL_20;
      v11 = v10[8];
      if ( !v11 )
        goto LABEL_20;
      v12 = *(_DWORD *)(v11 + 4);
      v4 += v12;
      if ( a2 )
      {
        v13 = 0;
        if ( v12 )
        {
          do
          {
            v14 = (unsigned __int64)v13 << 6;
            if ( (unsigned int)DnsAddr_IsEqual((_WORD *)(v14 + v11 + 32), v19, 3) )
              *(_DWORD *)(v14 + v11 + 72) = a3;
            v11 = v10[8];
            ++v13;
          }
          while ( v13 < *(_DWORD *)(v11 + 4) );
          v6 = v18;
          a2 = v19;
          a4 = v20;
LABEL_18:
          v8 = v6 + 12;
        }
      }
      else if ( a4 == 1 )
      {
        v15 = 0;
        if ( v12 )
        {
          do
          {
            v16 = v15++;
            *(_DWORD *)((v16 << 6) + v11 + 72) = a3;
            v11 = v10[8];
          }
          while ( v15 < *(_DWORD *)(v11 + 4) );
        }
        goto LABEL_18;
      }
      v9 = v6 + 3;
LABEL_20:
      if ( ++v7 >= 2 )
        goto LABEL_21;
    }
  }
  return v4;
}
