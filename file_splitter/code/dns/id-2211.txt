//----- (00000001401172E4) ----------------------------------------------------
__int64 __fastcall SD_RemovePrincipalFromSD(void *a1, __int64 a2, void *a3, WINBOOL a4, int a5, _QWORD *a6)
{
  void *v7; // rbp
  void *v8; // rsi
  int LastError; // edi
  _QWORD *SecurityDescriptorCopy; // rax
  PSECURITY_DESCRIPTOR v12[7]; // [rsp+20h] [rbp-38h] BYREF

  v12[4] = 0i64;
  v7 = g_pServerSid;
  v8 = g_pServerGroupSid;
  *a6 = 0i64;
  memset(v12, 0, 32);
  LastError = CSecurityDescriptor::Attach((PACL *)v12, a3, (char)a3, a4);
  if ( LastError >= 0 )
  {
    if ( a1 )
      CSecurityDescriptor::Revoke((PACL *)v12, a1);
    else
      CSecurityDescriptor::Revoke((CSecurityDescriptor *)v12, 0i64);
    if ( (int)CSecurityDescriptor::SetGroup((CSecurityDescriptor *)v12, v8, 0) < 0
      && WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 1) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x3Cu, (__int64)&WPP_86bf6911ab34325a83f1fc4202357274_Traceguids);
    }
    LastError = CSecurityDescriptor::SetOwner((CSecurityDescriptor *)v12, v7, 0);
    if ( LastError < 0
      && WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 1) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x3Du, (__int64)&WPP_86bf6911ab34325a83f1fc4202357274_Traceguids);
    }
    SecurityDescriptorCopy = makeSecurityDescriptorCopy(v12);
    *a6 = SecurityDescriptorCopy;
    if ( !SecurityDescriptorCopy )
      LastError = GetLastError();
  }
  else if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
         && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 1) != 0
         && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x3Au, (__int64)&WPP_86bf6911ab34325a83f1fc4202357274_Traceguids);
  }
  CSecurityDescriptor::~CSecurityDescriptor((CSecurityDescriptor *)v12);
  return (unsigned int)LastError;
}
