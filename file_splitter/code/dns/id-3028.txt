//----- (000000014015C060) ----------------------------------------------------
void **__fastcall Wins_RecordBuildW(unsigned int a1, const wchar_t **a2)
{
  unsigned int v2; // esi
  unsigned int v4; // ebx
  _WORD *Record; // rax
  void **v7; // rdi
  unsigned int *v8; // r15
  __int64 v9; // rbp
  struct in_addr *v10; // rsi
  const WCHAR *v11; // rcx
  LPCWSTR Terminator; // [rsp+60h] [rbp+18h] BYREF

  v2 = a1 - 3;
  v4 = a1;
  if ( a1 < 4 )
  {
LABEL_2:
    SetLastError(0xDu);
    return 0i64;
  }
  Record = Dns_AllocateRecordEx((unsigned __int16)(4 * (a1 - 3 + 4)));
  v7 = (void **)Record;
  if ( !Record )
    return 0i64;
  v8 = (unsigned int *)(Record + 16);
  if ( v4 > v2 )
  {
    v9 = v4 - v2;
    do
    {
      *v8++ = wcstoul(*a2++, 0i64, 10);
      --v4;
      --v9;
    }
    while ( v9 );
  }
  *v8 = v2;
  v10 = (struct in_addr *)(v7 + 6);
  while ( v4 )
  {
    v11 = *a2;
    Terminator = 0i64;
    --v4;
    if ( RtlIpv4StringToAddressW(v11, 1u, &Terminator, v10) < 0 || Terminator && *Terminator )
    {
      Dns_RecordFree(v7);
      goto LABEL_2;
    }
    ++v10;
    ++a2;
  }
  return v7;
}
