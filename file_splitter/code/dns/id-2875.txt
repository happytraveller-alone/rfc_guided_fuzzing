//----- (000000014014F8CC) ----------------------------------------------------
void __fastcall CDnsRRLParameters::ReSetRRLParameters(CDnsRRLParameters *this, struct _DnsRRLParams_ *a2)
{
  CDnsRRLParameters *v2; // rbx
  int v3; // eax
  int v4; // eax
  int v5; // eax
  int v6; // eax
  int v7; // eax
  int v8; // eax
  int v9; // eax
  int v10; // r8d
  int v11; // r8d
  u_long v12; // eax
  unsigned int v13; // edx

  v2 = g_DnsRRLConfigParams;
  if ( (*((_BYTE *)a2 + 36) & 1) != 0 )
    v3 = *(_DWORD *)a2;
  else
    v3 = *(_DWORD *)g_DnsRRLConfigParams;
  *(_DWORD *)g_DnsRRLConfigParams = v3;
  if ( (*((_BYTE *)a2 + 36) & 2) != 0 )
    v4 = *((_DWORD *)a2 + 1);
  else
    v4 = *((_DWORD *)v2 + 1);
  *((_DWORD *)v2 + 1) = v4;
  if ( (*((_BYTE *)a2 + 36) & 4) != 0 )
    v5 = *((_DWORD *)a2 + 2);
  else
    v5 = *((_DWORD *)v2 + 2);
  *((_DWORD *)v2 + 2) = v5;
  if ( (*((_BYTE *)a2 + 36) & 8) != 0 )
    v6 = *((_DWORD *)a2 + 3);
  else
    v6 = *((_DWORD *)v2 + 3);
  *((_DWORD *)v2 + 3) = v6;
  if ( (*((_BYTE *)a2 + 36) & 0x20) != 0 )
    v7 = *((_DWORD *)a2 + 5);
  else
    v7 = *((_DWORD *)v2 + 5);
  *((_DWORD *)v2 + 5) = v7;
  if ( (*((_BYTE *)a2 + 36) & 0x10) != 0 )
    v8 = *((_DWORD *)a2 + 4);
  else
    v8 = *((_DWORD *)v2 + 4);
  *((_DWORD *)v2 + 4) = v8;
  if ( (*((_BYTE *)a2 + 36) & 0x40) != 0 )
    v9 = *((_DWORD *)a2 + 6);
  else
    v9 = *((_DWORD *)v2 + 6);
  *((_DWORD *)v2 + 6) = v9;
  if ( *((char *)a2 + 36) >= 0 )
    v10 = *((_DWORD *)v2 + 7);
  else
    v10 = *((_DWORD *)a2 + 7);
  *((_DWORD *)v2 + 7) = v10;
  if ( (*((_DWORD *)a2 + 9) & 0x100) != 0 )
    v11 = *((_DWORD *)a2 + 8);
  else
    v11 = *((_DWORD *)v2 + 13);
  *((_DWORD *)v2 + 13) = v11;
  if ( v9 == 32 )
    v12 = -1;
  else
    v12 = htonl(-1 << (32 - v9));
  v13 = *((_DWORD *)v2 + 7);
  *((_DWORD *)v2 + 8) = v12;
  CDnsRRLParameters::ComputeIPv6Mask(v2, v13);
}
