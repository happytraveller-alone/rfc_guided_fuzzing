//----- (00000001400F760C) ----------------------------------------------------
__int64 __fastcall DnsOls_CopyDirectoryZoneProperties(__int64 a1, unsigned __int16 *a2, WCHAR *a3, __int64 a4)
{
  __int64 v4; // rsi
  ULONG v7; // edi
  int v8; // eax
  CDnsClientSubnetRecordsTrie *v9; // r10
  const unsigned __int16 **v10; // r15
  int v11; // r13d
  const unsigned __int16 *v12; // r12
  struct berval **values_lenW; // rax
  struct berval **v14; // rbx
  __int64 v15; // rbx
  __int64 v16; // r15
  int v17; // eax
  int attrs; // [rsp+20h] [rbp-E0h]
  ULONG attrsonly; // [rsp+28h] [rbp-D8h]
  PLDAPMessage res; // [rsp+60h] [rbp-A0h] BYREF
  LDAPMessage *Message; // [rsp+68h] [rbp-98h]
  PWSTR dn; // [rsp+70h] [rbp-90h]
  __int64 v24; // [rsp+78h] [rbp-88h]
  PLDAPControlW ServerControls[2]; // [rsp+80h] [rbp-80h] BYREF
  LDAPModW *mods[2]; // [rsp+90h] [rbp-70h] BYREF
  int v27; // [rsp+A0h] [rbp-60h] BYREF
  const unsigned __int16 *v28; // [rsp+A8h] [rbp-58h]
  struct berval **v29; // [rsp+B0h] [rbp-50h]
  __int64 v30[20]; // [rsp+C0h] [rbp-40h] BYREF

  v4 = 0i64;
  v24 = a4;
  dn = a3;
  res = 0i64;
  ServerControls[0] = (PLDAPControlW)&SecurityDescriptorControl_DGO;
  ServerControls[1] = 0i64;
  if ( !a1 )
  {
    v7 = 87;
    goto LABEL_53;
  }
  if ( (*(_BYTE *)(a1 + 388) & 1) == 0 || *(_DWORD *)(a1 + 372) != 1 )
  {
    v7 = 9611;
LABEL_50:
    v9 = WPP_GLOBAL_Control;
    goto LABEL_51;
  }
  if ( (*(_BYTE *)(a1 + 1040) & 2) == 0 && *(_QWORD *)(a1 + 1136) )
  {
    v7 = 9101;
    goto LABEL_53;
  }
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_S(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x64u, (__int64)&WPP_b7aea06a65693a31b0dd129af848d3b8_Traceguids, a2);
  }
  v8 = ldap_search_ext_sW(
         pServerLdap,
         a2,
         0,
         g_szDnsZoneFilter,
         &DsTypeAttributeTable,
         0,
         ServerControls,
         0i64,
         &g_LdapTimeout,
         0,
         &res);
  v7 = v8;
  if ( v8 )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
    {
      WPP_SF_DS(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x65u,
        (__int64)&WPP_b7aea06a65693a31b0dd129af848d3b8_Traceguids,
        v8,
        (__int64)a2);
    }
    v7 = Ds_ErrorHandler(v7, (__int64)a2, pServerLdap, 0);
    goto LABEL_50;
  }
  Message = ldap_first_entry(pServerLdap, res);
  if ( !Message )
  {
    v9 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
    {
      WPP_SF_S(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x66u,
        (__int64)&WPP_b7aea06a65693a31b0dd129af848d3b8_Traceguids,
        a2);
      v9 = WPP_GLOBAL_Control;
    }
    v7 = 9002;
    goto LABEL_51;
  }
  v10 = (const unsigned __int16 **)v30;
  v9 = WPP_GLOBAL_Control;
  v11 = 0;
  v30[0] = (__int64)off_1401B6C70;
  v30[1] = (__int64)off_1401B6C78;
  v30[2] = (__int64)off_1401B6C80;
  v30[3] = (__int64)off_1401B6C88;
  v30[4] = (__int64)off_1401B6C90;
  v30[5] = (__int64)off_1401B6C98;
  v30[6] = (__int64)off_1401B6CA0;
  v30[7] = (__int64)off_1401B6CA8;
  v30[8] = (__int64)off_1401B6CB8;
  v30[9] = (__int64)off_1401B6CC0;
  v30[10] = (__int64)off_1401B6CB0;
  v30[11] = (__int64)off_1401B6CC8;
  v30[12] = (__int64)off_1401B6CD0;
  v30[13] = (__int64)off_1401B6CD8;
  v30[14] = (__int64)off_1401B6CE0;
  v30[15] = (__int64)off_1401B6CE8;
  v30[16] = (__int64)off_1401B6CF0[0];
  v30[17] = (__int64)off_1401B6CF8;
  v30[18] = (__int64)off_1401B6D00;
  v30[19] = (__int64)off_1401B6D08;
  while ( 1 )
  {
    if ( v9 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)v9 + 17) & 0x400) != 0
      && *((_BYTE *)v9 + 65) >= 4u )
    {
      WPP_SF_S(*((_QWORD *)v9 + 7), 0x67u, (__int64)&WPP_b7aea06a65693a31b0dd129af848d3b8_Traceguids, *v10);
    }
    v12 = *v10;
    values_lenW = ldap_get_values_lenW(pServerLdap, Message, (const PWSTR)*v10);
    v14 = values_lenW;
    if ( values_lenW )
      break;
    v9 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      || (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) == 0
      || *((_BYTE *)WPP_GLOBAL_Control + 65) < 4u )
    {
      goto LABEL_36;
    }
    WPP_SF_S(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x68u, (__int64)&WPP_b7aea06a65693a31b0dd129af848d3b8_Traceguids, v12);
LABEL_35:
    v9 = WPP_GLOBAL_Control;
LABEL_36:
    ++v11;
    ++v10;
    if ( (unsigned __int64)v11 >= 0x14 )
      goto LABEL_42;
  }
  v29 = values_lenW;
  mods[0] = (LDAPModW *)&v27;
  v27 = 128;
  v28 = v12;
  mods[1] = 0i64;
  v7 = Dns_LdapModifyExt(pServerLdap, dn, mods, ServerControls, attrs, attrsonly, 0);
  ldap_value_free_len(v14);
  if ( !v7 )
    goto LABEL_35;
  v9 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
  {
    WPP_SF_DSs(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x69u,
      (__int64)&WPP_b7aea06a65693a31b0dd129af848d3b8_Traceguids,
      v7,
      v30[v11],
      *(_QWORD *)(a1 + 16));
    v9 = WPP_GLOBAL_Control;
  }
LABEL_42:
  if ( !v7 && (*(_BYTE *)(a1 + 1040) & 2) != 0 )
  {
    v15 = *(_QWORD *)(a1 + 840);
    v16 = v24;
    *(_QWORD *)(a1 + 840) = v24;
    v17 = DnsOls_SetLocalServerAsKeymaster(pServerLdap, a1);
    *(_QWORD *)(a1 + 840) = v15;
    v7 = v17;
    if ( !v17 )
      goto LABEL_50;
    v9 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
    {
      WPP_SF_DS(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x6Au,
        (__int64)&WPP_b7aea06a65693a31b0dd129af848d3b8_Traceguids,
        v17,
        v16);
      goto LABEL_50;
    }
  }
LABEL_51:
  if ( res )
  {
    ldap_msgfree(res);
LABEL_53:
    v9 = WPP_GLOBAL_Control;
  }
  if ( v9 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)v9 + 17) & 0x400) != 0
    && *((_BYTE *)v9 + 65) >= 4u )
  {
    if ( a1 )
      v4 = *(_QWORD *)(a1 + 16);
    WPP_SF_Ds(*((_QWORD *)v9 + 7), 0x6Bu, (__int64)&WPP_b7aea06a65693a31b0dd129af848d3b8_Traceguids, v7, v4);
  }
  return v7;
}
// 1400F798A: variable 'attrs' is possibly undefined
// 1400F798A: variable 'attrsonly' is possibly undefined
// 1401B6CF0: using guessed type wchar_t *off_1401B6CF0[4];
// 1401B6D08: using guessed type wchar_t *off_1401B6D08;
// 1401EC440: using guessed type __int64 SecurityDescriptorControl_DGO;
