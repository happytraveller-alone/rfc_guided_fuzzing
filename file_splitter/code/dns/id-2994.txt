//----- (00000001401587C8) ----------------------------------------------------
__int64 initializeSecurityPackage()
{
  HMODULE Library; // rax
  int LastError; // eax
  int v2; // r9d
  unsigned int v3; // ebx
  __int64 v4; // rcx
  __int64 (*ProcAddress)(void); // rax
  __int64 v6; // rax
  __int64 v7; // r8
  int v8; // eax
  __int64 v10; // [rsp+20h] [rbp-28h] BYREF
  UUID Uuid; // [rsp+28h] [rbp-20h] BYREF

  EnterCriticalSection(&SecurityContextListCS);
  if ( g_fSecurityPackageInitialized )
    goto LABEL_23;
  qword_1401BA078 = -1i64;
  g_hSspiCredentials = -1i64;
  Library = LoadLibraryExA("sspicli.dll", 0i64, 0x800u);
  g_hLibSecurity = Library;
  if ( !Library )
  {
    LastError = GetLastError();
    v3 = LastError;
    if ( (byte_1401BA001 & 4) == 0 )
      goto LABEL_18;
    v4 = 26i64;
    goto LABEL_17;
  }
  ProcAddress = GetProcAddress(Library, "InitSecurityInterfaceW");
  if ( !ProcAddress )
  {
    LastError = GetLastError();
    v3 = LastError;
    if ( (byte_1401BA001 & 4) == 0 )
      goto LABEL_18;
    v4 = 27i64;
    goto LABEL_17;
  }
  v6 = ProcAddress();
  g_pSecurityFunctionTable = v6;
  if ( v6 )
  {
    v8 = (*(__int64 (__fastcall **)(const wchar_t *, __int64 *))(v6 + 136))(L"negotiate", &v10);
    v3 = v8;
    if ( v8 < 0 )
    {
      if ( (byte_1401BA001 & 4) != 0 )
        WPP_SF_SD(
          29i64,
          (unsigned __int16)&WPP_9b9f12dbc4273be48aea1d81c92c8dd1_Traceguids,
          (__int64)L"negotiate",
          (const unsigned __int16 *)(unsigned int)v8);
      goto LABEL_18;
    }
    LODWORD(g_SecurityTokenMaxLength) = *(_DWORD *)(v10 + 8);
    (*(void (**)(void))(g_pSecurityFunctionTable + 128))();
    LastError = Dns_RefreshSSpiCredentialsHandle();
    v3 = LastError;
    if ( LastError < 0 )
    {
      if ( (byte_1401BA001 & 0x20) == 0 )
        goto LABEL_18;
      v4 = 30i64;
LABEL_17:
      WPP_SF_D(v4, (unsigned __int16)&WPP_9b9f12dbc4273be48aea1d81c92c8dd1_Traceguids, (unsigned int)LastError, v2);
LABEL_18:
      if ( !v3 )
        v3 = 1114;
      goto LABEL_24;
    }
    UuidCreateSequential(&Uuid);
    DnsStringPrint_Guid(&Uuid.Data1);
    if ( (byte_1401BA001 & 0x20) != 0 )
      WPP_SF_SD(
        31i64,
        (unsigned __int16)&WPP_9b9f12dbc4273be48aea1d81c92c8dd1_Traceguids,
        (__int64)L"negotiate",
        (const unsigned __int16 *)(unsigned int)g_SecurityTokenMaxLength);
    g_fSecurityPackageInitialized = 1;
LABEL_23:
    v3 = 0;
    goto LABEL_24;
  }
  v3 = 1114;
  if ( (byte_1401BA001 & 4) != 0 )
    WPP_SF_(28i64, (unsigned __int16)&WPP_9b9f12dbc4273be48aea1d81c92c8dd1_Traceguids, v7);
LABEL_24:
  LeaveCriticalSection(&SecurityContextListCS);
  return v3;
}
// 1401588AB: variable 'v7' is possibly undefined
// 14015893F: variable 'v2' is possibly undefined
// 140185140: using guessed type __int64 (__fastcall *_guard_dispatch_icall_fptr)(_QWORD, _QWORD);
// 1401956D0: using guessed type wchar_t aNegotiate[10];
// 1401B9E3C: using guessed type int g_fSecurityPackageInitialized;
// 1401BA001: using guessed type char byte_1401BA001;
// 1401BA070: using guessed type __int64 g_hSspiCredentials;
// 1401BA078: using guessed type __int64 qword_1401BA078;
// 1401BA088: using guessed type __int64 g_pSecurityFunctionTable;
