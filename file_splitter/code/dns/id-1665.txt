//----- (00000001400D3900) ----------------------------------------------------
__int64 __fastcall Rpc_ResetZoneSecondaries(__int64 a1, __int64 a2, __int64 a3, __int64 a4, int a5, __int64 a6)
{
  void *v6; // r13
  void *v8; // r14
  int v9; // r15d
  CDnsClientSubnetRecordsTrie *v10; // rcx
  const char *v11; // r9
  unsigned int v12; // edi
  unsigned int v13; // esi
  _DWORD *v14; // r12
  unsigned int v15; // edi
  _DWORD *v16; // rbp
  __int64 v17; // rdx
  __int64 v18; // r8
  int v19; // r9d
  __int64 v21; // [rsp+40h] [rbp-38h] BYREF
  _DWORD *v22; // [rsp+48h] [rbp-30h] BYREF

  v6 = 0i64;
  v8 = 0i64;
  v22 = 0i64;
  v21 = 0i64;
  v9 = 1;
  v10 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    if ( a3 )
      v11 = *(const char **)(a3 + 16);
    else
      v11 = 0i64;
    WPP_SF_s(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x4Eu, (__int64)&WPP_5efa35e0870730ffd13051b9da022308_Traceguids, v11);
    v10 = WPP_GLOBAL_Control;
  }
  if ( a6 && a3 )
  {
    if ( (unsigned int)(*(_DWORD *)(a3 + 372) - 3) <= 1 )
    {
      v12 = 9611;
    }
    else if ( (*(_BYTE *)(a3 + 388) & 1) != 0 && (dword_1401B9750 || g_fDsReadOnlyDcMode)
           || (*(_BYTE *)(a3 + 1160) & 0x40) != 0 )
    {
      v12 = 9569;
    }
    else
    {
      v13 = *(_DWORD *)(a6 + 8);
      v14 = *(_DWORD **)(a6 + 16);
      v15 = *(_DWORD *)(a6 + 12);
      v16 = *(_DWORD **)(a6 + 24);
      if ( v10 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_BYTE *)v10 + 68) & 4) != 0
        && *((_BYTE *)v10 + 65) >= 4u )
      {
        WPP_SF_sdqdq(*((_QWORD *)v10 + 7), a6, (__int64)&WPP_GLOBAL_Control, *(const char **)(a3 + 16));
      }
      if ( v13 == -1145324613 )
      {
        v13 = *(_DWORD *)(a3 + 380);
        v14 = *(_DWORD **)(a3 + 552);
      }
      if ( v15 == -1145324613 )
      {
        v15 = *(unsigned __int8 *)(a3 + 385);
        v9 = 0;
        v16 = *(_DWORD **)(a3 + 544);
      }
      if ( v15 > 2 || v13 > 3 )
      {
        v12 = 13;
      }
      else
      {
        DnsAddrArray_Diff(*(_DWORD **)(a3 + 544), v16, 3, &v22, &v21, 0i64);
        v6 = v22;
        v8 = (void *)v21;
        if ( (!v22 || !v22[1]) && (!v21 || !*(_DWORD *)(v21 + 4)) )
          v9 = 0;
        v12 = Zone_SetSecondaries(a3, v13, v14, v15, v16, v9, 0x10000000);
        if ( !v12 )
        {
          Config_UpdateBootInfo();
          Xfr_SendNotify(a3, v17, v18, v19);
        }
      }
    }
  }
  else
  {
    v12 = 87;
  }
  Dns_Free(v8);
  Dns_Free(v6);
  return v12;
}
// 1400D3AD6: variable 'v17' is possibly undefined
// 1400D3AD6: variable 'v18' is possibly undefined
// 1400D3AD6: variable 'v19' is possibly undefined
// 1401B8C94: using guessed type int g_fDsReadOnlyDcMode;
// 1401B9750: using guessed type int dword_1401B9750;
