//----- (00000001400AE1B8) ----------------------------------------------------
HANDLE __fastcall Thread_Create(const char *a1, __int64 (__fastcall *a2)(__int64 a1), __int64 a3, unsigned int a4)
{
  CDnsClientSubnetRecordsTrie *v8; // rcx
  DWORD v9; // eax
  _QWORD *v11; // rax
  void *v12; // rbx
  HANDLE Thread; // rax
  HANDLE v14; // rbx
  int LastError; // eax
  __int64 v16; // rdx
  __int64 v17; // rdx
  int ThreadId[4]; // [rsp+40h] [rbp-48h] BYREF
  __int128 v19; // [rsp+50h] [rbp-38h] BYREF
  __int128 v20; // [rsp+60h] [rbp-28h] BYREF

  v8 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 1) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_s(*((_QWORD *)WPP_GLOBAL_Control + 7), 0xCu, (__int64)&WPP_6ca4fd025e513a987df6fb94f4a49df0_Traceguids, a1);
    v8 = WPP_GLOBAL_Control;
  }
  v9 = g_ThreadCount;
  if ( !g_ThreadCount )
  {
    g_XfrThreadCount = 0;
    if ( (unsigned int)DnsInitializeCriticalSection(&csThreadList) )
      return 0i64;
    v8 = WPP_GLOBAL_Control;
    v9 = g_ThreadCount;
  }
  if ( v9 >= 0x864 )
  {
    if ( v8 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)v8 + 68) & 1) != 0
      && *((_BYTE *)v8 + 65) >= 4u )
    {
      WPP_SF_D(*((_QWORD *)v8 + 7), 0xDu, (__int64)&WPP_6ca4fd025e513a987df6fb94f4a49df0_Traceguids, 2148);
    }
    Dbg_ThreadHandleArray();
    return 0i64;
  }
  if ( a2 == Xfr_ReceiveThread && g_XfrThreadCount > 2 * g_ProcessorCount + 3 )
  {
    if ( v8 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)v8 + 68) & 1) != 0
      && *((_BYTE *)v8 + 65) >= 4u )
    {
      WPP_SF_D(*((_QWORD *)v8 + 7), 0xEu, (__int64)&WPP_6ca4fd025e513a987df6fb94f4a49df0_Traceguids, g_XfrThreadCount);
    }
    return 0i64;
  }
  v11 = Mem_Alloc(0x10u, 13i64, "ds\\dns\\server\\server\\thread.c", 239);
  v12 = v11;
  if ( !v11 )
    return 0i64;
  *v11 = a2;
  v11[1] = a3;
  EnterCriticalSection(&csThreadList);
  Thread = CreateThread(0i64, 0i64, (LPTHREAD_START_ROUTINE)threadTopFunction, v12, 0, (LPDWORD)ThreadId);
  v14 = Thread;
  if ( !Thread )
  {
    LeaveCriticalSection(&csThreadList);
    if ( !a4 )
      a4 = 111;
    v19 = *GetEventDescriptor(&v20, a4);
    LastError = GetLastError();
    Eventlog_LogEvent((__int64)&v19, v16, 0, 0i64, 0i64, LastError, 0, 0i64);
    return 0i64;
  }
  v17 = g_ThreadCount;
  g_ThreadHandleArray[g_ThreadCount] = Thread;
  g_ThreadIdArray[v17] = ThreadId[0];
  g_ThreadTitleArray[v17] = (__int64)a1;
  Dbg_Thread("Created new thread", v17);
  ++g_ThreadCount;
  if ( a2 == Xfr_ReceiveThread )
    ++g_XfrThreadCount;
  LeaveCriticalSection(&csThreadList);
  return v14;
}
// 1400AE388: variable 'v16' is possibly undefined
// 1401BB580: using guessed type HANDLE g_ThreadHandleArray[2148];
// 1401BF8A0: using guessed type int g_ThreadIdArray[2152];
// 1401C1A40: using guessed type __int64 g_ThreadTitleArray[2148];
// 1401C5D60: using guessed type int g_XfrThreadCount;
// 1400AE1B8: using guessed type DWORD ThreadId[4];
