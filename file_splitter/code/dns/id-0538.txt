//----- (000000014004B204) ----------------------------------------------------
__int64 Ds_ListenAndAddNewZones()
{
  WCHAR *v0; // r12
  CDnsClientSubnetRecordsTrie *v1; // rcx
  ULONG v3; // eax
  unsigned int v4; // ebx
  LDAPMessage *i; // rax
  PWCHAR dnW; // rax
  __int64 v7; // r8
  __int64 v8; // r9
  CDnsClientSubnetRecordsTrie *v9; // rcx
  const unsigned __int16 **valuesW; // rax
  PWCHAR *v11; // rbx
  const unsigned __int16 **v12; // rax
  PWCHAR *v13; // rbx
  CDnsClientSubnetRecordsTrie *v14; // rcx
  unsigned __int16 v15; // dx
  wchar_t *v16; // r9
  int LastError; // eax
  unsigned __int16 v18; // dx
  __int64 v19; // rax
  __int64 v20; // rbx
  const char *v21; // rax
  __int64 v22; // rax
  struct berval **values_lenW; // rax
  _QWORD *v24; // rcx
  struct berval **v25; // rsi
  int v26; // edi
  struct berval *v27; // rax
  _QWORD *bv_val; // rdx
  __int64 v29; // rdx
  char **v30; // rax
  PWCHAR *v31; // rbx
  __int64 v32; // r8
  __int64 v33; // r9
  __int64 v34; // rax
  int ZoneFromDs; // eax
  __int64 v36; // rbx
  bool v37; // zf
  __int64 v38; // rax
  LDAPMessage *DSObject; // rdi
  struct _zone_info *v40; // rbx
  int v41; // eax
  LDAPMessage *v42; // r15
  ULONG v43; // eax
  int v44; // ebx
  PWCHAR v45; // rax
  CDnsClientSubnetRecordsTrie *v46; // rcx
  unsigned __int16 v47; // dx
  LDAPMessage *res; // [rsp+48h] [rbp-C0h] BYREF
  unsigned __int16 *base[3]; // [rsp+50h] [rbp-B8h] BYREF
  struct l_timeval timeout; // [rsp+68h] [rbp-A0h] BYREF
  CHAR MultiByteStr[256]; // [rsp+78h] [rbp-90h] BYREF
  WCHAR WideCharStr[256]; // [rsp+178h] [rbp+70h] BYREF
  wchar_t Str[1288]; // [rsp+378h] [rbp+270h] BYREF

  timeout = 0i64;
  v0 = 0i64;
  res = 0i64;
  v1 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
  {
    WPP_SF_D(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x228u,
      (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
      dword_1401B9714);
    v1 = WPP_GLOBAL_Control;
  }
  if ( dword_1401B9728 != 3 )
  {
    if ( v1 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)v1 + 17) & 0x400) != 0
      && *((_BYTE *)v1 + 65) >= 3u )
    {
      WPP_SF_(*((_QWORD *)v1 + 7), 0x229u, (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids);
    }
    return 87i64;
  }
  if ( g_ZoneNotifyMsgId == -1 )
  {
    if ( v1 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)v1 + 17) & 0x400) != 0
      && *((_BYTE *)v1 + 65) >= 4u )
    {
      WPP_SF_(*((_QWORD *)v1 + 7), 0x22Au, (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids);
    }
    return setNotifyForIncomingZone();
  }
LABEL_17:
  if ( res )
    ldap_msgfree(res);
  v3 = ldap_result(pServerLdap, g_ZoneNotifyMsgId, 0, &timeout, &res);
  v4 = v3;
  if ( g_fDnsServiceExit == 1 )
  {
    v46 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      || (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) == 0
      || *((_BYTE *)WPP_GLOBAL_Control + 65) < 4u )
    {
      goto LABEL_175;
    }
    v47 = 555;
  }
  else
  {
    if ( v3 )
    {
      if ( v3 == 100 )
      {
        ++dword_1401B8D58;
        for ( i = ldap_first_entry(pServerLdap, res); ; i = ldap_next_entry(pServerLdap, v42) )
        {
          v42 = i;
          if ( !i )
            goto LABEL_17;
          ldap_memfreeW(v0);
          dnW = ldap_get_dnW(pServerLdap, v42);
          v0 = dnW;
          if ( !dnW )
            continue;
          v9 = WPP_GLOBAL_Control;
          if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control )
          {
            if ( (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) == 0 )
              goto LABEL_46;
            if ( *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
            {
              WPP_SF_DS(
                *((_QWORD *)WPP_GLOBAL_Control + 7),
                0x22Du,
                (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
                dword_1401B8D58,
                (__int64)dnW);
              v9 = WPP_GLOBAL_Control;
            }
          }
          if ( (*((_DWORD *)v9 + 17) & 0x400) != 0 && *((_BYTE *)v9 + 65) >= 5u )
          {
            if ( v9 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control )
              WPP_SF_lS(*((_QWORD *)v9 + 7), 0x22Eu, v7, v8, (__int64)v0);
            valuesW = (const unsigned __int16 **)ldap_get_valuesW(pServerLdap, v42, (const PWSTR)L"usnChanged");
            v11 = (PWCHAR *)valuesW;
            if ( valuesW && *valuesW )
            {
              if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
                && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
              {
                WPP_SF_S(
                  *((_QWORD *)WPP_GLOBAL_Control + 7),
                  0x22Fu,
                  (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
                  *valuesW);
              }
              ldap_value_freeW(v11);
            }
            v12 = (const unsigned __int16 **)ldap_get_valuesW(pServerLdap, v42, (const PWSTR)L"whenChanged");
            v13 = (PWCHAR *)v12;
            if ( v12 && *v12 )
            {
              if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
                && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
              {
                WPP_SF_S(
                  *((_QWORD *)WPP_GLOBAL_Control + 7),
                  0x230u,
                  (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
                  *v12);
              }
              ldap_value_freeW(v13);
            }
          }
LABEL_46:
          if ( (unsigned int)isDsProcessedName(v0) )
          {
            if ( (int)StringCchCopyW((char *)Str, 1281i64, (char *)v0) < 0 )
              continue;
            if ( (unsigned int)readDsDeletedName(Str, (char *)WideCharStr) )
            {
              if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
                && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
              {
                WPP_SF_S(
                  *((_QWORD *)WPP_GLOBAL_Control + 7),
                  0x233u,
                  (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
                  WideCharStr);
              }
              MultiByteStr[0] = 0;
              WideCharToMultiByte(0xFDE9u, 0, WideCharStr, -1, MultiByteStr, 255, 0i64, 0i64);
              if ( MultiByteStr[0] )
              {
                v19 = Lookup_ZoneTreeNodeFromDottedNameEx(MultiByteStr, 0, 0x2000000, 0i64);
                if ( !v19 )
                {
                  v20 = 0i64;
LABEL_65:
                  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
                    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
                  {
                    v21 = "does not exist";
                    if ( v20 )
                      v21 = "exists but is not DS integrated";
                    WPP_SF_Ss(
                      *((_QWORD *)WPP_GLOBAL_Control + 7),
                      0x239u,
                      (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
                      WideCharStr,
                      (__int64)v21);
                  }
                  continue;
                }
                v20 = *(_QWORD *)(v19 + 56);
                if ( !v20 || (*(_BYTE *)(v20 + 388) & 1) == 0 )
                  goto LABEL_65;
                base[0] = WideCharStr;
                v22 = *(_QWORD *)(v20 + 848);
                if ( !v22 || (*(_BYTE *)(v22 + 100) & 2) != 0 )
                {
                  values_lenW = ldap_get_values_lenW(pServerLdap, v42, (const PWSTR)L"objectGUID");
                  v24 = *(_QWORD **)(v20 + 856);
                  v25 = values_lenW;
                  if ( v24 )
                  {
                    if ( !values_lenW
                      || (v27 = *values_lenW) == 0i64
                      || v27->bv_len != 16
                      || (bv_val = v27->bv_val, *bv_val != *v24)
                      || (v26 = 1, bv_val[1] != v24[1]) )
                    {
                      v26 = 0;
                    }
                  }
                  else
                  {
                    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
                      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
                    {
                      WPP_SF_s(
                        *((_QWORD *)WPP_GLOBAL_Control + 7),
                        0x236u,
                        (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
                        *(const char **)(v20 + 16));
                    }
                    v26 = 1;
                  }
                  ldap_value_free_len(v25);
                  if ( v26 )
                  {
                    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
                      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
                    {
                      WPP_SF_s(
                        *((_QWORD *)WPP_GLOBAL_Control + 7),
                        0x238u,
                        (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
                        *(const char **)(v20 + 16));
                    }
                    Zone_Delete((struct _zone_info *)v20, 0, 1, 1, 0);
                    *(_OWORD *)&base[1] = DNS_EVENT_DS_ZONE_DELETE_DETECTED;
                    Eventlog_LogEvent((__int64)&base[1], v29, 1u, base, 0i64, 0, 0, 0i64);
                  }
                  else if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                         && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
                         && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
                  {
                    WPP_SF_s(
                      *((_QWORD *)WPP_GLOBAL_Control + 7),
                      0x237u,
                      (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
                      *(const char **)(v20 + 16));
                  }
                }
                else
                {
                  v14 = WPP_GLOBAL_Control;
                  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
                    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
                  {
                    v15 = 565;
                    goto LABEL_79;
                  }
                }
              }
              else if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                     && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
                     && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
              {
                LastError = GetLastError();
                v18 = 564;
LABEL_62:
                WPP_SF_D(
                  *((_QWORD *)WPP_GLOBAL_Control + 7),
                  v18,
                  (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
                  LastError);
                continue;
              }
            }
            else
            {
              v14 = WPP_GLOBAL_Control;
              if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
                && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
              {
                v15 = 562;
                v16 = Str;
                goto LABEL_156;
              }
            }
          }
          else
          {
            v30 = (char **)ldap_get_valuesW(pServerLdap, v42, DsTypeAttributeTable);
            v31 = (PWCHAR *)v30;
            if ( v30 && *v30 )
            {
              if ( (int)StringCchCopyW((char *)WideCharStr, 256i64, *v30) < 0 )
                continue;
              ldap_value_freeW(v31);
              MultiByteStr[0] = 0;
              WideCharToMultiByte(0xFDE9u, 0, WideCharStr, -1, MultiByteStr, 255, 0i64, 0i64);
              if ( MultiByteStr[0] )
              {
                if ( !wcscmp_0(WideCharStr, L"RootDNSServers") )
                {
                  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
                    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
                  {
                    WPP_SF_lS(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x23Cu, v32, v33, (__int64)WideCharStr);
                  }
                  continue;
                }
                v34 = Lookup_ZoneTreeNodeFromDottedNameEx(MultiByteStr, 0, 0x2000000, 0i64);
                if ( !v34 )
                {
                  base[0] = 0i64;
                  goto LABEL_117;
                }
                v36 = *(_QWORD *)(v34 + 56);
                base[0] = (unsigned __int16 *)v36;
                if ( !v36 )
                  goto LABEL_117;
                v37 = (*(_DWORD *)(v36 + 396) & 0x100) == 0;
                base[1] = 0i64;
                if ( v37 )
                {
                  v38 = *(_QWORD *)(v36 + 848);
                  if ( !v38 || (*(_BYTE *)(v38 + 100) & 2) != 0 )
                  {
                    v14 = WPP_GLOBAL_Control;
                    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
                      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
                    {
                      v15 = 574;
LABEL_79:
                      v16 = WideCharStr;
LABEL_156:
                      WPP_SF_S(
                        *((_QWORD *)v14 + 7),
                        v15,
                        (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
                        v16);
                      continue;
                    }
                  }
                  else if ( (int)Ds_CreateDomainNcDn(WideCharStr, &base[1]) >= 0 )
                  {
                    DSObject = Ds_LoadOrCreateDSObject(0i64, base[1], 0i64, 0, 0i64, 0i64);
                    Mem_Free((_QWORD *)base[1], 0i64, 0i64, (__int64)"ds\\dns\\server\\server\\ds.c", 20927);
                    if ( DSObject )
                    {
                      ldap_msgfree(DSObject);
                      Zone_Delete((struct _zone_info *)v36, 0, 0, 0, 0);
LABEL_117:
                      ZoneFromDs = Ds_CreateZoneFromDs(v42, g_pLegacyDp, (__int64 *)base, 0i64);
                      if ( ZoneFromDs )
                      {
                        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                          && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
                          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
                        {
                          WPP_SF_D(
                            *((_QWORD *)WPP_GLOBAL_Control + 7),
                            0x241u,
                            (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
                            ZoneFromDs);
                        }
                      }
                      else
                      {
                        v40 = (struct _zone_info *)base[0];
                        v41 = Zone_Load((__int64)base[0], 0);
                        if ( v41 )
                        {
                          if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                            && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
                            && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
                          {
                            WPP_SF_D(
                              *((_QWORD *)WPP_GLOBAL_Control + 7),
                              0x242u,
                              (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
                              v41);
                          }
                          Zone_Delete(v40, 0, 0, 0, 0);
                        }
                        else
                        {
                          Zone_UnlockAfterWriteEx((__int64)v40, 1, (__int64)"ds\\dns\\server\\server\\ds.c", 17);
                        }
                      }
                      continue;
                    }
                    v14 = WPP_GLOBAL_Control;
                    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
                      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
                    {
                      v15 = 576;
                      goto LABEL_79;
                    }
                  }
                  else
                  {
                    v14 = WPP_GLOBAL_Control;
                    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
                      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
                    {
                      v15 = 575;
                      goto LABEL_79;
                    }
                  }
                }
                else
                {
                  v14 = WPP_GLOBAL_Control;
                  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
                    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
                  {
                    v15 = 573;
                    goto LABEL_79;
                  }
                }
              }
              else if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                     && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
                     && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
              {
                LastError = GetLastError();
                v18 = 571;
                goto LABEL_62;
              }
            }
            else
            {
              v14 = WPP_GLOBAL_Control;
              if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
                && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
              {
                v15 = 570;
                v16 = v0;
                goto LABEL_156;
              }
            }
          }
        }
      }
      v43 = ldap_result2error(pServerLdap, res, 1u);
      v44 = v43;
      res = 0i64;
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
      {
        v45 = ldap_err2stringW(v43);
        WPP_SF_DS(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0x243u,
          (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
          v44,
          (__int64)v45);
      }
      ldap_abandon(pServerLdap, g_ZoneNotifyMsgId);
      g_ZoneNotifyMsgId = -1;
      v4 = setNotifyForIncomingZone();
      goto LABEL_174;
    }
    v46 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      || (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) == 0
      || *((_BYTE *)WPP_GLOBAL_Control + 65) < 4u )
    {
      goto LABEL_175;
    }
    v47 = 556;
  }
  WPP_SF_(*((_QWORD *)v46 + 7), v47, (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids);
LABEL_174:
  v46 = WPP_GLOBAL_Control;
LABEL_175:
  if ( res )
  {
    ldap_msgfree(res);
    v46 = WPP_GLOBAL_Control;
  }
  if ( v0 )
  {
    ldap_memfreeW(v0);
    v46 = WPP_GLOBAL_Control;
  }
  if ( v4 )
  {
    if ( v46 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)v46 + 17) & 0x400) != 0
      && *((_BYTE *)v46 + 65) >= 2u )
    {
      WPP_SF_D(*((_QWORD *)v46 + 7), 0x244u, (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids, v4);
    }
  }
  else if ( v46 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
         && (*((_DWORD *)v46 + 17) & 0x400) != 0
         && *((_BYTE *)v46 + 65) >= 5u )
  {
    WPP_SF_(*((_QWORD *)v46 + 7), 0x245u, (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids);
  }
  return v4;
}
// 14004B407: variable 'v7' is possibly undefined
// 14004B407: variable 'v8' is possibly undefined
// 14004B83D: variable 'v29' is possibly undefined
// 14004B94E: variable 'v32' is possibly undefined
// 14004B94E: variable 'v33' is possibly undefined
// 140186DD0: using guessed type __int128 DNS_EVENT_DS_ZONE_DELETE_DETECTED;
// 1401B8D10: using guessed type __int64 g_pLegacyDp;
// 1401B8D58: using guessed type int dword_1401B8D58;
// 1401B9714: using guessed type int dword_1401B9714;
// 1401B9728: using guessed type int dword_1401B9728;
// 1401B9A40: using guessed type int g_fDnsServiceExit;
