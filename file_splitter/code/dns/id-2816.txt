//----- (000000014014C4F0) ----------------------------------------------------
void **__fastcall std::list<std::wstring>::_Insert<std::_List_iterator<std::_List_val<std::wstring>>>(
        __int64 a1,
        __int64 a2,
        const void **a3,
        const void **a4)
{
  void **result; // rax
  __int64 v5; // rbx
  __int64 v6; // rdi
  _QWORD *v7; // rdx
  __int64 v8; // rax
  void *retaddr; // [rsp+48h] [rbp+0h] BYREF
  const void **v11; // [rsp+60h] [rbp+18h]
  const void **v12; // [rsp+68h] [rbp+20h]

  result = &retaddr;
  v12 = a4;
  v11 = a3;
  v5 = a2;
  v6 = a1;
  while ( a3 != a4 )
  {
    v7 = std::_List_val<std::wstring>::_Buynode(a1, v5, *(_QWORD *)(v5 + 8), a3 + 2);
    v8 = *(_QWORD *)(v6 + 8);
    a1 = 0x666666666666665i64 - v8;
    if ( v8 == 0x666666666666665i64 )
      std::_Xlength_error("list<T> too long");
    *(_QWORD *)(v6 + 8) = v8 + 1;
    *(_QWORD *)(v5 + 8) = v7;
    result = (void **)v7[1];
    *result = v7;
    a3 = (const void **)*v11;
    v11 = (const void **)*v11;
    a4 = v12;
    v5 = a2;
  }
  return result;
}
// 140184CA8: using guessed type void __stdcall operator delete(void *);
