//----- (0000000140102E30) ----------------------------------------------------
__int64 __fastcall Rpc_GetZoneSigningInfo(
        __int64 a1,
        __int64 a2,
        __int64 a3,
        __int64 a4,
        __int64 a5,
        int a6,
        _DWORD *a7,
        struct _DnssrvRpcZoneDnssecSettings **a8)
{
  int v8; // ebp
  __int64 v9; // rbx
  _DWORD *v10; // r14
  struct _DnssrvRpcZoneDnssecSettings *v11; // r15
  struct _DnssrvRpcZoneDnssecSettings **v12; // r12
  const char *v14; // r9
  unsigned int v15; // edi
  __int64 v17; // rcx
  struct _DnssrvRpcZoneDnssecSettings *ZoneSigningInfo; // rax
  __int64 *v19; // r14
  _QWORD *v20; // r12
  _QWORD *zero; // rax
  _QWORD *v22; // rbp
  struct _DnssrvRpcSigningKeyDescriptor *Skd; // rax
  struct _DnsRpcSigningKeyDescriptorState *SkdState; // rax
  struct _DnsRpcSigningKeyDescriptorStateEx *v25; // rax
  __int64 v26; // rax
  UINT v27; // ecx
  WCHAR Buffer[64]; // [rsp+50h] [rbp-B8h] BYREF

  v8 = a6;
  v9 = 0i64;
  v10 = a7;
  v11 = 0i64;
  v12 = a8;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    if ( a3 )
      v14 = *(const char **)(a3 + 16);
    else
      v14 = 0i64;
    WPP_SF_s(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x76u, (__int64)&WPP_fcf90f505e41335ad1a88e0d5ede2d0c_Traceguids, v14);
  }
  *a7 = 0;
  *a8 = 0i64;
  if ( !a3 )
  {
    v15 = 87;
LABEL_10:
    DnssrvFreeZoneSigningInfo((void **)v11);
    goto LABEL_11;
  }
  v17 = a3;
  if ( *(_QWORD *)(a3 + 328) )
    v17 = *(_QWORD *)(a3 + 328);
  if ( *(_QWORD *)(v17 + 200) )
  {
    v15 = 9553;
    goto LABEL_10;
  }
  v15 = Zone_LockForWriteEx(a3, 1, 0x2710u, (__int64)"ds\\dns\\server\\server\\olsrpc.cpp", 101);
  if ( v15 )
    goto LABEL_10;
  if ( *(_DWORD *)(a3 + 372) != 1 || (*(_BYTE *)(a3 + 388) & 1) != 0 )
  {
    v15 = 9611;
    goto LABEL_43;
  }
  ZoneSigningInfo = Rpc_AllocateZoneSigningInfo((struct _zone_info *)a3, a6);
  v11 = ZoneSigningInfo;
  if ( !ZoneSigningInfo )
  {
    v15 = 14;
    goto LABEL_43;
  }
  v19 = *(__int64 **)(a3 + 1136);
  if ( !v19 )
    goto LABEL_40;
  v20 = (_QWORD *)((char *)ZoneSigningInfo + 120);
  while ( 1 )
  {
    if ( !a6 && *((_DWORD *)v19 + 9) )
      goto LABEL_36;
    zero = MIDL_user_allocate_zero(0x20ui64);
    v22 = zero;
    if ( !zero )
      break;
    *v20++ = zero;
    Skd = Rpc_AllocateSkd((struct _dnsskd *)v19);
    if ( !Skd )
      break;
    v22[1] = Skd;
    SkdState = Rpc_AllocateSkdState((struct _dnsskd *)v19);
    if ( !SkdState )
      break;
    v22[2] = SkdState;
    v25 = Rpc_AllocateSkdStateEx((struct _zone_info *)a3, (struct _dnsskd *)v19);
    if ( !v25 )
      break;
    v22[3] = v25;
LABEL_36:
    v19 = (__int64 *)*v19;
    if ( !v19 )
      goto LABEL_39;
  }
  v15 = 14;
LABEL_39:
  v8 = a6;
  v12 = a8;
LABEL_40:
  v26 = *(_QWORD *)(a3 + 1128);
  v10 = a7;
  if ( v26 )
    *((_OWORD *)v11 + 5) = *(_OWORD *)(v26 + 8);
LABEL_43:
  Zone_UnlockAfterWriteEx(a3, 1, (__int64)"ds\\dns\\server\\server\\olsrpc.cpp", 195);
  if ( v15 )
    goto LABEL_10;
  memset_0(Buffer, 0, sizeof(Buffer));
  v27 = 12020;
  if ( !v8 )
    v27 = 12021;
  Dns_GetResourceString(v27, Buffer, 64i64);
  if ( (dword_1401B9104 & 0x10) != 0 )
    Template_zz(
      Microsoft_Windows_DNSServerHandle,
      &DNS_EVENT_EXPORT_DNSSEC,
      Buffer,
      *(const unsigned __int16 **)(a3 + 24));
  *v10 = 51;
  *v12 = v11;
LABEL_11:
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    if ( a3 )
      v9 = *(_QWORD *)(a3 + 16);
    WPP_SF_Ds(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x77u,
      (__int64)&WPP_fcf90f505e41335ad1a88e0d5ede2d0c_Traceguids,
      v15,
      v9);
  }
  return v15;
}
// 1401B9104: using guessed type int dword_1401B9104;
