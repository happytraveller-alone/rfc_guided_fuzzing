//----- (00000001400BE304) ----------------------------------------------------
__int64 __fastcall Dns_LdapAddExt(
        LDAP *ld,
        PWSTR dn,
        LDAPModW *attrs[],
        PLDAPControlW *ServerControls,
        PLDAPControlW *ClientControls,
        ULONG MessageNumber,
        char a7)
{
  int v11; // esi
  ULONG v12; // eax
  ULONG LastError; // ebx
  __int64 v14; // r8
  int v15; // eax

  MessageNumber = 0;
  v11 = 3;
  while ( 1 )
  {
    v12 = ldap_add_extW(ld, dn, attrs, ServerControls, ClientControls, &MessageNumber);
    if ( !v12 )
      break;
    if ( v12 == 8364 || g_fDnsServiceExit == 1 )
    {
      LastError = 8364;
LABEL_12:
      if ( LastError )
        goto LABEL_18;
      break;
    }
    LastError = LdapGetLastError();
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_DdS(*((_QWORD *)WPP_GLOBAL_Control + 7), 0xAu, v14, LastError, v11, (__int64)dn);
    }
    v15 = v11--;
    if ( v15 <= 0 )
      goto LABEL_12;
  }
  LastError = Ds_CommitAsyncRequest(ld, 105, MessageNumber, 0i64);
  if ( !LastError )
    goto LABEL_19;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_DS(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0xBu,
      (__int64)&WPP_1dbf779182cd3676c9d6070c95a7abed_Traceguids,
      LastError,
      (__int64)dn);
  }
LABEL_18:
  LastError = Ds_ErrorHandler(LastError, (__int64)dn, ld, a7);
LABEL_19:
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_DS(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0xCu,
      (__int64)&WPP_1dbf779182cd3676c9d6070c95a7abed_Traceguids,
      LastError,
      (__int64)dn);
  }
  return LastError;
}
// 1400BE3AF: variable 'v14' is possibly undefined
// 1401B9A40: using guessed type int g_fDnsServiceExit;
