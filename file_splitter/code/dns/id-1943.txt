//----- (00000001400ED3D4) ----------------------------------------------------
__int64 __fastcall DnsOls_CreateMissingKeys(__int64 a1)
{
  __int64 v1; // rbx
  unsigned int Key; // ebp
  CDnsClientSubnetRecordsTrie *v4; // rcx
  __int64 v5; // rdi
  int v6; // r12d
  char *v7; // rax
  __int64 *v8; // rax
  char *v9; // rax
  __int64 *v10; // rax
  char *v11; // rax
  __int64 *v12; // rax
  int v13; // eax
  char *v14; // rax
  unsigned __int16 v15; // dx
  __int64 v17; // [rsp+20h] [rbp-38h]

  v1 = 0i64;
  Key = 0;
  if ( !a1 )
  {
    Key = 87;
    v4 = WPP_GLOBAL_Control;
    goto LABEL_61;
  }
  v5 = *(_QWORD *)(a1 + 1136);
  v4 = WPP_GLOBAL_Control;
  if ( !v5 )
    goto LABEL_67;
  while ( 1 )
  {
    v6 = 0;
    if ( v4 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)v4 + 17) & 0x200000) != 0
      && *((_BYTE *)v4 + 65) >= 4u )
    {
      v7 = Dbg_GuidString((const IID *)(v5 + 8));
      WPP_SF_Ss(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x43u,
        (__int64)&WPP_4a0a7bf065bf32df4bbeec8f9c7ea0c3_Traceguids,
        (const unsigned __int16 *)v7,
        *(_QWORD *)(a1 + 16));
      v4 = WPP_GLOBAL_Control;
    }
    v8 = (__int64 *)(v5 + 144);
    if ( !*(_QWORD *)(v5 + 144) )
      break;
LABEL_15:
    if ( (*(_DWORD *)(a1 + 1040) & 0x1000) != 0 )
    {
      if ( *(_DWORD *)(v5 + 36) )
      {
        v10 = (__int64 *)(v5 + 168);
        if ( !*(_QWORD *)(v5 + 168) )
        {
          if ( v4 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_DWORD *)v4 + 17) & 0x200000) != 0
            && *((_BYTE *)v4 + 65) >= 4u )
          {
            v11 = Dbg_GuidString((const IID *)(v5 + 8));
            WPP_SF_Ss(
              *((_QWORD *)WPP_GLOBAL_Control + 7),
              0x46u,
              (__int64)&WPP_4a0a7bf065bf32df4bbeec8f9c7ea0c3_Traceguids,
              (const unsigned __int16 *)v11,
              *(_QWORD *)(a1 + 16));
            v10 = (__int64 *)(v5 + 168);
          }
          LODWORD(v17) = 0;
          *(_DWORD *)(v5 + 184) = 3;
          Key = DnsOls_CreateKey((LDAPModW *)a1, v5, 3, v10, v17);
          if ( Key )
          {
            v4 = WPP_GLOBAL_Control;
            if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
              || (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x200000) == 0
              || *((_BYTE *)WPP_GLOBAL_Control + 65) < 2u )
            {
              goto LABEL_60;
            }
            v14 = Dbg_GuidString((const IID *)(v5 + 8));
            v15 = 71;
            goto LABEL_46;
          }
          v4 = WPP_GLOBAL_Control;
          ++v6;
        }
      }
    }
    if ( !*(_DWORD *)(v5 + 64) && *(_DWORD *)(v5 + 68) != -1 )
    {
      v12 = (__int64 *)(v5 + 192);
      if ( !*(_QWORD *)(v5 + 192) )
      {
        if ( v4 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)v4 + 17) & 0x200000) != 0
          && *((_BYTE *)v4 + 65) >= 4u )
        {
          WPP_SF_qs(
            *((_QWORD *)v4 + 7),
            0x48u,
            (__int64)&WPP_4a0a7bf065bf32df4bbeec8f9c7ea0c3_Traceguids,
            v5,
            *(_QWORD *)(a1 + 16));
          v12 = (__int64 *)(v5 + 192);
        }
        LODWORD(v17) = 0;
        *(_DWORD *)(v5 + 208) = 3;
        Key = DnsOls_CreateKey((LDAPModW *)a1, v5, 3, v12, v17);
        if ( !Key )
        {
          ++v6;
          GetSystemTimeAsFileTime((LPFILETIME)(v5 + 116));
          v4 = WPP_GLOBAL_Control;
          goto LABEL_33;
        }
        v4 = WPP_GLOBAL_Control;
        if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          || (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x200000) == 0
          || *((_BYTE *)WPP_GLOBAL_Control + 65) < 2u )
        {
          goto LABEL_60;
        }
        v14 = Dbg_GuidString((const IID *)(v5 + 8));
        v15 = 73;
LABEL_46:
        WPP_SF_DSs(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          v15,
          (__int64)&WPP_4a0a7bf065bf32df4bbeec8f9c7ea0c3_Traceguids,
          Key,
          (__int64)v14,
          *(_QWORD *)(a1 + 16));
        goto LABEL_59;
      }
    }
LABEL_33:
    if ( v4 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)v4 + 17) & 0x200000) != 0
      && *((_BYTE *)v4 + 65) >= 4u )
    {
      WPP_SF_Dqs(
        *((_QWORD *)v4 + 7),
        0x4Au,
        (__int64)&WPP_4a0a7bf065bf32df4bbeec8f9c7ea0c3_Traceguids,
        v6,
        v5,
        *(_QWORD *)(a1 + 16));
      v4 = WPP_GLOBAL_Control;
    }
    if ( v6 <= 0 )
      goto LABEL_40;
    v13 = DnsOls_WriteSkdToStorage(0, a1, v5, 0);
    Key = v13;
    if ( v13 )
    {
      v4 = WPP_GLOBAL_Control;
      if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        || (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) == 0
        || *((_BYTE *)WPP_GLOBAL_Control + 65) < 2u )
      {
        goto LABEL_60;
      }
      WPP_SF_D(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x4Bu,
        (__int64)&WPP_4a0a7bf065bf32df4bbeec8f9c7ea0c3_Traceguids,
        v13);
LABEL_59:
      v4 = WPP_GLOBAL_Control;
      goto LABEL_60;
    }
    v4 = WPP_GLOBAL_Control;
LABEL_40:
    v5 = *(_QWORD *)v5;
    if ( !v5 )
      goto LABEL_60;
  }
  if ( v4 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)v4 + 17) & 0x200000) != 0
    && *((_BYTE *)v4 + 65) >= 4u )
  {
    v9 = Dbg_GuidString((const IID *)(v5 + 8));
    WPP_SF_Ss(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x44u,
      (__int64)&WPP_4a0a7bf065bf32df4bbeec8f9c7ea0c3_Traceguids,
      (const unsigned __int16 *)v9,
      *(_QWORD *)(a1 + 16));
    v8 = (__int64 *)(v5 + 144);
  }
  *(_DWORD *)(v5 + 160) = 0;
  LODWORD(v17) = 0;
  Key = DnsOls_CreateKey((LDAPModW *)a1, v5, 0, v8, v17);
  if ( !Key )
  {
    v4 = WPP_GLOBAL_Control;
    v6 = 1;
    goto LABEL_15;
  }
  v4 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x200000) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
  {
    v14 = Dbg_GuidString((const IID *)(v5 + 8));
    v15 = 69;
    goto LABEL_46;
  }
LABEL_60:
  if ( Key )
  {
LABEL_61:
    if ( v4 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)v4 + 17) & 0x200000) != 0
      && *((_BYTE *)v4 + 65) >= 2u )
    {
      if ( a1 )
        v1 = *(_QWORD *)(a1 + 16);
      WPP_SF_Ds(*((_QWORD *)v4 + 7), 0x4Du, (__int64)&WPP_4a0a7bf065bf32df4bbeec8f9c7ea0c3_Traceguids, Key, v1);
    }
    return Key;
  }
LABEL_67:
  if ( v4 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)v4 + 17) & 0x200000) != 0
    && *((_BYTE *)v4 + 65) >= 4u )
  {
    WPP_SF_s(
      *((_QWORD *)v4 + 7),
      0x4Cu,
      (__int64)&WPP_4a0a7bf065bf32df4bbeec8f9c7ea0c3_Traceguids,
      *(const char **)(a1 + 16));
  }
  return Key;
}
// 1400ED4F3: variable 'v17' is possibly undefined
