//----- (0000000140159D1C) ----------------------------------------------------
_BYTE *__fastcall Dns_CopyAndCanonicalizeWireName(unsigned __int8 *a1, _BYTE *a2)
{
  unsigned __int8 v2; // si
  unsigned int v3; // ebp
  unsigned __int8 *v5; // rdi
  WCHAR *v6; // rdi
  unsigned int CanonicalNameInPlaceW; // eax
  _BYTE *v8; // rsi
  _WORD *v9; // rbx
  unsigned int v10; // ebp
  unsigned int v12; // [rsp+30h] [rbp-C8h] BYREF
  int v13[3]; // [rsp+34h] [rbp-C4h] BYREF
  WCHAR DestStr[72]; // [rsp+40h] [rbp-B8h] BYREF

  v2 = *a1;
  v3 = -1;
  v5 = a1;
  if ( *a1 )
  {
    while ( 1 )
    {
      v6 = (WCHAR *)(v5 + 1);
      if ( v2 > 0x3Fu )
        return 0i64;
      if ( v3 < v2 )
        return 0i64;
      v13[0] = 128;
      if ( !(unsigned int)Dns_StringCopy(DestStr, (unsigned int *)v13, v6, v2, 2, 1) )
        return 0i64;
      v5 = (unsigned __int8 *)v6 + v2;
      CanonicalNameInPlaceW = Dns_MakeCanonicalNameInPlaceW(DestStr, v2);
      if ( !CanonicalNameInPlaceW )
        return 0i64;
      if ( CanonicalNameInPlaceW > 0x3F )
        return 0i64;
      v8 = a2;
      v9 = a2 + 1;
      v10 = v3 - 1;
      v12 = v10;
      if ( !(unsigned int)Dns_StringCopy(v9, &v12, DestStr, (unsigned __int8)CanonicalNameInPlaceW, 1, 2) )
        return 0i64;
      --v12;
      v3 = v10 - v12;
      *v8 = v12;
      v2 = *v5;
      a2 = (char *)v9 + v12;
      if ( !*v5 )
      {
        if ( v3 )
          goto LABEL_11;
        return 0i64;
      }
    }
  }
  else
  {
LABEL_11:
    *a2 = 0;
    return a2 + 1;
  }
}
// 140159D1C: using guessed type unsigned int var_C4[3];
