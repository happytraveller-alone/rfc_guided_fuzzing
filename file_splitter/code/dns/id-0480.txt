//----- (000000014003DE88) ----------------------------------------------------
__int64 __fastcall readDsRecordsAndCheckForTombstone(__int64 a1, unsigned __int16 *a2)
{
  struct berval **v2; // rsi
  unsigned int v3; // edi
  __int64 v4; // rbx
  struct berval **values_lenW; // r14
  wchar_t *v6; // rsi
  CDnsClientSubnetRecordsTrie *v7; // rcx
  int v8; // r12d
  BOOL v9; // ebp
  __int64 *v10; // r15
  __int64 bv_val; // rbp
  unsigned int v12; // eax
  LDAPMessage *v13; // rdx
  __int64 v14; // rdx
  __int64 v15; // rdx
  __int128 v17[4]; // [rsp+40h] [rbp-48h] BYREF
  PWCHAR dnW; // [rsp+98h] [rbp+10h] BYREF

  dnW = a2;
  v2 = *(struct berval ***)(a1 + 112);
  v3 = 0;
  v4 = a1;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
  {
    WPP_SF_S(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0xBBu,
      (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
      (&DsTypeAttributeTable)[*(unsigned int *)(a1 + 60)]);
  }
  if ( v2 )
  {
    ldap_value_free_len(v2);
    *(_QWORD *)(v4 + 112) = 0i64;
  }
  values_lenW = ldap_get_values_lenW(
                  pServerLdap,
                  *(LDAPMessage **)(v4 + 16),
                  (&DsTypeAttributeTable)[*(unsigned int *)(v4 + 60)]);
  dnW = ldap_get_dnW(pServerLdap, *(LDAPMessage **)(v4 + 16));
  v6 = dnW;
  if ( dnW )
  {
    v7 = WPP_GLOBAL_Control;
    v8 = 0;
    v9 = values_lenW == 0i64;
    v3 = 1;
    if ( !values_lenW )
      goto LABEL_31;
    v10 = (__int64 *)values_lenW;
    do
    {
      if ( !*v10 )
        break;
      if ( (unsigned int)Ds_ValidateDsRecord((__int64)v6, *v10) )
      {
        v7 = WPP_GLOBAL_Control;
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
        {
          WPP_SF_D(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            0xBCu,
            (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
            v8);
          v7 = WPP_GLOBAL_Control;
        }
        v9 = 1;
      }
      else
      {
        v7 = WPP_GLOBAL_Control;
      }
      ++v8;
      ++v10;
    }
    while ( !v9 );
    v4 = a1;
    if ( v9 )
    {
LABEL_31:
      if ( v7 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)v7 + 17) & 0x400) != 0
        && *((_BYTE *)v7 + 65) >= 4u )
      {
        WPP_SF_(*((_QWORD *)v7 + 7), 0xBDu, (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids);
      }
      v14 = *(_QWORD *)(v4 + 24);
      *(_DWORD *)(v4 + 136) = 1;
      *(_DWORD *)(v4 + 132) = 1;
      deleteNodeFromDs(0i64, v14, v6, 0);
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        WPP_SF_S(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0xBEu,
          (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
          v6);
      }
      v17[0] = DNS_EVENT_DELETED_CORRUPT_DS_RECORD;
      Eventlog_LogEvent((__int64)v17, v15, 1u, &dnW, (unsigned __int8 *)1, 0, 0, 0i64);
    }
    else
    {
      bv_val = (__int64)(*values_lenW)->bv_val;
      v12 = *(_DWORD *)(bv_val + 8);
      *(_DWORD *)(a1 + 132) = v12;
      if ( v12 > *(_DWORD *)(a1 + 64) )
        *(_DWORD *)(a1 + 64) = v12;
      if ( *(_WORD *)(bv_val + 2) )
      {
        *(_QWORD *)(a1 + 112) = values_lenW;
        v3 = 0;
        *(_DWORD *)(a1 + 136) = 0;
        goto LABEL_42;
      }
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
      {
        WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0xBFu, (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids);
      }
      _InterlockedAdd(&dword_1401C7CB8, 1u);
      v13 = *(LDAPMessage **)(a1 + 16);
      *(_DWORD *)(a1 + 136) = 1;
      checkTombstoneForDelete(a1, v13, bv_val);
    }
    v6 = dnW;
  }
  if ( values_lenW )
  {
    ldap_value_free_len(values_lenW);
    *(_QWORD *)(v4 + 112) = 0i64;
  }
  *(_DWORD *)(v4 + 128) = 0;
  *(_QWORD *)(v4 + 120) = 0i64;
LABEL_42:
  if ( v6 )
    ldap_memfreeW(v6);
  return v3;
}
// 14003E129: variable 'v15' is possibly undefined
// 140186678: using guessed type __int128 DNS_EVENT_DELETED_CORRUPT_DS_RECORD;
// 1401C7CB8: using guessed type int dword_1401C7CB8;
// 14003DE88: using guessed type __int128 var_48[4];
