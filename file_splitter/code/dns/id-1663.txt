//----- (00000001400D35B0) ----------------------------------------------------
__int64 __fastcall Rpc_ResetZoneDatabase(__int64 a1, __int64 a2, __int64 a3, __int64 a4, int a5, __int64 a6)
{
  __int64 result; // rax
  unsigned int v8; // ebx
  char *v9; // rsi
  int v10; // eax
  unsigned int v11; // ebp
  unsigned __int16 *v12; // rbx

  if ( !a6 )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
    {
      WPP_SF_D(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x4Bu,
        (__int64)&WPP_5efa35e0870730ffd13051b9da022308_Traceguids,
        87);
    }
    return 87i64;
  }
  v8 = *(_DWORD *)(a6 + 8);
  v9 = *(char **)(a6 + 16);
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_sds(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x4Cu,
      (__int64)&WPP_5efa35e0870730ffd13051b9da022308_Traceguids,
      *(const char **)(a3 + 16),
      v8,
      (__int64)v9);
  }
  v10 = *(_DWORD *)(a3 + 388);
  if ( (v10 & 1) != 0 && (v10 & 6) != 0 )
    return 9568i64;
  result = Zone_LockForWriteEx(a3, 1, 0x2710u, (__int64)"ds\\dns\\server\\server\\zonerpc.c", 54);
  if ( !(_DWORD)result )
  {
    if ( (*(_DWORD *)(a3 + 388) & 1) != v8 )
    {
      Zone_UnlockAfterWriteEx(a3, 1, (__int64)"ds\\dns\\server\\server\\zonerpc.c", 68);
      return 87i64;
    }
    v11 = Zone_DatabaseSetup(a3, v8, v9, 0, 0x10000000, *(_QWORD *)(a3 + 848), 0, 0i64);
    if ( !v11 )
    {
      v12 = (unsigned __int16 *)Dns_StringCopyAllocate(v9, 0, 2i64, 1);
      LogZoneProperty(a3, "DatabaseFile", v12);
      Mem_Free(v12, 0i64, 0i64, (__int64)"ds\\dns\\server\\server\\zonerpc.c", 4182);
      Config_UpdateBootInfo();
    }
    Zone_UnlockAfterWriteEx(a3, 1, (__int64)"ds\\dns\\server\\server\\zonerpc.c", 91);
    return v11;
  }
  return result;
}
