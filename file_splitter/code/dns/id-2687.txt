//----- (000000014013FE88) ----------------------------------------------------
__int64 __fastcall std::_Tree<std::_Tmap_traits<std::wstring,CDnsPolicy *,CDnsCompareName,std::allocator<std::pair<std::wstring const,CDnsPolicy *>>,0>>::erase(
        __int64 a1,
        const void **a2)
{
  __int64 v3; // rbx
  const void **v4; // rax
  const void **v5; // rcx
  const void **i; // rcx
  const void **v8; // [rsp+20h] [rbp-18h] BYREF
  const void **v9; // [rsp+28h] [rbp-10h]
  __int64 v10; // [rsp+50h] [rbp+18h] BYREF

  std::_Tree<std::_Tmap_traits<std::wstring,CDnsPolicy *,CDnsCompareName,std::allocator<std::pair<std::wstring const,CDnsPolicy *>>,0>>::_Eqrange(
    a1,
    &v8,
    a2);
  v3 = 0i64;
  v4 = v8;
  while ( v4 != v9 )
  {
    ++v3;
    if ( !*((_BYTE *)v4 + 73) )
    {
      v5 = (const void **)v4[2];
      if ( *((_BYTE *)v5 + 73) )
      {
        for ( i = (const void **)v4[1]; !*((_BYTE *)i + 73) && v4 == i[2]; i = (const void **)i[1] )
          v4 = i;
        v4 = i;
      }
      else
      {
        do
        {
          v4 = v5;
          v5 = (const void **)*v5;
        }
        while ( !*((_BYTE *)v5 + 73) );
      }
    }
  }
  std::_Tree<std::_Tmap_traits<std::wstring,CDnsPolicy *,CDnsCompareName,std::allocator<std::pair<std::wstring const,CDnsPolicy *>>,0>>::erase(
    a1,
    &v10,
    (__int64)v8,
    (__int64)v9);
  return v3;
}
