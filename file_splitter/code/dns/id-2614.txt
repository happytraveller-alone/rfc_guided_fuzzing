//----- (0000000140134C80) ----------------------------------------------------
struct CDnsPolicy_CriteriaTree *__fastcall CDnsPolicyManager::GetPolicyCriteriaSearchTree(
        CDnsPolicyManager *this,
        unsigned __int16 a2)
{
  __int64 v2; // rbx
  int v3; // edi
  CDnsPolicy_TimeofDayCriteriaTree *v4; // rax
  CDnsPolicy_QTypeCriteriaTree *v5; // rax
  _QWORD *v6; // rax
  CDnsPolicy_InterfaceCriteriaTree *v7; // rax
  void *v8; // rax
  CDnsPolicy_SubnetRecordCriteriaTree *v9; // rax

  v2 = 0i64;
  v3 = a2;
  if ( a2 )
  {
    if ( a2 <= 2u )
    {
      v8 = operator new(0x18ui64);
      if ( v8 )
        return (struct CDnsPolicy_CriteriaTree *)CDnsPolicy_ProtocolCriteriaTree::CDnsPolicy_ProtocolCriteriaTree(
                                                   (__int64)v8,
                                                   v3);
    }
    else
    {
      switch ( a2 )
      {
        case 3u:
          v7 = (CDnsPolicy_InterfaceCriteriaTree *)operator new(0x18ui64);
          if ( v7 )
            return CDnsPolicy_InterfaceCriteriaTree::CDnsPolicy_InterfaceCriteriaTree(v7);
          break;
        case 4u:
          v6 = operator new(0x10ui64);
          if ( v6 )
          {
            *v6 = &CDnsPolicy_FQDNCriteriaTree::`vftable';
            v6[1] = 0i64;
            return (struct CDnsPolicy_CriteriaTree *)v6;
          }
          break;
        case 5u:
          v5 = (CDnsPolicy_QTypeCriteriaTree *)operator new(0x10ui64);
          if ( v5 )
            return CDnsPolicy_QTypeCriteriaTree::CDnsPolicy_QTypeCriteriaTree(v5);
          break;
        case 6u:
          v4 = (CDnsPolicy_TimeofDayCriteriaTree *)operator new(0x10ui64);
          if ( v4 )
            return CDnsPolicy_TimeofDayCriteriaTree::CDnsPolicy_TimeofDayCriteriaTree(v4);
          break;
      }
    }
  }
  else
  {
    v9 = (CDnsPolicy_SubnetRecordCriteriaTree *)operator new(0x10ui64);
    if ( v9 )
      return CDnsPolicy_SubnetRecordCriteriaTree::CDnsPolicy_SubnetRecordCriteriaTree(v9);
  }
  return (struct CDnsPolicy_CriteriaTree *)v2;
}
// 140134CA5: conditional instruction was optimized away because dx.2!=0
// 140171AD0: using guessed type void *CDnsPolicy_FQDNCriteriaTree::`vftable';
