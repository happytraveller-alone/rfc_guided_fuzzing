//----- (0000000140120070) ----------------------------------------------------
__int64 __fastcall NaptrFileRead(__int64 a1, unsigned int a2, __int64 a3, __int64 a4, int a5)
{
  __int64 v6; // rsi
  unsigned int v7; // r15d
  int v9; // ebx
  char *v10; // r13
  int v11; // r12d
  unsigned int *v12; // r14
  unsigned int v13; // ebp
  char *v14; // r8
  unsigned int v15; // ecx
  unsigned int v16; // r14d
  _BYTE *v17; // rax
  _BYTE *v18; // rbp
  size_t v19; // r12
  int v20; // r13d
  u_short *v21; // r14
  char *v22; // rbp
  char *v23; // r14
  size_t v24; // r8
  __int64 v25; // rdx
  int v26[4]; // [rsp+30h] [rbp-468h] BYREF
  unsigned __int8 v27[272]; // [rsp+40h] [rbp-458h] BYREF
  char v28[768]; // [rsp+150h] [rbp-348h] BYREF

  v6 = a3;
  v7 = a2;
  if ( a2 != 6 )
    return (unsigned int)(-(a2 > 6) - 1072573181);
  v9 = 0;
  v10 = v28;
  v11 = 0;
  v12 = (unsigned int *)(a3 + 40);
  v13 = 4;
  while ( 1 )
  {
    v14 = *v12 ? (char *)*((_QWORD *)v12 - 1) : (char *)&Annotation;
    if ( !File_CopyFileTextData(&v28[256 * (__int64)v11], 0x100u, v14, *v12, 1) )
      break;
    v15 = v13 + (unsigned __int8)*v10 + 1;
    if ( v15 < v13 )
      break;
    ++v11;
    v12 += 4;
    v10 += 256;
    v13 = v15;
    if ( v11 >= 3 )
    {
      if ( !(unsigned int)File_ReadCountNameFromToken(v27, 0i64, a4, (const void **)(v6 + 80), a5) )
      {
        v16 = v13 + v27[0] + 2;
        if ( v16 >= v13 && v16 <= 0xFFFF )
        {
          v17 = RR_AllocateEx((unsigned __int16)v13 + v27[0] + 2, 0, 0);
          v18 = v17;
          if ( !v17 )
            return 14i64;
          v19 = v16;
          v20 = 0;
          v21 = (u_short *)(v17 + 56);
          *(_QWORD *)(a4 + 800) = v17;
          do
          {
            if ( !v7 )
              break;
            v26[0] = 0;
            if ( !(unsigned int)File_ParseDwordToken(v26, v6, a4) || v26[0] > 0xFFFFu )
              goto LABEL_25;
            *v21 = htons(v26[0]);
            v19 -= 2i64;
            ++v21;
            --v7;
            v6 += 16i64;
            ++v20;
          }
          while ( v20 < 2 );
          v22 = v18 + 60;
          v23 = v28;
          while ( 1 )
          {
            v24 = (unsigned __int8)*v23 + 1;
            if ( v19 < v24 )
              break;
            memcpy_0(v22, &v28[256 * (__int64)v9], v24);
            v6 += 16i64;
            ++v9;
            v25 = (unsigned __int8)*v23 + 1;
            v23 += 256;
            v22 += v25;
            v19 -= v25;
            if ( v9 >= 3 )
            {
              Name_CopyCountName(v22, v27);
              return 0i64;
            }
          }
          *(_DWORD *)(a4 + 1600) = 1616;
          *(_QWORD *)(a4 + 1608) = v6;
        }
      }
      break;
    }
  }
LABEL_25:
  *(_DWORD *)(a4 + 1596) = -1072573180;
  return 3222394113i64;
}
// 140120070: using guessed type char var_348[768];
// 140120070: using guessed type unsigned int var_468[4];
