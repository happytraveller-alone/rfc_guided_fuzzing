//----- (0000000140164800) ----------------------------------------------------
__int64 __fastcall DnsRpc_ConvertToUnversioned(int *a1, __int64 *a2, int *a3)
{
  unsigned int v3; // r15d
  unsigned int v4; // edi
  int v5; // r13d
  __int64 v6; // rsi
  int v8; // r14d
  __int64 v9; // rbx
  void *v10; // rax
  int v11; // eax
  int v12; // eax
  __int64 v13; // r10
  int v14; // eax
  __int64 v15; // r10
  _QWORD *v16; // rax
  int v17; // eax
  __int64 v18; // r10
  void *v19; // rax
  int v20; // eax
  __int64 v21; // r10
  int v22; // eax
  __int64 v23; // r10
  _QWORD *v24; // rax
  int FamilyCount; // eax
  __int64 v26; // r10
  int v27; // r11d
  _QWORD *v28; // rax
  int *v31; // [rsp+90h] [rbp+18h]

  v31 = a3;
  v3 = -1;
  v4 = 0;
  v5 = 0;
  v6 = 0i64;
  v8 = -1;
  if ( a1 && a2 )
  {
    if ( (unsigned int)*a1 > 0x10 && *a2 )
    {
      v3 = *a1;
      v5 = 1;
      v6 = *a2;
      v8 = *a1;
      v9 = *a2;
      switch ( *a1 )
      {
        case 24:
          v28 = MIDL_user_allocate(0x18ui64);
          a3 = v31;
          v9 = (__int64)v28;
          if ( v28 )
          {
            *v28 = 0i64;
            v28[1] = 0i64;
            v28[2] = 0i64;
            *(_DWORD *)v28 = 1;
            v8 = 12;
            *(_OWORD *)v28 = *(_OWORD *)(v6 + 8);
          }
          else
          {
            v4 = 14;
          }
          goto LABEL_14;
        case 37:
          v24 = MIDL_user_allocate(0x18ui64);
          v9 = (__int64)v24;
          if ( v24 )
          {
            *v24 = 0i64;
            v24[1] = 0i64;
            v24[2] = 0i64;
            *(_DWORD *)v24 = 2;
            *(_DWORD *)v24 = *(_DWORD *)(v6 + 8);
            *((_DWORD *)v24 + 1) = *(_DWORD *)(v6 + 12);
            if ( *(_QWORD *)(v6 + 16) )
            {
              FamilyCount = DnsAddrArray_GetFamilyCount(*(_QWORD *)(v6 + 16), 2);
              if ( v27 != FamilyCount )
              {
                v4 = 87;
                if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                  && (*((_BYTE *)WPP_GLOBAL_Control + 28) & 4) != 0
                  && *((_BYTE *)WPP_GLOBAL_Control + 25) >= 4u )
                {
                  WPP_SF_Ddd(
                    *((_QWORD *)WPP_GLOBAL_Control + 2),
                    0xBu,
                    (__int64)&WPP_c3aa91ee5f413f0864512d3322b2b0c5_Traceguids,
                    87);
                }
                goto LABEL_13;
              }
              *(_QWORD *)(v9 + 8) = DnsAddrArray_CreateIp4Array(v26);
            }
            v8 = 8;
LABEL_13:
            a3 = v31;
            goto LABEL_14;
          }
          break;
        case 38:
          v19 = MIDL_user_allocate(0x20ui64);
          v9 = (__int64)v19;
          if ( v19 )
          {
            memset_0(v19, 0, 0x20ui64);
            *(_DWORD *)v9 = 2;
            *(_DWORD *)v9 = *(_DWORD *)(v6 + 8);
            v8 = 11;
            *(_DWORD *)(v9 + 4) = *(_DWORD *)(v6 + 12);
            if ( *(_QWORD *)(v6 + 16) )
            {
              v20 = DnsAddrArray_GetFamilyCount(*(_QWORD *)(v6 + 16), 2);
              if ( *(_DWORD *)(v21 + 4) != v20 )
                goto LABEL_21;
              *(_QWORD *)(v9 + 8) = DnsAddrArray_CreateIp4Array(v21);
            }
            if ( !*(_QWORD *)(v6 + 24) )
              goto LABEL_13;
            v22 = DnsAddrArray_GetFamilyCount(*(_QWORD *)(v6 + 24), 2);
            if ( *(_DWORD *)(v23 + 4) == v22 )
            {
              *(_QWORD *)(v9 + 16) = DnsAddrArray_CreateIp4Array(v23);
              goto LABEL_13;
            }
            goto LABEL_21;
          }
          break;
        case 39:
          v16 = MIDL_user_allocate(0x18ui64);
          v9 = (__int64)v16;
          if ( v16 )
          {
            *v16 = 0i64;
            v16[1] = 0i64;
            v16[2] = 0i64;
            *(_DWORD *)v16 = 2;
            v8 = 13;
            *(_DWORD *)v16 = *(_DWORD *)(v6 + 8);
            if ( !*(_QWORD *)(v6 + 16) )
              goto LABEL_13;
            v17 = DnsAddrArray_GetFamilyCount(*(_QWORD *)(v6 + 16), 2);
            if ( *(_DWORD *)(v18 + 4) == v17 )
            {
              *(_QWORD *)(v9 + 8) = DnsAddrArray_CreateIp4Array(v18);
              goto LABEL_13;
            }
            goto LABEL_21;
          }
          break;
        case 40:
          v10 = MIDL_user_allocate(0xE8ui64);
          v9 = (__int64)v10;
          if ( !v10 )
            break;
          memset_0(v10, 0, 0xE8ui64);
          *(_DWORD *)v9 = 2;
          *(_QWORD *)v9 = *(_QWORD *)(v6 + 8);
          v8 = 14;
          *(_DWORD *)(v9 + 8) = *(_DWORD *)(v6 + 16);
          *(_DWORD *)(v9 + 12) = *(_DWORD *)(v6 + 20);
          *(_DWORD *)(v9 + 16) = *(_DWORD *)(v6 + 24);
          *(_DWORD *)(v9 + 20) = *(_DWORD *)(v6 + 28);
          *(_QWORD *)(v9 + 24) = *(_QWORD *)(v6 + 32);
          *(_DWORD *)(v9 + 32) = *(_DWORD *)(v6 + 40);
          *(_DWORD *)(v9 + 36) = *(_DWORD *)(v6 + 44);
          *(_QWORD *)(v9 + 40) = *(_QWORD *)(v6 + 48);
          *(_DWORD *)(v9 + 64) = *(_DWORD *)(v6 + 72);
          v11 = *(_DWORD *)(v6 + 76);
          *(_QWORD *)(v9 + 48) = 0i64;
          *(_QWORD *)(v9 + 56) = 0i64;
          *(_DWORD *)(v9 + 68) = v11;
          if ( *(_QWORD *)(v6 + 56) )
          {
            v12 = DnsAddrArray_GetFamilyCount(*(_QWORD *)(v6 + 56), 2);
            if ( *(_DWORD *)(v13 + 4) != v12 )
              goto LABEL_21;
            *(_QWORD *)(v9 + 48) = DnsAddrArray_CreateIp4Array(v13);
          }
          if ( !*(_QWORD *)(v6 + 64) )
            goto LABEL_13;
          v14 = DnsAddrArray_GetFamilyCount(*(_QWORD *)(v6 + 64), 2);
          if ( *(_DWORD *)(v15 + 4) == v14 )
          {
            *(_QWORD *)(v9 + 56) = DnsAddrArray_CreateIp4Array(v15);
            goto LABEL_13;
          }
LABEL_21:
          v4 = 87;
          goto LABEL_13;
        default:
          v5 = 0;
LABEL_14:
          *a1 = v8;
          *a2 = v9;
          goto LABEL_46;
      }
      v4 = 14;
      goto LABEL_13;
    }
  }
  else
  {
    v4 = 13;
  }
LABEL_46:
  if ( a3 )
    *a3 = v5;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 28) & 4) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 25) >= 4u )
  {
    WPP_SF_dddqq(*((_QWORD *)WPP_GLOBAL_Control + 2), 0xCu, *a2, v4, v3, v8, v6, *a2);
  }
  return v4;
}
// 140164955: variable 'v13' is possibly undefined
// 14016497E: variable 'v15' is possibly undefined
// 1401649E2: variable 'v18' is possibly undefined
// 140164A47: variable 'v21' is possibly undefined
// 140164A74: variable 'v23' is possibly undefined
// 140164AD7: variable 'v27' is possibly undefined
// 140164ADC: variable 'v26' is possibly undefined
