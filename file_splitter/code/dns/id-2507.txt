//----- (000000014012D638) ----------------------------------------------------
_QWORD *__fastcall std::use_facet<std::ctype<unsigned short>>(__int64 *a1)
{
  char v2; // bp
  __int64 v3; // rsi
  unsigned __int64 v4; // rdi
  __int64 v5; // rcx
  _QWORD *v6; // rbx
  struct std::locale::_Locimp *v7; // rax
  char *v8; // rdx
  _Ctypevec *v9; // rax
  _Cvtvec *v10; // rcx
  __int64 v11; // rcx
  _Ctypevec v13; // [rsp+28h] [rbp-80h] BYREF
  _QWORD *v14; // [rsp+B0h] [rbp+8h] BYREF
  char v15; // [rsp+B8h] [rbp+10h] BYREF

  v2 = 0;
  LODWORD(v14) = 0;
  std::_Lockit::_Lockit((std::_Lockit *)&v15, 0);
  v3 = std::_Facetptr<std::ctype<unsigned short>>::_Psave;
  v4 = std::ctype<unsigned short>::id;
  if ( !std::ctype<unsigned short>::id )
  {
    std::_Lockit::_Lockit((std::_Lockit *)&v14, 0);
    if ( !std::ctype<unsigned short>::id )
      std::ctype<unsigned short>::id = ++std::locale::id::_Id_cnt;
    std::_Lockit::~_Lockit((std::_Lockit *)&v14);
    v4 = std::ctype<unsigned short>::id;
  }
  v5 = *a1;
  if ( v4 >= *(_QWORD *)(*a1 + 24) )
    v6 = 0i64;
  else
    v6 = *(_QWORD **)(*(_QWORD *)(v5 + 16) + 8 * v4);
  if ( !v6 )
  {
    if ( *(_BYTE *)(v5 + 36) )
    {
      v7 = std::locale::_Getgloballocale();
      if ( v4 >= *((_QWORD *)v7 + 3) )
        v6 = 0i64;
      else
        v6 = *(_QWORD **)(*((_QWORD *)v7 + 2) + 8 * v4);
    }
    if ( !v6 )
    {
      if ( v3 )
      {
        v6 = (_QWORD *)v3;
      }
      else
      {
        v6 = operator new(0x30ui64);
        v14 = v6;
        if ( v6 )
        {
          v8 = *(char **)(*a1 + 40);
          if ( !v8 )
            v8 = (char *)(*a1 + 48);
          std::_Locinfo::_Locinfo((std::_Locinfo *)&v13._LocaleName, v8);
          v2 = 1;
          v6[1] = 0i64;
          *v6 = &std::ctype<unsigned short>::`vftable';
          v9 = Getctype(&v13);
          *((_OWORD *)v6 + 1) = *(_OWORD *)&v9->_Page;
          v6[4] = *(_QWORD *)&v9->_Delfl;
          v6[5] = Getcvt(v10);
        }
        else
        {
          v6 = 0i64;
        }
        if ( (v2 & 1) != 0 )
          std::_Locinfo::~_Locinfo((std::_Locinfo *)&v13._LocaleName);
        std::_Facetptr<std::ctype<unsigned short>>::_Psave = (__int64)v6;
        std::_Lockit::_Lockit((std::_Lockit *)&v14, 0);
        v11 = v6[1];
        if ( v11 != -1 )
          v6[1] = v11 + 1;
        std::_Lockit::~_Lockit((std::_Lockit *)&v14);
        std::locale::facet::_Facet_Register((struct std::locale::facet *)v6);
      }
    }
  }
  std::_Lockit::~_Lockit((std::_Lockit *)&v15);
  return v6;
}
// 14012D778: variable 'v10' is possibly undefined
// 140171778: using guessed type void *std::ctype<unsigned short>::`vftable';
// 1401B85A8: using guessed type int std::locale::id::_Id_cnt;
// 1401B85D0: using guessed type __int64 std::ctype<unsigned short>::id;
// 1401B9DA0: using guessed type __int64 std::_Facetptr<std::ctype<unsigned short>>::_Psave;
