//----- (0000000140083498) ----------------------------------------------------
__int64 __fastcall RR_CacheRecordSet(
        __int64 a1,
        __int64 a2,
        int a3,
        __int64 a4,
        _QWORD **a5,
        unsigned int a6,
        unsigned int a7,
        __int64 a8,
        int a9,
        _QWORD *a10,
        unsigned int a11,
        _DWORD *a12,
        unsigned int *a13,
        unsigned int a14)
{
  int v14; // r13d
  _QWORD **v15; // r8
  _QWORD *v18; // r14
  _WORD *v19; // rbp
  unsigned __int16 v20; // r15
  __int64 v21; // rsi
  _QWORD *v22; // rax
  int v23; // edi
  _QWORD *v24; // rbx
  CDnsClientSubnetRecordsTrie *v25; // rcx
  __int64 **v26; // r8
  unsigned __int8 *v27; // rdx
  __int64 *v28; // rax
  __int64 v29; // rcx
  unsigned __int8 *v30; // rax
  char *v31; // rax
  char *v32; // rax
  unsigned __int16 v33; // dx
  __int64 *v34; // rax
  _QWORD *v35; // rdx
  _QWORD *i; // rcx
  char v37; // bp
  char v38; // bl
  __int16 v39; // ax
  __int16 v40; // cx
  char *v41; // rax
  __int64 v42; // rbx
  __int64 v43; // rbx
  CDnsClientSubnetRecordsTrie *v44; // rcx
  const char *v45; // rax
  __int64 v47; // [rsp+20h] [rbp-A8h]
  unsigned int v48; // [rsp+60h] [rbp-68h]
  __int64 **v49; // [rsp+70h] [rbp-58h]
  unsigned __int8 *v50; // [rsp+78h] [rbp-50h]
  __int64 v51; // [rsp+80h] [rbp-48h]
  _QWORD *v52; // [rsp+88h] [rbp-40h]
  __int64 v53; // [rsp+88h] [rbp-40h]
  __int64 v54; // [rsp+D8h] [rbp+10h]

  v54 = a2;
  v14 = a3;
  v15 = a5;
  v48 = 0;
  v18 = 0i64;
  v19 = *a5;
  v52 = *a5;
  v20 = *((_WORD *)*a5 + 6);
  if ( v14 == 2 )
  {
    if ( v20 == 6 && *(_DWORD *)a8 || v20 == 47 || v20 == 50 )
    {
LABEL_11:
      v49 = 0i64;
      if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        || (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x800) == 0 )
      {
        v21 = v54;
      }
      else
      {
        v21 = v54;
        if ( *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
        {
          v47 = v54;
          WPP_SF_Dq(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            0x24u,
            (__int64)&WPP_95413813eca334a66ae97b50395580a7_Traceguids,
            v20);
        }
      }
      if ( v20 == 6 && *(_QWORD *)(a8 + 16) && RR_FindNextRecordEx(a4, 0, 6u, a8 + 16, 0, 1) )
      {
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x800) != 0 )
        {
          if ( *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
            WPP_SF_q(
              *((_QWORD *)WPP_GLOBAL_Control + 7),
              0x25u,
              (__int64)&WPP_95413813eca334a66ae97b50395580a7_Traceguids,
              v21);
          v18 = 0i64;
        }
        goto LABEL_24;
      }
      v22 = RR_CopyRecordListWithOwnerName((__int64 *)a4, *a5, a5[1]);
      v23 = 0;
      v24 = v22;
      if ( !v22 )
      {
        v18 = 0i64;
        goto LABEL_24;
      }
      v25 = WPP_GLOBAL_Control;
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x800) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        v47 = v21;
        WPP_SF_Dq(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0x26u,
          (__int64)&WPP_95413813eca334a66ae97b50395580a7_Traceguids,
          v20);
        v25 = WPP_GLOBAL_Control;
      }
      if ( v20 != 6 )
      {
        if ( v20 != 46 || ntohs(*((_WORD *)v52 + 28)) != 6 )
        {
          v27 = 0i64;
          v50 = 0i64;
          if ( (*((_BYTE *)v24 + 28) & 0x10) != 0 )
          {
            v27 = (unsigned __int8 *)v24 + *((unsigned __int16 *)v24 + 7) + 56;
            v50 = v27;
          }
          v51 = 0i64;
          v28 = (__int64 *)(a8 + 24);
          v53 = a8 + 24;
          while ( 1 )
          {
            v29 = *v28;
            if ( !*v28 )
            {
              if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x800) != 0
                && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
              {
                v32 = Dbg_CountName(v27);
                v47 = (__int64)v24;
                WPP_SF_sq(
                  *((_QWORD *)WPP_GLOBAL_Control + 7),
                  0x28u,
                  (__int64)&WPP_95413813eca334a66ae97b50395580a7_Traceguids,
                  v32);
              }
              *(_QWORD *)(a8 + 8i64 * v23 + 24) = v24;
              goto LABEL_54;
            }
            v30 = 0i64;
            if ( (*(_BYTE *)(v29 + 28) & 0x10) != 0 )
              v30 = (unsigned __int8 *)(v29 + *(unsigned __int16 *)(v29 + 14) + 56i64);
            if ( !(unsigned int)Name_CaseInsensitiveCompareCountNames(v30, v27, 0i64) )
              break;
            ++v23;
            v28 = (__int64 *)(v53 + 8);
            ++v51;
            v53 += 8i64;
            v27 = v50;
            if ( v51 >= 3 )
              goto LABEL_54;
          }
          v49 = (__int64 **)(a8 + 24 + 8i64 * v23);
          v25 = WPP_GLOBAL_Control;
          if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x800) != 0
            && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
          {
            v31 = Dbg_CountName(v50);
            WPP_SF_qs(
              *((_QWORD *)WPP_GLOBAL_Control + 7),
              0x27u,
              (__int64)&WPP_95413813eca334a66ae97b50395580a7_Traceguids,
              *v49,
              v31);
LABEL_54:
            v25 = WPP_GLOBAL_Control;
          }
          if ( v23 >= 3 )
          {
            if ( v25 == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
              || (*((_DWORD *)v25 + 17) & 0x800) == 0
              || *((_BYTE *)v25 + 65) < 4u )
            {
              goto LABEL_61;
            }
            v33 = 41;
            goto LABEL_60;
          }
          v26 = v49;
LABEL_64:
          if ( v26 )
          {
            v34 = *v26;
            v35 = 0i64;
            if ( !*v26 )
            {
              if ( v25 == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                || (*((_DWORD *)v25 + 17) & 0x800) == 0
                || *((_BYTE *)v25 + 65) < 4u )
              {
                goto LABEL_61;
              }
              v33 = 42;
LABEL_60:
              WPP_SF_q(*((_QWORD *)v25 + 7), v33, (__int64)&WPP_95413813eca334a66ae97b50395580a7_Traceguids, v21, v47);
LABEL_61:
              v18 = v24;
LABEL_24:
              RR_ListFree(*a5);
              goto LABEL_130;
            }
            for ( i = v24; *i; i = (_QWORD *)*i )
              ;
            do
            {
              if ( *((_WORD *)v34 + 6) > v20 )
                break;
              v35 = v34;
              v34 = (__int64 *)*v34;
            }
            while ( v34 );
            if ( v35 )
              *v35 = v24;
            else
              *v26 = v24;
            *i = v34;
          }
          v18 = 0i64;
          v48 = 1;
          goto LABEL_24;
        }
        v25 = WPP_GLOBAL_Control;
      }
      if ( *(_QWORD *)(a8 + 16) )
      {
        v26 = (__int64 **)(a8 + 16);
      }
      else
      {
        *(_QWORD *)(a8 + 16) = v24;
        v26 = 0i64;
        v25 = WPP_GLOBAL_Control;
      }
      goto LABEL_64;
    }
    if ( v20 == 46 )
    {
      if ( ntohs(v19[28]) == 6 && *(_DWORD *)a8 || ntohs(v19[28]) == 47 || ntohs(v19[28]) == 50 )
        goto LABEL_11;
      a2 = v54;
      v15 = a5;
    }
  }
  v37 = 1;
  v38 = 1;
  if ( *(int *)(a1 + 1424) > 0 && v20 == 2 )
    v38 = 3;
  if ( (unsigned int)(v14 - 2) <= 1 && *(_QWORD *)(a1 + 56) == 4241280207i64 )
  {
    v39 = *(_WORD *)(a2 + 480);
    if ( v39 == 1 || v39 == 28 )
    {
      v40 = *((_WORD *)*v15 + 6);
      if ( (unsigned __int16)(v40 - 1) <= 1u || v40 == 28 )
        v38 |= 6u;
    }
  }
  if ( *(_WORD *)(a1 + 440) == 48 && *(_QWORD *)(a1 + 1432) )
    v38 |= 2u;
  if ( a9 )
  {
    if ( v14 != 1 )
      goto LABEL_102;
    if ( *((_WORD *)*v15 + 6) == 5 || *((_WORD *)*v15 + 6) == 46 )
    {
LABEL_100:
      if ( *(_QWORD *)(a1 + 56) == 4241280207i64 )
        v38 |= 0x10u;
      goto LABEL_102;
    }
    v38 |= 8u;
  }
  if ( v14 == 1 )
    goto LABEL_100;
LABEL_102:
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control )
  {
    if ( (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x800) != 0 )
    {
      if ( *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        v41 = Dbg_NodeName(a4);
        WPP_SF_dqDs(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0x2Bu,
          (__int64)&WPP_95413813eca334a66ae97b50395580a7_Traceguids,
          v20,
          v54,
          v38,
          (__int64)v41);
      }
      v18 = 0i64;
    }
    v14 = a3;
  }
  v48 = RR_CacheSetAtNode(v54, a4, (__int64)*a5, a5[1], a6, a7, v38, a10, a11, a12, a13, a14);
  if ( v48 )
  {
    if ( v14 == 2 && v20 == 2 && (*(_BYTE *)(v54 + 6307) & 0xF) == 0 && !*(_WORD *)(v54 + 6310) )
    {
      v42 = *(_QWORD *)(a1 + 1264);
      if ( v42 )
      {
        v43 = *(_QWORD *)(v42 + 1528);
        if ( v43 )
        {
          v44 = WPP_GLOBAL_Control;
          if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x100000) != 0
            && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
          {
            if ( a4 )
            {
              v45 = (const char *)FormatLabelA(*(unsigned __int8 *)(a4 + 101), (const void *)(a4 + 102));
              v44 = WPP_GLOBAL_Control;
            }
            else
            {
              v45 = 0i64;
            }
            WPP_SF_sqq(*((_QWORD *)v44 + 7), 0x2Cu, (__int64)&WPP_95413813eca334a66ae97b50395580a7_Traceguids, v45);
          }
          if ( a4 )
            *(_BYTE *)(a4 + 98) = CurrentTimeoutBin;
          *(_QWORD *)(v43 + 1520) = a4;
        }
      }
    }
  }
  else if ( v20 == 5 && *(_BYTE *)(v54 + 1448) )
  {
    *(_BYTE *)(v54 + 1448) = 0;
    if ( *(_QWORD *)(a1 + 192) != a4 )
      v37 = *(_BYTE *)(a1 + 1448);
    *(_BYTE *)(a1 + 1448) = v37;
  }
LABEL_130:
  RR_ListFree(v18);
  return v48;
}
// 140083884: variable 'v47' is possibly undefined
// 1401BA4B8: using guessed type char CurrentTimeoutBin;
