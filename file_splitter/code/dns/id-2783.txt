//----- (00000001401482FC) ----------------------------------------------------
__int64 __fastcall CDnsPolicyOrder::EnumeratePolicy(
        const void ****this,
        unsigned int *a2,
        struct _DnsRpcEnumPolicyList *a3)
{
  const void ***v3; // rbx
  _DWORD *zero; // rdi
  _QWORD *PolicyName; // rax
  _WORD *v9; // rax
  bool v10; // cf
  void *v12[5]; // [rsp+30h] [rbp-48h] BYREF

  v3 = *this;
  if ( *this == this[1] )
    return 0i64;
  while ( 1 )
  {
    zero = MIDL_user_allocate_zero(0x18ui64);
    if ( !zero )
      break;
    PolicyName = (_QWORD *)CDnsPolicy::GetPolicyName(*v3, (__int64)v12);
    if ( PolicyName[3] >= 8ui64 )
      PolicyName = (_QWORD *)*PolicyName;
    v9 = MIDL_user_copy_stringW((__int64)PolicyName);
    v10 = v12[3] < (void *)8;
    *(_QWORD *)zero = v9;
    if ( !v10 )
      operator delete(v12[0]);
    if ( !*(_QWORD *)zero )
      break;
    zero[3] = *((_DWORD *)*v3 + 24);
    zero[2] = *((_DWORD *)*v3 + 22);
    zero[4] = *((_DWORD *)*v3 + 26);
    *((_QWORD *)a3 + ++*a2) = zero;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_Sdd(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x65u,
        (__int64)&WPP_42dbba61d26d3062f1ad4e084cdc81fe_Traceguids,
        *(const unsigned __int16 **)zero);
    }
    if ( ++v3 == this[1] )
      return 0i64;
  }
  return 14i64;
}
// 140184CA8: using guessed type void __stdcall operator delete(void *);
