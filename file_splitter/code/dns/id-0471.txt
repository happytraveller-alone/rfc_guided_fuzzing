//----- (000000014003CA60) ----------------------------------------------------
void __fastcall DS_CreateZoneDsName(__int64 a1)
{
  __int64 *v1; // r14
  wchar_t *v3; // rsi
  const unsigned __int16 *v4; // r9
  __int64 v5; // rbx
  WCHAR *v6; // rbp
  const CHAR *v7; // r8
  int LastError; // eax
  __int64 v9; // rcx
  __int64 v10; // rax
  unsigned __int64 v11; // rcx
  unsigned int v12; // ebx
  HRESULT v13; // eax
  unsigned __int64 v14; // rcx
  unsigned int v15; // ebx
  CDnsClientSubnetRecordsTrie *v16; // rcx
  WCHAR WideCharStr[256]; // [rsp+40h] [rbp-228h] BYREF

  v1 = (__int64 *)(a1 + 840);
  v3 = 0i64;
  if ( *(_QWORD *)(a1 + 840) )
    goto LABEL_37;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    v4 = L"Default";
    if ( *(_QWORD *)(a1 + 192) )
      v4 = *(const unsigned __int16 **)(a1 + 192);
    WPP_SF_Ss(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x9Fu,
      (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
      v4,
      *(_QWORD *)(a1 + 16));
  }
  v5 = -1i64;
  if ( *(_DWORD *)(a1 + 372) )
  {
    if ( !_stricmp("TrustAnchors", *(const char **)(a1 + 16)) )
    {
      v6 = (WCHAR *)L"..TrustAnchors";
    }
    else
    {
      v7 = *(const CHAR **)(a1 + 16);
      WideCharStr[0] = 0;
      MultiByteToWideChar(0xFDE9u, 0, v7, -1, WideCharStr, 256);
      if ( !WideCharStr[0] )
      {
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
        {
          LastError = GetLastError();
          WPP_SF_D(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            0xA0u,
            (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
            LastError);
        }
        goto LABEL_37;
      }
      v6 = WideCharStr;
    }
  }
  else
  {
    v6 = (WCHAR *)L"RootDNSServers";
  }
  v9 = *(_QWORD *)(a1 + 192);
  if ( v9 )
  {
    v10 = -1i64;
    do
      ++v10;
    while ( *(_WORD *)(v9 + 2 * v10) );
    do
      ++v5;
    while ( v6[v5] );
    v11 = 2i64 * (unsigned int)(v5 + v10 + 30);
    if ( v11 > 0xFFFFFFFF )
      goto LABEL_37;
    v12 = v11 + g_AppendZoneLength;
    if ( (int)v11 + g_AppendZoneLength < (unsigned int)v11 )
      goto LABEL_37;
    v3 = (wchar_t *)Mem_Alloc(v12, 9i64, "ds\\dns\\server\\server\\ds.c", 6824);
    if ( !v3 )
      goto LABEL_37;
    v13 = StringCbPrintfW(
            v3,
            v12,
            L"cn=%s,%sDC=%s,%s",
            *(_QWORD *)(a1 + 192),
            L"cn=ZoneScopeContainer,",
            v6,
            g_pwszDnsContainerDN);
  }
  else
  {
    do
      ++v5;
    while ( v6[v5] );
    v14 = 2i64 * (unsigned int)(v5 + 1);
    if ( v14 > 0xFFFFFFFF )
      goto LABEL_37;
    v15 = v14 + g_AppendZoneLength;
    if ( (int)v14 + g_AppendZoneLength < (unsigned int)v14 )
      goto LABEL_37;
    v3 = (wchar_t *)Mem_Alloc(v15, 9i64, "ds\\dns\\server\\server\\ds.c", 6864);
    if ( !v3 )
      goto LABEL_37;
    v13 = StringCbPrintfW(v3, v15, L"DC=%s,%s", v6, g_pwszDnsContainerDN);
  }
  if ( v13 >= 0 )
  {
    v16 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_S(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0xA1u,
        (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
        v3);
    }
    Timeout_FreeAndReplaceZoneDataEx(
      (__int64)v16,
      v1,
      (__int64)v3,
      0i64,
      (__int64)"ds\\dns\\server\\server\\ds.c",
      6895);
    v3 = 0i64;
  }
LABEL_37:
  Mem_Free(v3, 0i64, 0i64, (__int64)"ds\\dns\\server\\server\\ds.c", 6904);
}
// 14003CD38: variable 'v16' is possibly undefined
// 140188260: using guessed type wchar_t aDefault_1[8];
// 14018BA40: using guessed type wchar_t aCnZonescopecon[23];
// 1401EC320: using guessed type int g_AppendZoneLength;
