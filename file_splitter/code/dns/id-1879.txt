//----- (00000001400E78E8) ----------------------------------------------------
void __fastcall std::vector<std::_List_iterator<std::_List_val<std::pair<IDnsRRLStateKey * const,IDnsRRLStateInfo *>>>>::_Insert_n(
        __int64 a1,
        unsigned __int64 a2,
        unsigned __int64 a3,
        __int64 *a4)
{
  unsigned __int64 v6; // r14
  __int64 v8; // r12
  char *v9; // r15
  __int64 v10; // rcx
  unsigned __int64 v11; // rbx
  unsigned __int64 v12; // rbx
  _QWORD *v13; // r15
  __int64 v14; // r14
  unsigned __int64 v15; // rsi
  __int64 v16; // rbx
  __int64 *v17; // rcx
  unsigned __int64 v18; // rdx
  __int64 v19; // r14
  char *v20; // rsi
  __int64 *v21; // rdx
  signed __int64 v22; // r15
  __int64 pExceptionObject[3]; // [rsp+38h] [rbp-40h] BYREF
  _QWORD *v25; // [rsp+90h] [rbp+18h] BYREF

  if ( a3 )
  {
    v6 = a2;
    v8 = 0i64;
    v9 = *(char **)(a1 + 8);
    v10 = (__int64)&v9[-*(_QWORD *)a1] >> 3;
    if ( 0x1FFFFFFFFFFFFFFFi64 - v10 < a3 )
      std::vector<std::vector<unsigned char> *,std::allocator<std::vector<unsigned char> *>>::_Xlen();
    v11 = (__int64)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 3;
    if ( v11 >= v10 + a3 )
    {
      v16 = *a4;
      if ( (__int64)&v9[-a2] >> 3 >= a3 )
      {
        v19 = a3;
        v20 = &v9[-8 * a3];
        *(_QWORD *)(a1 + 8) = std::_Uninit_move<std::_List_iterator<std::_List_val<std::pair<IDnsRRLStateKey * const,IDnsRRLStateInfo *>>> *,std::_List_iterator<std::_List_val<std::pair<IDnsRRLStateKey * const,IDnsRRLStateInfo *>>> *,std::allocator<std::_List_iterator<std::_List_val<std::pair<IDnsRRLStateKey * const,IDnsRRLStateInfo *>>>>,std::_List_iterator<std::_List_val<std::pair<IDnsRRLStateKey * const,IDnsRRLStateInfo *>>>>(
                                (unsigned __int64)v20,
                                (unsigned __int64)v9,
                                v9);
        v21 = (__int64 *)a2;
        if ( (char *)a2 != v20 )
        {
          v22 = v9 - v20;
          do
          {
            v20 -= 8;
            *(_QWORD *)&v20[v22] = *(_QWORD *)v20;
            v21 = (__int64 *)a2;
          }
          while ( (char *)a2 != v20 );
        }
        if ( v21 != &v21[v19] )
        {
          do
            *v21++ = v16;
          while ( v21 != (__int64 *)(v19 * 8 + a2) );
        }
      }
      else
      {
        v25 = (_QWORD *)*a4;
        std::_Uninit_move<std::_List_iterator<std::_List_val<std::pair<IDnsRRLStateKey * const,IDnsRRLStateInfo *>>> *,std::_List_iterator<std::_List_val<std::pair<IDnsRRLStateKey * const,IDnsRRLStateInfo *>>> *,std::allocator<std::_List_iterator<std::_List_val<std::pair<IDnsRRLStateKey * const,IDnsRRLStateInfo *>>>>,std::_List_iterator<std::_List_val<std::pair<IDnsRRLStateKey * const,IDnsRRLStateInfo *>>>>(
          a2,
          (unsigned __int64)v9,
          (_QWORD *)(a2 + 8 * a3));
        std::_Uninit_fill_n<std::_List_iterator<std::_List_val<std::pair<IDnsRRLStateKey * const,IDnsRRLStateInfo *>>> *,unsigned __int64,std::_List_iterator<std::_List_val<std::pair<IDnsRRLStateKey * const,IDnsRRLStateInfo *>>>,std::allocator<std::_List_iterator<std::_List_val<std::pair<IDnsRRLStateKey * const,IDnsRRLStateInfo *>>>>,std::_List_iterator<std::_List_val<std::pair<IDnsRRLStateKey * const,IDnsRRLStateInfo *>>>>(
          *(__int64 **)(a1 + 8),
          a3 - ((__int64)(*(_QWORD *)(a1 + 8) - a2) >> 3),
          (__int64 *)&v25);
        *(_QWORD *)(a1 + 8) += 8 * a3;
        v17 = (__int64 *)a2;
        v18 = (*(_QWORD *)(a1 + 8) - 8 * a3 - a2 + 7) >> 3;
        if ( a2 > *(_QWORD *)(a1 + 8) - 8 * a3 )
          v18 = 0i64;
        if ( v18 )
        {
          do
          {
            *v17++ = v16;
            ++v8;
          }
          while ( v8 != v18 );
        }
      }
    }
    else
    {
      if ( 0x1FFFFFFFFFFFFFFFi64 - (v11 >> 1) >= v11 )
        v12 = (v11 >> 1) + v11;
      else
        v12 = 0i64;
      if ( v12 < v10 + a3 )
        v12 = v10 + a3;
      v13 = 0i64;
      v25 = 0i64;
      if ( v12 )
      {
        if ( v12 > 0x1FFFFFFFFFFFFFFFi64 || (v13 = operator new(8 * v12), (v25 = v13) == 0i64) )
        {
          std::bad_alloc::bad_alloc((std::bad_alloc *)pExceptionObject, 0i64);
          CxxThrowException_0(pExceptionObject, (_ThrowInfo *)&TI2_AVbad_alloc_std__);
        }
        v6 = a2;
      }
      v14 = (__int64)(v6 - *(_QWORD *)a1) >> 3;
      std::_Uninit_fill_n<std::_List_iterator<std::_List_val<std::pair<IDnsRRLStateKey * const,IDnsRRLStateInfo *>>> *,unsigned __int64,std::_List_iterator<std::_List_val<std::pair<IDnsRRLStateKey * const,IDnsRRLStateInfo *>>>,std::allocator<std::_List_iterator<std::_List_val<std::pair<IDnsRRLStateKey * const,IDnsRRLStateInfo *>>>>,std::_List_iterator<std::_List_val<std::pair<IDnsRRLStateKey * const,IDnsRRLStateInfo *>>>>(
        &v13[v14],
        a3,
        a4);
      std::_Uninit_move<std::_List_iterator<std::_List_val<std::pair<IDnsRRLStateKey * const,IDnsRRLStateInfo *>>> *,std::_List_iterator<std::_List_val<std::pair<IDnsRRLStateKey * const,IDnsRRLStateInfo *>>> *,std::allocator<std::_List_iterator<std::_List_val<std::pair<IDnsRRLStateKey * const,IDnsRRLStateInfo *>>>>,std::_List_iterator<std::_List_val<std::pair<IDnsRRLStateKey * const,IDnsRRLStateInfo *>>>>(
        *(_QWORD *)a1,
        a2,
        v13);
      std::_Uninit_move<std::_List_iterator<std::_List_val<std::pair<IDnsRRLStateKey * const,IDnsRRLStateInfo *>>> *,std::_List_iterator<std::_List_val<std::pair<IDnsRRLStateKey * const,IDnsRRLStateInfo *>>> *,std::allocator<std::_List_iterator<std::_List_val<std::pair<IDnsRRLStateKey * const,IDnsRRLStateInfo *>>>>,std::_List_iterator<std::_List_val<std::pair<IDnsRRLStateKey * const,IDnsRRLStateInfo *>>>>(
        a2,
        *(_QWORD *)(a1 + 8),
        &v13[v14 + a3]);
      v15 = ((__int64)(*(_QWORD *)(a1 + 8) - *(_QWORD *)a1) >> 3) + a3;
      if ( *(_QWORD *)a1 )
        operator delete(*(void **)a1);
      *(_QWORD *)(a1 + 16) = &v13[v12];
      *(_QWORD *)(a1 + 8) = &v13[v15];
      *(_QWORD *)a1 = v13;
    }
  }
}
// 140184CA8: using guessed type void __stdcall operator delete(void *);
