//----- (0000000140055C2C) ----------------------------------------------------
__int64 __fastcall dnsTlsSetValue(__int64 a1, __int64 a2)
{
  __int64 *ThreadLocalStoragePointer; // rax
  unsigned int v3; // esi
  __int64 v6; // r14
  void *v7; // rax
  __int64 v9; // rdx
  __int64 v10; // rcx
  unsigned int v11; // ebx
  __int64 v12; // rax
  __int64 v13; // rcx
  unsigned int v14; // ebx
  void *v15; // rax
  void *v16; // rsi
  __int64 v17; // rax
  __int64 v18; // rcx

  ThreadLocalStoragePointer = (__int64 *)NtCurrentTeb()->ThreadLocalStoragePointer;
  v3 = 0;
  v6 = *ThreadLocalStoragePointer;
  if ( !*(_QWORD *)(*ThreadLocalStoragePointer + 8) )
  {
    v7 = Mem_AllocZero(0x60ui64, 0i64, "ds\\dns\\server\\server\\lock.c", 809);
    *(_QWORD *)(v6 + 8) = v7;
    if ( !v7 )
      return 0i64;
  }
  v9 = *(_QWORD *)(v6 + 8);
  v10 = 1i64;
  v11 = *(_DWORD *)(v9 + 8);
  if ( v11 )
  {
    while ( *(_QWORD *)(v9 + 16i64 * (unsigned int)v10) != a1 )
    {
      if ( !v3 && !*(_QWORD *)(v9 + 16i64 * (unsigned int)v10) )
        v3 = v10;
      v10 = (unsigned int)(v10 + 1);
      if ( (unsigned int)v10 > v11 )
        goto LABEL_10;
    }
    v13 = 2 * v10;
    *(_QWORD *)(v9 + 8 * v13 + 8) = a2;
    if ( !a2 )
      *(_QWORD *)(v9 + 8 * v13) = 0i64;
  }
  else
  {
LABEL_10:
    if ( a2 )
    {
      if ( v3 )
      {
        v12 = 2i64 * v3;
        *(_QWORD *)(v9 + 8 * v12) = a1;
        *(_QWORD *)(v9 + 8 * v12 + 8) = a2;
      }
      else
      {
        v14 = v11 + 1;
        if ( v14 == 6 * (v14 / 6) )
        {
          v15 = Mem_AllocZero(16 * (v14 + 6), 0i64, "ds\\dns\\server\\server\\lock.c", 895);
          v16 = v15;
          if ( !v15 )
            return 0i64;
          memcpy_0(v15, *(const void **)(v6 + 8), 16i64 * v14);
          Mem_Free(*(_QWORD **)(v6 + 8), 0i64, 0i64, (__int64)"ds\\dns\\server\\server\\lock.c", 906);
          *(_QWORD *)(v6 + 8) = v16;
        }
        v17 = *(_QWORD *)(v6 + 8);
        *(_QWORD *)(v17 + 8) = v14;
        v18 = 2i64 * v14;
        *(_QWORD *)(v17 + 8 * v18) = a1;
        *(_QWORD *)(v17 + 8 * v18 + 8) = a2;
      }
    }
  }
  return 1i64;
}
