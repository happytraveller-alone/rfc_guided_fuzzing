//----- (00000001401128E8) ----------------------------------------------------
__int64 __fastcall std::_Tree<std::_Tmap_traits<unsigned short *,_DnsServerScopeInfo_ *,bool (*)(unsigned short *,unsigned short *),std::allocator<std::pair<unsigned short * const,_DnsServerScopeInfo_ *>>,0>>::erase(
        __int64 a1,
        _QWORD *a2)
{
  __int64 v2; // rsi
  __int64 v5; // rdi
  __int64 v6; // rbx
  __int64 v7; // rbx
  __int64 v8; // rbx
  __int64 v9; // rax
  __int64 v10; // rcx
  __int64 i; // rcx
  __int64 v13; // [rsp+40h] [rbp+8h] BYREF

  v2 = *(_QWORD *)(a1 + 8);
  v5 = v2;
  v6 = *(_QWORD *)(v2 + 8);
  while ( !*(_BYTE *)(v6 + 41) )
  {
    if ( (*(unsigned __int8 (__fastcall **)(_QWORD, _QWORD))a1)(*(_QWORD *)(v6 + 24), *a2) )
    {
      v6 = *(_QWORD *)(v6 + 16);
    }
    else
    {
      if ( *(_BYTE *)(v5 + 41) && (*(unsigned __int8 (__fastcall **)(_QWORD, _QWORD))a1)(*a2, *(_QWORD *)(v6 + 24)) )
        v5 = v6;
      v2 = v6;
      v6 = *(_QWORD *)v6;
    }
  }
  if ( *(_BYTE *)(v5 + 41) )
    v7 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8i64);
  else
    v7 = *(_QWORD *)v5;
  while ( !*(_BYTE *)(v7 + 41) )
  {
    if ( (*(unsigned __int8 (__fastcall **)(_QWORD, _QWORD))a1)(*a2, *(_QWORD *)(v7 + 24)) )
    {
      v5 = v7;
      v7 = *(_QWORD *)v7;
    }
    else
    {
      v7 = *(_QWORD *)(v7 + 16);
    }
  }
  v8 = 0i64;
  v9 = v2;
  while ( v9 != v5 )
  {
    ++v8;
    if ( !*(_BYTE *)(v9 + 41) )
    {
      v10 = *(_QWORD *)(v9 + 16);
      if ( *(_BYTE *)(v10 + 41) )
      {
        for ( i = *(_QWORD *)(v9 + 8); !*(_BYTE *)(i + 41) && v9 == *(_QWORD *)(i + 16); i = *(_QWORD *)(i + 8) )
          v9 = i;
        v9 = i;
      }
      else
      {
        do
        {
          v9 = v10;
          v10 = *(_QWORD *)v10;
        }
        while ( !*(_BYTE *)(v10 + 41) );
      }
    }
  }
  std::_Tree<std::_Tmap_traits<unsigned short *,_virtualization_info_ *,bool (*)(unsigned short *,unsigned short *),std::allocator<std::pair<unsigned short * const,_virtualization_info_ *>>,0>>::erase(
    a1,
    &v13,
    v2,
    v5);
  return v8;
}
// 140185140: using guessed type __int64 (__fastcall *_guard_dispatch_icall_fptr)(_QWORD, _QWORD);
