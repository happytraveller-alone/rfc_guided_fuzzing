//----- (000000014010C230) ----------------------------------------------------
__int64 __fastcall refreshSignatures(
        unsigned __int64 *a1,
        unsigned int *a2,
        struct _zone_info *a3,
        struct _DnsTreeNode *a4,
        bool a5)
{
  CDnsClientSubnetRecordsTrie *v7; // rbx
  char *v8; // rax
  int v9; // edi
  unsigned __int64 *v10; // rbx
  int refreshed; // eax
  char *v12; // rax
  unsigned __int16 v13; // dx
  __int64 v14; // rcx
  char *v15; // rax
  int v16; // r9d
  char *v17; // rax
  unsigned __int16 v18; // dx
  _QWORD *v19; // rbx
  bool i; // zf
  __int64 v21; // rax
  __int64 v22; // rax
  CDnsClientSubnetRecordsTrie *v23; // rcx
  unsigned __int16 v24; // dx
  int v25; // ebx
  struct _DnsTreeNode *j; // rax
  __int64 v27; // rbx
  __int64 v28; // rdx
  char *v29; // rax
  int v31; // [rsp+40h] [rbp-71h] BYREF
  struct _DnsTreeNode *v32; // [rsp+48h] [rbp-69h]
  unsigned int v33; // [rsp+50h] [rbp-61h] BYREF
  int v34; // [rsp+54h] [rbp-5Dh]
  unsigned int v35; // [rsp+58h] [rbp-59h] BYREF
  unsigned int *v36; // [rsp+60h] [rbp-51h]
  unsigned __int64 *v37[2]; // [rsp+70h] [rbp-41h] BYREF
  __int64 v38[5]; // [rsp+80h] [rbp-31h] BYREF
  int v39; // [rsp+ACh] [rbp-5h]
  unsigned __int16 *v40[3]; // [rsp+C0h] [rbp+Fh] BYREF

  v34 = 0;
  v31 = 0;
  v32 = a4;
  v36 = a2;
  v37[0] = a1;
  v7 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x200000) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
  {
    v8 = Dbg_NodeName((__int64)a4);
    WPP_SF_s(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x3Au, (__int64)&WPP_9f96d4c672f338bf067ce342b88232b8_Traceguids, v8);
    v7 = WPP_GLOBAL_Control;
  }
  memset_0(v38, 0, 0x40ui64);
  if ( g_fDnsServiceExit == 1 )
  {
    v9 = 1169409;
    goto LABEL_93;
  }
  if ( a5 )
    initiateChildDsPolling((unsigned __int16 **)a3, a4);
  v33 = -1;
  acquireRead(DbaseLock, 0xFFFFFFFF, &v33);
  v10 = v37[0];
  v33 = 0;
  refreshed = DnsOls_RefreshSignaturesAtNode(v37[0], (__int64)a4, &v33, 0i64);
  v35 = -1;
  v9 = refreshed;
  releaseRead(DbaseLock, &v35, 1);
  if ( v9 )
  {
    v7 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      || (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x200000) == 0
      || *((_BYTE *)WPP_GLOBAL_Control + 65) < 2u )
    {
      goto LABEL_15;
    }
    v12 = Dbg_NodeName((__int64)v32);
    v13 = 59;
    v14 = *((_QWORD *)WPP_GLOBAL_Control + 7);
LABEL_14:
    WPP_SF_Ds(v14, v13, (__int64)&WPP_9f96d4c672f338bf067ce342b88232b8_Traceguids, v9, (__int64)v12);
    v7 = WPP_GLOBAL_Control;
LABEL_15:
    v31 = 1;
    goto LABEL_82;
  }
  if ( !v33 )
  {
    v7 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x200000) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
    {
      v15 = Dbg_NodeName((__int64)v32);
      WPP_SF_s(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x3Cu,
        (__int64)&WPP_9f96d4c672f338bf067ce342b88232b8_Traceguids,
        v15);
      v7 = WPP_GLOBAL_Control;
    }
    goto LABEL_83;
  }
  v9 = Zone_LockForWriteEx((__int64)a3, 1, 0x2710u, (__int64)"ds\\dns\\server\\server\\olssigrefresh.cpp", 112);
  if ( v9 )
  {
    v7 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      || (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x200000) == 0
      || *((_BYTE *)WPP_GLOBAL_Control + 65) < 2u )
    {
      goto LABEL_15;
    }
    v12 = (char *)*((_QWORD *)a3 + 2);
    v13 = 61;
    v14 = *((_QWORD *)WPP_GLOBAL_Control + 7);
    goto LABEL_14;
  }
  Dbase_LockEx((__int64)v32, 2, (__int64)"ds\\dns\\server\\server\\olssigrefresh.cpp", 122);
  if ( *((int *)a3 + 108) > 0 || (*((_DWORD *)a3 + 99) & 0x2000) != 0 )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x200000) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_s(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x3Eu,
        (__int64)&WPP_9f96d4c672f338bf067ce342b88232b8_Traceguids,
        *((const char **)a3 + 2));
    }
    v9 = 1169409;
    goto LABEL_81;
  }
  v9 = DnsOls_RefreshSignaturesAtNode(v10, (__int64)v32, 0i64, (unsigned __int16 *)v38);
  if ( v9 )
  {
    if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      || (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x200000) == 0
      || *((_BYTE *)WPP_GLOBAL_Control + 65) < 2u )
    {
      goto LABEL_34;
    }
    v17 = Dbg_NodeName((__int64)v32);
    v18 = 63;
    goto LABEL_33;
  }
  v19 = (_QWORD *)v38[0];
  if ( !v38[0] )
    goto LABEL_81;
  if ( (*((_BYTE *)a3 + 388) & 1) != 0 )
  {
    for ( i = (*((_DWORD *)v32 + 23) & 0x100) == 0; ; i = v19 == 0i64 )
    {
      if ( i )
        goto LABEL_56;
      v21 = v19[2];
      if ( v21 )
      {
        if ( *(_WORD *)(v21 + 12) == 46 && ntohs(*(_WORD *)(v21 + 56)) == 48 )
          break;
      }
      v22 = v19[3];
      if ( v22 && *(_WORD *)(v22 + 12) == 46 && ntohs(*(_WORD *)(v22 + 56)) == 48 )
      {
        v23 = WPP_GLOBAL_Control;
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x200000) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
        {
          v24 = 65;
LABEL_50:
          WPP_SF_s(
            *((_QWORD *)v23 + 7),
            v24,
            (__int64)&WPP_9f96d4c672f338bf067ce342b88232b8_Traceguids,
            *((const char **)a3 + 2));
        }
        goto LABEL_51;
      }
      v19 = (_QWORD *)*v19;
    }
    v23 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x200000) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      v24 = 64;
      goto LABEL_50;
    }
LABEL_51:
    v25 = 1;
    goto LABEL_57;
  }
LABEL_56:
  v25 = v34;
LABEL_57:
  if ( v36 )
    *v36 += v39;
  v9 = Up_ApplyUpdatesToDatabase((__int64)v38, (__int64)a3, 53150208i64, v16);
  if ( !v9 )
  {
    if ( v25 && !*((_QWORD *)a3 + 24) )
    {
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x200000) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        WPP_SF_s(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0x43u,
          (__int64)&WPP_9f96d4c672f338bf067ce342b88232b8_Traceguids,
          *((const char **)a3 + 2));
      }
      v9 = DnsOls_WriteDNSKEYsToDirectory((__int64)a3);
      if ( v9 )
      {
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x200000) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
        {
          WPP_SF_Ds(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            0x44u,
            (__int64)&WPP_9f96d4c672f338bf067ce342b88232b8_Traceguids,
            v9,
            *((_QWORD *)a3 + 2));
        }
        v9 = 0;
      }
    }
    goto LABEL_81;
  }
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x200000) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
  {
    v17 = Dbg_NodeName((__int64)v32);
    v18 = 66;
LABEL_33:
    WPP_SF_Ds(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      v18,
      (__int64)&WPP_9f96d4c672f338bf067ce342b88232b8_Traceguids,
      v9,
      (__int64)v17);
  }
LABEL_34:
  v31 = 1;
LABEL_81:
  Dbase_UnlockEx((__int64)v32, 2, (__int64)"ds\\dns\\server\\server\\olssigrefresh.cpp", 5);
  Zone_UnlockAfterWriteEx((__int64)a3, 1, (__int64)"ds\\dns\\server\\server\\olssigrefresh.cpp", 6);
  v7 = WPP_GLOBAL_Control;
LABEL_82:
  if ( !v9 )
  {
LABEL_83:
    if ( *((_QWORD *)v32 + 4) )
    {
      for ( j = (struct _DnsTreeNode *)NTree_FirstChild((__int64)v32);
            ;
            j = (struct _DnsTreeNode *)NTree_NextSiblingWithLocking(v27) )
      {
        v27 = (__int64)j;
        if ( !j )
          break;
        v9 = refreshSignatures(v37[0], v36, a3, j, a5);
        if ( v9 )
          break;
      }
      v7 = WPP_GLOBAL_Control;
    }
  }
  if ( v31 )
  {
    if ( (unsigned int)DnsOls_OkToFireThrottledEvent((__int64)a3, 7657) )
    {
      v40[0] = (unsigned __int16 *)((char *)v32 + 102);
      v40[1] = *((unsigned __int16 **)a3 + 3);
      v40[2] = (unsigned __int16 *)v9;
      LOWORD(v31) = 259;
      BYTE2(v31) = 4;
      *(_OWORD *)v37 = DNS_EVENT_DNSSEC_REFRESH_UPDATE_FAIL;
      Eventlog_LogEvent((__int64)v37, v28, 3u, v40, (unsigned __int8 *)&v31, 0, 0, 0i64);
    }
    v7 = WPP_GLOBAL_Control;
  }
LABEL_93:
  if ( v7 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)v7 + 17) & 0x200000) != 0
    && *((_BYTE *)v7 + 65) >= 5u )
  {
    v29 = Dbg_NodeName((__int64)v32);
    WPP_SF_Ds(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x45u,
      (__int64)&WPP_9f96d4c672f338bf067ce342b88232b8_Traceguids,
      v9,
      (__int64)v29);
  }
  return (unsigned int)v9;
}
// 14010C61C: variable 'v16' is possibly undefined
// 14010C843: variable 'v28' is possibly undefined
// 140186D70: using guessed type __int128 DNS_EVENT_DNSSEC_REFRESH_UPDATE_FAIL;
// 1401B9A40: using guessed type int g_fDnsServiceExit;
// 1401EC5E8: using guessed type __int64 DbaseLock;
