//----- (0000000140050758) ----------------------------------------------------
ULONG __fastcall Template_zzzzzzqb(
        __int64 a1,
        __int64 a2,
        const unsigned __int16 *a3,
        const unsigned __int16 *a4,
        const unsigned __int16 *a5,
        const unsigned __int16 *a6,
        const unsigned __int16 *a7,
        const unsigned __int16 *a8,
        int a9,
        __int64 a10)
{
  __int64 v10; // rcx
  int v12; // edx
  __int64 v13; // rax
  ULONG v14; // r11d
  const wchar_t *v15; // r9
  const wchar_t *v16; // rax
  __int64 v17; // rax
  int v18; // r8d
  const wchar_t *v19; // rax
  __int64 v20; // rax
  int v21; // r10d
  const wchar_t *v22; // rax
  __int64 v23; // rax
  int v24; // r10d
  const wchar_t *v25; // rax
  __int64 v26; // rax
  int v27; // r10d
  const wchar_t *v28; // rax
  bool v29; // zf
  struct _EVENT_DATA_DESCRIPTOR UserData; // [rsp+20h] [rbp-69h] BYREF
  const wchar_t *v32; // [rsp+30h] [rbp-59h]
  int v33; // [rsp+38h] [rbp-51h]
  int v34; // [rsp+3Ch] [rbp-4Dh]
  const wchar_t *v35; // [rsp+40h] [rbp-49h]
  int v36; // [rsp+48h] [rbp-41h]
  int v37; // [rsp+4Ch] [rbp-3Dh]
  const wchar_t *v38; // [rsp+50h] [rbp-39h]
  int v39; // [rsp+58h] [rbp-31h]
  int v40; // [rsp+5Ch] [rbp-2Dh]
  const wchar_t *v41; // [rsp+60h] [rbp-29h]
  int v42; // [rsp+68h] [rbp-21h]
  int v43; // [rsp+6Ch] [rbp-1Dh]
  const wchar_t *v44; // [rsp+70h] [rbp-19h]
  int v45; // [rsp+78h] [rbp-11h]
  int v46; // [rsp+7Ch] [rbp-Dh]
  int *v47; // [rsp+80h] [rbp-9h]
  __int64 v48; // [rsp+88h] [rbp-1h]
  __int64 v49; // [rsp+90h] [rbp+7h]
  int v50; // [rsp+98h] [rbp+Fh]
  int v51; // [rsp+9Ch] [rbp+13h]

  v10 = -1i64;
  v12 = 10;
  if ( a3 )
  {
    v13 = -1i64;
    do
      ++v13;
    while ( a3[v13] );
    v14 = 2 * v13 + 2;
  }
  else
  {
    v14 = 10;
  }
  UserData.Size = v14;
  v15 = L"NULL";
  UserData.Reserved = 0;
  v16 = L"NULL";
  if ( a3 )
    v16 = a3;
  UserData.Ptr = (ULONGLONG)v16;
  if ( a4 )
  {
    v17 = -1i64;
    do
      ++v17;
    while ( a4[v17] );
    v18 = 2 * v17 + 2;
  }
  else
  {
    v18 = 10;
  }
  v33 = v18;
  v19 = L"NULL";
  if ( a4 )
    v19 = a4;
  v34 = 0;
  v32 = v19;
  if ( a5 )
  {
    v20 = -1i64;
    do
      ++v20;
    while ( a5[v20] );
    v21 = 2 * v20 + 2;
  }
  else
  {
    v21 = 10;
  }
  v36 = v21;
  v22 = L"NULL";
  v37 = 0;
  if ( a5 )
    v22 = a5;
  v35 = v22;
  if ( a6 )
  {
    v23 = -1i64;
    do
      ++v23;
    while ( a6[v23] );
    v24 = 2 * v23 + 2;
  }
  else
  {
    v24 = 10;
  }
  v39 = v24;
  v25 = L"NULL";
  v40 = 0;
  if ( a6 )
    v25 = a6;
  v38 = v25;
  if ( a7 )
  {
    v26 = -1i64;
    do
      ++v26;
    while ( a7[v26] );
    v27 = 2 * v26 + 2;
  }
  else
  {
    v27 = 10;
  }
  v42 = v27;
  v28 = L"NULL";
  v43 = 0;
  if ( a7 )
    v28 = a7;
  v41 = v28;
  v29 = a8 == 0i64;
  if ( a8 )
  {
    do
      ++v10;
    while ( a8[v10] );
    v12 = 2 * v10 + 2;
    v29 = a8 == 0i64;
  }
  if ( !v29 )
    v15 = a8;
  v44 = v15;
  v47 = &a9;
  v49 = a10;
  v45 = v12;
  v50 = a9;
  v46 = 0;
  v48 = 4i64;
  v51 = 0;
  return EventWrite(Microsoft_Windows_DNS_Server_ServiceHandle, &DNS_EVENT_AGING_SCAVENGING_END, 8u, &UserData);
}
