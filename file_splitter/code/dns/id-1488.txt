//----- (00000001400BB0D8) ----------------------------------------------------
__int64 __fastcall processDsUpdate(__int64 a1, __int64 a2)
{
  unsigned int v2; // esi
  const char *v4; // r14
  const char *v6; // r9
  unsigned int updated; // edi
  int v9; // r9d
  __int64 v10; // rcx
  int v11; // eax
  const char *v12; // r8

  v2 = 0;
  v4 = 0i64;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    if ( a1 )
      v6 = *(const char **)(a1 + 16);
    else
      v6 = 0i64;
    WPP_SF_s(*((_QWORD *)WPP_GLOBAL_Control + 7), 0xA1u, (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids, v6);
  }
  if ( !*(_QWORD *)a2 )
    return 0i64;
  updated = Up_PrepareUpdateListForExecution(a1, 0i64, a2, 0);
  if ( updated )
  {
    v4 = "DS update initialization";
    goto LABEL_41;
  }
  updated = Up_ApplyUpdatesToDatabase(a2, a1, *(unsigned int *)(a2 + 40), v9);
  if ( updated )
  {
    v4 = "Executing update";
    goto LABEL_41;
  }
  if ( !(unsigned int)checkTempNodesForUpdateEffect(a1, a2) )
  {
    _InterlockedIncrement(&dword_1401C7CC8);
    _InterlockedIncrement(&dword_1401C7CCC);
    _InterlockedIncrement(&dword_1401C7CD0);
    _InterlockedIncrement(&dword_1401C7D18);
    return v2;
  }
  if ( (*(_BYTE *)(a1 + 392) & 3) != 2 || (*(_DWORD *)(a2 + 40) & 0x800) == 0 )
  {
    v11 = Ds_WriteNonSecureUpdateToDs(v10, a2, a1);
    updated = v11;
    if ( v11 )
    {
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        WPP_SF_D(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0xA3u,
          (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids,
          v11);
      }
      rollBackFailedUpdateFromDs(0i64, a2, a1);
      v4 = "Applying update to the DS";
      v2 = 9002;
      if ( (*(_BYTE *)(a2 + 40) & 1) != 0 )
        _InterlockedIncrement(dword_1401C819C);
      else
        _InterlockedIncrement(dword_1401C82DC);
      goto LABEL_41;
    }
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
    {
      WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0xA4u, (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids);
    }
    if ( (*(_BYTE *)(a2 + 40) & 1) != 0 )
    {
      _InterlockedIncrement(&dword_1401C8198);
LABEL_41:
      if ( updated )
      {
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
        {
          WPP_SF_D(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            0xA5u,
            (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids,
            updated);
        }
        if ( (qword_1401B9780 & 0x4000) != 0 && (unsigned int)Log_EnterLock() )
        {
          v12 = "<none>";
          g_pszCurrentLogLevelString = (__int64)"DSWRITE";
          if ( v4 )
            v12 = v4;
          Log_Printf("Update Error <%lu>: %s\r\n", updated, v12);
          g_pszCurrentLogLevelString = 0i64;
          Log_LeaveLock();
        }
        if ( !v2 )
          return updated;
      }
      return v2;
    }
    _InterlockedIncrement(&dword_1401C82D8);
    return v2;
  }
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_qdD(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0xA2u,
      (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids,
      *(_QWORD *)(a2 + 32),
      *(_BYTE *)(a1 + 392) & 3,
      *(_DWORD *)(a2 + 40));
  }
  if ( (*(_BYTE *)(a2 + 40) & 1) != 0 )
    _InterlockedIncrement(&dword_1401C8180);
  else
    _InterlockedIncrement(&dword_1401C82C0);
  return 5i64;
}
// 1400BB180: variable 'v9' is possibly undefined
// 1400BB246: variable 'v10' is possibly undefined
// 1401B8F28: using guessed type __int64 g_pszCurrentLogLevelString;
// 1401B9780: using guessed type __int64 qword_1401B9780;
// 1401C7CC8: using guessed type int dword_1401C7CC8;
// 1401C7CCC: using guessed type int dword_1401C7CCC;
// 1401C7CD0: using guessed type int dword_1401C7CD0;
// 1401C7D18: using guessed type int dword_1401C7D18;
// 1401C8180: using guessed type int dword_1401C8180;
// 1401C8198: using guessed type int dword_1401C8198;
// 1401C819C: using guessed type signed __int32 dword_1401C819C[5];
// 1401C82C0: using guessed type int dword_1401C82C0;
// 1401C82D8: using guessed type int dword_1401C82D8;
// 1401C82DC: using guessed type signed __int32 dword_1401C82DC[57];
