//----- (000000014008ADE4) ----------------------------------------------------
__int64 __fastcall RR_CheckNameErrorTimeout(__int64 a1, int a2, unsigned int a3, int *a4)
{
  int v4; // r15d
  unsigned int v9; // ebx
  int v10; // eax
  __int64 v11; // rdi
  unsigned int v12; // ecx
  unsigned int v13; // eax
  int v14; // r9d
  unsigned int v16; // [rsp+60h] [rbp+8h] BYREF

  v4 = g_dwCacheLimitCurrentTimeAdjustment;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 8) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_sd(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x24u,
      (__int64)&WPP_10d39582251c332017bd035d2c946054_Traceguids,
      (const char *)(a1 + 102));
  }
  v16 = -1;
  acquireUpdate(DbaseLock, 0xFFFFFFFF, &v16, 1);
  v9 = 0;
  v10 = *(_DWORD *)(a1 + 92);
  v11 = *(_QWORD *)(a1 + 64);
  if ( (v10 & 1) == 0 )
    goto LABEL_25;
  if ( !v11 || *(_WORD *)(v11 + 12) != 0xF0F0 )
  {
    *(_DWORD *)(a1 + 92) = v10 & 0xFFFFFFFE;
    goto LABEL_25;
  }
  if ( dword_1401B9924 )
  {
    v12 = *(_DWORD *)(v11 + 16);
  }
  else if ( dword_1401B991C )
  {
    v12 = dword_1401B9920 + *(_DWORD *)(v11 + 16);
  }
  else
  {
    v12 = *(_DWORD *)(v11 + 20);
  }
  if ( a2 || v4 == -1 )
    goto LABEL_23;
  v13 = v4 + dword_1401B9714;
  if ( a3 )
    v13 = a3;
  if ( v13 > v12 )
  {
LABEL_23:
    Dbase_LockEx(a1, 2, (__int64)"ds\\dns\\server\\server\\rrlist.c", 218);
    *(_DWORD *)(a1 + 92) &= ~1u;
    *(_QWORD *)(a1 + 64) = 0i64;
    Dbase_UnlockEx(a1, 2, (__int64)"ds\\dns\\server\\server\\rrlist.c", 221);
    ++g_dwCacheFreeCount;
    RR_Free(v11);
LABEL_25:
    v11 = 0i64;
    goto LABEL_26;
  }
  if ( a4 )
  {
    v14 = *(_DWORD *)(v11 + 20) - (v4 + dword_1401B9714);
    *a4 = v14;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x40000) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
    {
      WPP_SF_D(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x25u,
        (__int64)&WPP_10d39582251c332017bd035d2c946054_Traceguids,
        v14);
    }
  }
LABEL_26:
  v16 = -1;
  releaseUpdate(DbaseLock, &v16, 1);
  insertNodeIntoTimeoutSystem(a1);
  LOBYTE(v9) = v11 != 0;
  return v9;
}
// 1401B9074: using guessed type int g_dwCacheFreeCount;
// 1401B9078: using guessed type int g_dwCacheLimitCurrentTimeAdjustment;
// 1401B9714: using guessed type int dword_1401B9714;
// 1401B991C: using guessed type int dword_1401B991C;
// 1401B9920: using guessed type int dword_1401B9920;
// 1401B9924: using guessed type int dword_1401B9924;
// 1401EC5E8: using guessed type __int64 DbaseLock;
