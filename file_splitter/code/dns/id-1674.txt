//----- (00000001400D4CD0) ----------------------------------------------------
__int64 __fastcall Rpc_ResetZoneDwordProperty(__int64 a1, __int64 a2, __int64 a3, __int64 a4, int a5, __int64 a6)
{
  int v6; // r15d
  DWORD dwLowDateTime; // r12d
  unsigned int v9; // r14d
  const char *v10; // r13
  int v11; // esi
  CDnsClientSubnetRecordsTrie *v12; // rcx
  __int64 v13; // rax
  __int64 v14; // rax
  const wchar_t *v15; // rdx
  unsigned int v16; // ebx
  __int64 v17; // rax
  int v18; // esi
  CHAR *v19; // r12
  int v20; // eax
  unsigned int v21; // r9d
  __int64 *v22; // r8
  __int16 v23; // dx
  char v24; // cl
  bool v25; // zf
  int v26; // esi
  int v27; // eax
  int v28; // r15d
  unsigned int v29; // ecx
  int v30; // esi
  unsigned int v31; // edx
  int v32; // eax
  int v33; // ecx
  unsigned int v34; // ecx
  unsigned int v35; // eax
  int v36; // eax
  int v37; // ecx
  int v38; // eax
  unsigned int v39; // eax
  int v40; // r10d
  unsigned __int16 v41; // r11
  unsigned __int16 v42; // cx
  int v43; // eax
  int v44; // ecx
  CDnsClientSubnetRecordsTrie *v45; // rcx
  unsigned __int16 v46; // dx
  HKEY v47; // rsi
  int v48; // eax
  CDnsClientSubnetRecordsTrie *v49; // rcx
  __int64 v50; // rax
  __int64 v51; // rax
  const wchar_t *v52; // r8
  __int64 v53; // r8
  __int64 v54; // rbx
  unsigned int v55; // ecx
  __int64 v56; // rcx
  UINT v57; // ecx
  __int64 v59; // [rsp+48h] [rbp-C0h] BYREF
  struct _FILETIME SystemTimeAsFileTime; // [rsp+50h] [rbp-B8h] BYREF
  __int64 v61; // [rsp+58h] [rbp-B0h] BYREF
  __int64 v62; // [rsp+60h] [rbp-A8h]
  int v63; // [rsp+68h] [rbp-A0h]
  char v64[380]; // [rsp+78h] [rbp-90h] BYREF
  unsigned int v65; // [rsp+1F4h] [rbp+ECh]
  char v66; // [rsp+1F9h] [rbp+F1h]
  int v67; // [rsp+47Ch] [rbp+374h]
  unsigned int v68; // [rsp+4A0h] [rbp+398h]
  wchar_t Buffer[64]; // [rsp+6F8h] [rbp+5F0h] BYREF

  v6 = 0;
  LODWORD(v59) = 0;
  dwLowDateTime = 0;
  v62 = 0i64;
  v63 = 0;
  LODWORD(v61) = 4;
  if ( a5 != 15 || !a6 )
    return 87i64;
  v9 = *(_DWORD *)a6;
  v10 = *(const char **)(a6 + 8);
  v11 = *(_DWORD *)a6 != 0;
  v12 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    if ( !a3 || (v13 = *(_QWORD *)(a3 + 328)) == 0 )
      v13 = a3;
    if ( *(_QWORD *)(v13 + 200) )
    {
      if ( !a3 || (v14 = *(_QWORD *)(a3 + 328)) == 0 )
        v14 = a3;
      v15 = **(const wchar_t ***)(v14 + 200);
    }
    else
    {
      v15 = L".";
    }
    WPP_SF_ssSdD(*((_QWORD *)WPP_GLOBAL_Control + 7), (__int64)v15, a3, v10, *(_QWORD *)(a3 + 16), (__int64)v15);
    v12 = WPP_GLOBAL_Control;
  }
  if ( qword_1401B9A30 )
  {
    if ( !_stricmp(v10, "PluginEnabled") )
    {
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x61u, (__int64)&WPP_5efa35e0870730ffd13051b9da022308_Traceguids);
      }
      goto LABEL_22;
    }
    v12 = WPP_GLOBAL_Control;
  }
  if ( !a3 || (v17 = *(_QWORD *)(a3 + 328)) == 0 )
    v17 = a3;
  if ( *(_QWORD *)(v17 + 200) )
  {
    v16 = 9553;
    goto LABEL_259;
  }
LABEL_22:
  if ( *(_DWORD *)(a3 + 372) || !_stricmp(v10, "PluginEnabled") || !_stricmp(v10, "EnablePolicies") )
  {
    v16 = Zone_LockForRPCSeqEx(a3, 0x2710u);
    if ( v16 )
    {
      v12 = WPP_GLOBAL_Control;
      if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        || (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x10) == 0
        || *((_BYTE *)WPP_GLOBAL_Control + 65) < 4u )
      {
LABEL_304:
        if ( v16 )
          goto LABEL_313;
        goto LABEL_305;
      }
      WPP_SF_s(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x62u,
        (__int64)&WPP_5efa35e0870730ffd13051b9da022308_Traceguids,
        *(const char **)(a3 + 16));
LABEL_303:
      v12 = WPP_GLOBAL_Control;
      goto LABEL_304;
    }
    v63 = 1;
    v16 = Zone_LockForWriteEx(a3, 1, 0x2710u, (__int64)"ds\\dns\\server\\server\\zonerpc.c", 61);
    if ( v16 )
    {
LABEL_257:
      Lock_ReleaseWrite(*(_QWORD *)(a3 + 312));
      goto LABEL_258;
    }
    dwLowDateTime = 1;
    SystemTimeAsFileTime.dwLowDateTime = 1;
    if ( !_stricmp(v10, "AllowUpdate") )
    {
      if ( !_stricmp(*(const char **)(a3 + 16), "TrustAnchors") && (_BYTE)v9 )
      {
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
        {
          WPP_SF_s(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            v16 + 99,
            (__int64)&WPP_5efa35e0870730ffd13051b9da022308_Traceguids,
            "AllowUpdate");
        }
        goto LABEL_45;
      }
      if ( *(_DWORD *)(a3 + 372) == 1
        && ((*(_BYTE *)(a3 + 396) & 0x10) == 0 || (*(_BYTE *)(a3 + 1040) & 4) != 0 || !(_BYTE)v9) )
      {
        if ( (*(_BYTE *)(a3 + 392) & 3) == (_BYTE)v9 )
          goto LABEL_284;
        v6 = 1;
        v18 = *(_BYTE *)(a3 + 392) & 3;
        v19 = (CHAR *)"AllowUpdate";
        v16 = Zone_SetAllowUpdate(a3, v9);
        if ( v16 )
          goto LABEL_255;
        if ( !v18 )
          Service_SendControlCode();
        goto LABEL_242;
      }
LABEL_45:
      v16 = 9611;
      goto LABEL_255;
    }
    v19 = (CHAR *)"SecureSecondaries";
    if ( !_stricmp(v10, "SecureSecondaries") )
    {
      if ( v9 <= 3 )
      {
        if ( *(_QWORD *)(a3 + 184) )
        {
          memset_0(v64, 0, 0x678ui64);
          v65 = v9;
          v16 = Dns_SetPropsOnAllZoneScopes((__int64 *)a3, 0x10u, (__int64)v64, 1, 0i64);
          if ( v16 )
            goto LABEL_255;
        }
        *(_DWORD *)(a3 + 380) = v9;
        goto LABEL_242;
      }
LABEL_59:
      v16 = 87;
      goto LABEL_255;
    }
    v19 = (CHAR *)"NotifyLevel";
    if ( !_stricmp(v10, "NotifyLevel") )
    {
      if ( *(_QWORD *)(a3 + 184) )
      {
        memset_0(v64, 0, 0x678ui64);
        v66 = v9 != 0 ? 2 : 0;
        v16 = Dns_SetPropsOnAllZoneScopes((__int64 *)a3, 0x40u, (__int64)v64, 1, 0i64);
        if ( v16 )
          goto LABEL_255;
      }
      *(_BYTE *)(a3 + 385) = v11;
      goto LABEL_242;
    }
    v19 = (CHAR *)"LogUpdates";
    if ( !_stricmp(v10, "LogUpdates") )
    {
      if ( (*(_DWORD *)(a3 + 1028) & 1) != v11 )
      {
        if ( *(_QWORD *)(a3 + 184) )
        {
          memset_0(v64, 0, 0x678ui64);
          v67 ^= ((unsigned __int8)v11 ^ (unsigned __int8)v67) & 1;
          v16 = Dns_SetPropsOnAllZoneScopes((__int64 *)a3, 8u, (__int64)v64, 1, 0i64);
          if ( v16 )
            goto LABEL_255;
        }
        *(_DWORD *)(a3 + 1028) &= ~1u;
        *(_DWORD *)(a3 + 1028) |= v9 != 0;
        goto LABEL_242;
      }
LABEL_283:
      dwLowDateTime = SystemTimeAsFileTime.dwLowDateTime;
LABEL_284:
      if ( (*(_BYTE *)(a3 + 388) & 1) != 0 )
      {
        if ( v6 )
        {
          GetSystemTimeAsFileTime(&SystemTimeAsFileTime);
          v54 = *(__int64 *)&SystemTimeAsFileTime / 10000000;
          if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
            && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
          {
            WPP_SF_q(
              *((_QWORD *)WPP_GLOBAL_Control + 7),
              0x69u,
              (__int64)&WPP_5efa35e0870730ffd13051b9da022308_Traceguids,
              *(__int64 *)&SystemTimeAsFileTime / 10000000);
          }
          *(_QWORD *)(a3 + 1016) = v54;
        }
        v16 = Ds_WriteZoneProperties(0i64, a3);
        if ( v16 )
          goto LABEL_255;
        v55 = *(_DWORD *)(a3 + 372);
        if ( v55 - 1 > 1 && v55 < 5 || (v56 = *(_QWORD *)(a3 + 40)) == 0 )
        {
LABEL_305:
          memset_0(Buffer, 0, sizeof(Buffer));
          if ( !_stricmp(v10, "AllowUpdate") )
          {
            if ( (*(_BYTE *)(a3 + 392) & 3) != 0 )
            {
              v57 = 12030;
              if ( (*(_BYTE *)(a3 + 392) & 3) != 2 )
                v57 = 12031;
            }
            else
            {
              v57 = 12016;
            }
            Dns_GetResourceString(v57, Buffer, 64i64);
          }
          else
          {
            StringCchPrintfW(Buffer, 64i64, L"%d", v9);
          }
          LogZoneProperty(a3, v10, Buffer);
          v12 = WPP_GLOBAL_Control;
LABEL_313:
          if ( !dwLowDateTime )
          {
LABEL_256:
            if ( !v63 )
              goto LABEL_259;
            goto LABEL_257;
          }
LABEL_255:
          Zone_UnlockAfterWriteEx(a3, 1, (__int64)"ds\\dns\\server\\server\\zonerpc.c", 113);
          v12 = WPP_GLOBAL_Control;
          goto LABEL_256;
        }
        v16 = Ds_WriteNodeProperties(v56);
      }
      goto LABEL_303;
    }
    v19 = (CHAR *)"NoRefreshInterval";
    if ( !_stricmp(v10, "NoRefreshInterval") )
    {
      if ( (*(_BYTE *)(a3 + 388) & 1) != 0 && (dword_1401B9750 || g_fDsReadOnlyDcMode) )
      {
LABEL_73:
        v16 = 9569;
        goto LABEL_255;
      }
      if ( !v9 )
        v9 = dword_1401B9910;
      *(_DWORD *)(a3 + 992) = v9;
LABEL_242:
      v47 = 0i64;
      if ( !*(_DWORD *)(a3 + 372) )
      {
        v48 = RpcUtil_SwitchSecurityContext(0);
        if ( v48 )
        {
          v49 = WPP_GLOBAL_Control;
          if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control )
          {
LABEL_254:
            v16 = 1013;
            goto LABEL_255;
          }
          if ( (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) == 0 || *((_BYTE *)WPP_GLOBAL_Control + 65) < 2u )
          {
LABEL_250:
            if ( v49 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
              && (*((_BYTE *)v49 + 68) & 4) != 0
              && *((_BYTE *)v49 + 65) >= 2u )
            {
              WPP_SF_s(*((_QWORD *)v49 + 7), 0x67u, (__int64)&WPP_5efa35e0870730ffd13051b9da022308_Traceguids, v10);
            }
            goto LABEL_254;
          }
          WPP_SF_D(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            0x19u,
            (__int64)&WPP_6ba06e9d807b3b6640892c588bf1aced_Traceguids,
            v48);
LABEL_249:
          v49 = WPP_GLOBAL_Control;
          goto LABEL_250;
        }
        v47 = Reg_OpenZone(0i64, L"..Cache", 0i64);
        RpcUtil_SwitchSecurityContext(1);
        if ( !v47 )
          goto LABEL_249;
        LODWORD(v59) = 0;
        if ( (unsigned int)Reg_SetValue(0x10000000, v47, 0i64, "Type", 4u, (BYTE *)&v59, 4u) )
        {
          if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
            && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
          {
            WPP_SF_s(
              *((_QWORD *)WPP_GLOBAL_Control + 7),
              0x68u,
              (__int64)&WPP_5efa35e0870730ffd13051b9da022308_Traceguids,
              v10);
          }
          v16 = 1013;
          RegCloseKey(v47);
          goto LABEL_255;
        }
      }
      v53 = a3;
      LODWORD(v59) = v9;
      if ( v47 )
        v53 = 0i64;
      v16 = Reg_SetValue(0x10000000, v47, v53, v19, 4u, (BYTE *)&v59, 4u);
      if ( v47 )
        RegCloseKey(v47);
      goto LABEL_283;
    }
    v19 = (CHAR *)"RefreshInterval";
    if ( !_stricmp(v10, "RefreshInterval") )
    {
      if ( (*(_BYTE *)(a3 + 388) & 1) != 0 && (dword_1401B9750 || g_fDsReadOnlyDcMode) )
        goto LABEL_73;
      if ( !v9 )
        v9 = dword_1401B990C;
      *(_DWORD *)(a3 + 996) = v9;
      Aging_ResetZoneAgingTime(a3);
      goto LABEL_242;
    }
    v19 = (CHAR *)"Aging";
    if ( !_stricmp(v10, "Aging") )
    {
      if ( (*(_BYTE *)(a3 + 388) & 1) != 0 && (dword_1401B9750 || g_fDsReadOnlyDcMode) )
        goto LABEL_73;
      v20 = *(_DWORD *)(a3 + 396);
      if ( (v20 & 0x10) != 0 && (*(_DWORD *)(a3 + 372) != 1 || (*(_BYTE *)(a3 + 1040) & 4) == 0) && v11 )
        goto LABEL_45;
      if ( (v20 & 1) != 0 )
      {
        if ( v11 )
          goto LABEL_97;
      }
      else if ( v11 )
      {
        Aging_ResetZoneAgingTime(a3);
LABEL_97:
        *(_DWORD *)(a3 + 396) &= ~1u;
        *(_DWORD *)(a3 + 396) |= v9 != 0;
        goto LABEL_242;
      }
      *(_DWORD *)(a3 + 1000) = 0;
      goto LABEL_97;
    }
    v19 = (CHAR *)"ForwarderSlave";
    if ( !_stricmp(v10, "ForwarderSlave") )
    {
      if ( *(_DWORD *)(a3 + 372) != 4 )
        goto LABEL_45;
      *(_DWORD *)(a3 + 1160) &= ~0x20u;
      *(_DWORD *)(a3 + 1160) |= 32 * (v9 != 0);
      goto LABEL_242;
    }
    v19 = (CHAR *)"ForwarderTimeout";
    if ( !_stricmp(v10, "ForwarderTimeout") )
    {
      if ( *(_DWORD *)(a3 + 372) != 4 )
        goto LABEL_45;
      *(_DWORD *)(a3 + 1556) = v9;
      goto LABEL_242;
    }
    if ( !_stricmp(v10, "IsSigned") || !_stricmp(v10, "IsKeymaster") )
    {
      dwLowDateTime = SystemTimeAsFileTime.dwLowDateTime;
      v16 = 87;
      goto LABEL_303;
    }
    v19 = (CHAR *)"SignWithNSEC3";
    if ( !_stricmp(v10, "SignWithNSEC3") )
    {
      v21 = *(_DWORD *)(a3 + 1040);
      if ( (v21 & 2) == 0 )
      {
LABEL_108:
        v16 = 9101;
        goto LABEL_255;
      }
      if ( ((v21 >> 4) & 1) == v11 )
        goto LABEL_283;
      if ( (v21 & 4) != 0 )
      {
LABEL_111:
        v16 = 9102;
        goto LABEL_255;
      }
      v22 = *(__int64 **)(a3 + 1136);
      if ( v22 )
      {
        v23 = v11 != 0 ? 50 : 47;
        while ( 1 )
        {
          v24 = *((_BYTE *)v22 + 40);
          if ( v24 == 5 )
            break;
          if ( v24 == 7 )
          {
            v25 = v23 == 50;
            goto LABEL_121;
          }
          if ( ((v24 - 8) & 0xFD) != 0 && (unsigned __int8)(v24 - 13) > 1u )
          {
LABEL_118:
            v16 = v11 != 0 ? 9103 : 9130;
            goto LABEL_255;
          }
LABEL_122:
          v22 = (__int64 *)*v22;
          if ( !v22 )
            goto LABEL_123;
        }
        v25 = v23 == 47;
LABEL_121:
        if ( !v25 )
          goto LABEL_118;
        goto LABEL_122;
      }
LABEL_123:
      v26 = v21 ^ ((unsigned __int8)v21 ^ (unsigned __int8)(16 * v11)) & 0x10;
      goto LABEL_124;
    }
    v19 = (CHAR *)"NSEC3OptOut";
    if ( !_stricmp(v10, "NSEC3OptOut") )
    {
      v29 = *(_DWORD *)(a3 + 1040);
      if ( (v29 & 2) == 0 )
        goto LABEL_108;
      if ( ((v29 >> 5) & 1) == v11 )
        goto LABEL_283;
      if ( (v29 & 4) != 0 )
        goto LABEL_111;
      v30 = ((unsigned __int8)v29 ^ (unsigned __int8)(32 * v11)) & 0x20;
      goto LABEL_132;
    }
    v19 = (CHAR *)"MaintainTrustAnchor";
    if ( !_stricmp(v10, "MaintainTrustAnchor") )
    {
      v31 = *(_DWORD *)(a3 + 1040);
      if ( (v31 & 2) == 0 )
        goto LABEL_108;
      if ( (v9 & 0xFFFFFFFE) != 0 )
        goto LABEL_59;
      if ( ((v31 >> 6) & 7) == v9 )
        goto LABEL_283;
      v32 = *(_DWORD *)(a3 + 388);
      LODWORD(v62) = v9;
      v33 = v31 ^ (v31 ^ (v9 << 6)) & 0x1C0;
      *(_DWORD *)(a3 + 1040) = v33;
      v28 = 2 - ((v32 & 1) == 0);
      if ( (v33 & 0x1C0) == 64 )
        DnsOls_PublishAllZoneKSKsAsTrustAnchors(a3);
      else
        DnsOls_PublishOrRemoveKeyAsTrustAnchor(a3, 0i64, 0i64, 0);
LABEL_240:
      if ( v28 != 1 )
      {
        if ( v28 == 2 )
          v16 = Ds_ZoneWriteProperty(0x10000000, a3, v19, (int *)&v61, 0);
        v6 = v59;
        goto LABEL_283;
      }
      v6 = v59;
      goto LABEL_242;
    }
    v19 = (CHAR *)"DsRecordAlgorithms";
    if ( !_stricmp(v10, "DsRecordAlgorithms") )
    {
      v34 = *(_DWORD *)(a3 + 1040);
      if ( (v34 & 2) == 0 )
        goto LABEL_108;
      if ( (v9 & 0xFFFFFFF8) != 0 )
        goto LABEL_59;
      if ( ((v34 >> 9) & 7) == v9 )
        goto LABEL_283;
      *(_DWORD *)(a3 + 1040) = v34 ^ ((unsigned __int16)v34 ^ (unsigned __int16)((_WORD)v9 << 9)) & 0xE00;
      goto LABEL_126;
    }
    v19 = (CHAR *)"RFC5011KeyRollovers";
    if ( !_stricmp(v10, "RFC5011KeyRollovers") )
    {
      v35 = *(_DWORD *)(a3 + 1040);
      if ( (v35 & 2) == 0 )
        goto LABEL_108;
      if ( *(_DWORD *)(a3 + 372) != 1 )
        goto LABEL_45;
      if ( ((v35 >> 12) & 1) == v11 )
        goto LABEL_283;
      v16 = setRFC5011Rollovers(a3, v11);
      if ( v16 )
        goto LABEL_255;
      goto LABEL_125;
    }
    v19 = (CHAR *)"NSEC3HashAlgorithm";
    if ( !_stricmp(v10, "NSEC3HashAlgorithm") )
    {
      v36 = *(_DWORD *)(a3 + 1040);
      if ( (v36 & 2) == 0 )
        goto LABEL_108;
      if ( (_BYTE)v9 != 1 )
        goto LABEL_59;
      if ( *(_BYTE *)(a3 + 1044) == 1 )
        goto LABEL_283;
      if ( (v36 & 4) != 0 )
        goto LABEL_111;
      *(_BYTE *)(a3 + 1044) = 1;
      goto LABEL_126;
    }
    v19 = (CHAR *)"NSEC3RandomSaltLength";
    if ( !_stricmp(v10, "NSEC3RandomSaltLength") )
    {
      v37 = *(_DWORD *)(a3 + 1040);
      if ( (v37 & 2) == 0 )
        goto LABEL_108;
      if ( v9 > 0xFF )
        goto LABEL_59;
      if ( *(_BYTE *)(a3 + 1045) == (_BYTE)v9 )
        goto LABEL_283;
      v38 = ~*(_DWORD *)(a3 + 388);
      *(_BYTE *)(a3 + 1045) = v9;
      LODWORD(v62) = v9;
      v28 = 2 - ((v38 & 1) != 0);
      if ( *(_DWORD *)(a3 + 372) != 1 || (v37 & 4) == 0 )
        goto LABEL_240;
      *(_DWORD *)(a3 + 1040) = v37 | 0x4008;
LABEL_164:
      DnsOls_MarkZoneForResign(a3, 0);
      PersistZoneResignSchedule(a3, 0x10000000);
      goto LABEL_240;
    }
    v19 = (CHAR *)"NSEC3Iterations";
    if ( !_stricmp(v10, "NSEC3Iterations") )
    {
      if ( (*(_DWORD *)(a3 + 1040) & 2) == 0 )
        goto LABEL_108;
      if ( v9 > 0x9C4 )
        goto LABEL_59;
      v39 = DnsOls_ZoneMinimumKeySize(a3);
      v42 = 150;
      if ( v39 <= 0x800 )
      {
        if ( v39 > 0x400 )
          v42 = 500;
      }
      else
      {
        v42 = v41;
      }
      if ( (unsigned __int16)v9 > v42 )
      {
        v16 = 9124;
        goto LABEL_255;
      }
      if ( *(_WORD *)(a3 + 1046) == (_WORD)v9 )
        goto LABEL_283;
      v43 = ~*(_DWORD *)(a3 + 388);
      *(_WORD *)(a3 + 1046) = v9;
      LODWORD(v62) = v9;
      v28 = 2 - ((v43 & 1) != 0);
      if ( *(_DWORD *)(a3 + 372) != 1 || (v40 & 4) == 0 )
        goto LABEL_240;
      *(_DWORD *)(a3 + 1040) = v40 | 0x8008;
      goto LABEL_164;
    }
    v19 = (CHAR *)"DNSKEYRecordSetTTL";
    if ( !_stricmp(v10, "DNSKEYRecordSetTTL") )
    {
      if ( (*(_BYTE *)(a3 + 1040) & 2) == 0 )
        goto LABEL_108;
      if ( v9 > 0x93A80 )
        goto LABEL_59;
      if ( *(_DWORD *)(a3 + 1056) == v9 )
        goto LABEL_283;
      *(_DWORD *)(a3 + 1056) = v9;
      goto LABEL_126;
    }
    v19 = (CHAR *)"DSRecordSetTTL";
    if ( !_stricmp(v10, "DSRecordSetTTL") )
    {
      if ( (*(_BYTE *)(a3 + 1040) & 2) == 0 )
        goto LABEL_108;
      if ( v9 > 0x93A80 )
        goto LABEL_59;
      if ( *(_DWORD *)(a3 + 1060) == v9 )
        goto LABEL_283;
      *(_DWORD *)(a3 + 1060) = v9;
      goto LABEL_126;
    }
    v19 = (CHAR *)"SignatureInceptionOffset";
    if ( !_stricmp(v10, "SignatureInceptionOffset") )
    {
      if ( (*(_BYTE *)(a3 + 1040) & 2) == 0 )
        goto LABEL_108;
      if ( v9 > 0x93A80 )
        goto LABEL_59;
      if ( *(_DWORD *)(a3 + 1064) == v9 )
        goto LABEL_283;
      memset_0(v64, 0, 0x678ui64);
      v68 = v9;
      if ( *(_QWORD *)(a3 + 184) )
      {
        v16 = Dns_SetPropsLockingAllZoneScopes(a3, 1u, (__int64)v64);
        if ( v16 )
          goto LABEL_255;
      }
      else
      {
        v16 = 0;
      }
      *(_DWORD *)(a3 + 1064) = v9;
      goto LABEL_126;
    }
    v19 = (CHAR *)"SecureDelegationPollingPeriod";
    if ( !_stricmp(v10, "SecureDelegationPollingPeriod") )
    {
      if ( (*(_BYTE *)(a3 + 1040) & 2) == 0 )
        goto LABEL_108;
      if ( v9 - 3600 > 0x92C70 )
        goto LABEL_59;
      if ( *(_DWORD *)(a3 + 1068) == v9 )
        goto LABEL_283;
      *(_DWORD *)(a3 + 1068) = v9;
      goto LABEL_126;
    }
    v19 = (CHAR *)"ParentHasSecureDelegation";
    if ( !_stricmp(v10, "ParentHasSecureDelegation") )
    {
      v29 = *(_DWORD *)(a3 + 1040);
      if ( (v29 & 2) == 0 )
        goto LABEL_108;
      if ( ((v29 >> 13) & 1) == v11 )
        goto LABEL_283;
      v30 = ((unsigned __int16)v29 ^ (unsigned __int16)((_WORD)v11 << 13)) & 0x2000;
LABEL_132:
      v26 = v29 ^ v30;
LABEL_124:
      *(_DWORD *)(a3 + 1040) = v26;
LABEL_125:
      LODWORD(v61) = 0x80000;
LABEL_126:
      v27 = ~*(_DWORD *)(a3 + 388);
      LODWORD(v62) = v9;
      v28 = 2 - ((v27 & 1) != 0);
      goto LABEL_240;
    }
    v19 = (CHAR *)"PropagationTime";
    if ( !_stricmp(v10, "PropagationTime") )
    {
      if ( (*(_BYTE *)(a3 + 1040) & 2) == 0 )
        goto LABEL_108;
      if ( *(_DWORD *)(a3 + 1072) == v9 )
        goto LABEL_283;
      *(_DWORD *)(a3 + 1072) = v9;
      goto LABEL_126;
    }
    if ( !_stricmp(v10, "PluginEnabled") )
    {
      v44 = *(_DWORD *)(a3 + 372);
      if ( (unsigned int)(v44 - 1) <= 1 && (*(_BYTE *)(a3 + 396) & 6) == 0 && a3 != g_pTrustAnchorsZone
        || !v44
        || v11 != 1 )
      {
        if ( ((*(_DWORD *)(a3 + 396) >> 17) & 1) == v11 )
          goto LABEL_283;
        v19 = (CHAR *)"PluginEnabled";
        *(_DWORD *)(a3 + 396) ^= (*(_DWORD *)(a3 + 396) ^ (v11 << 17)) & 0x20000;
        goto LABEL_242;
      }
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x64u, (__int64)&WPP_5efa35e0870730ffd13051b9da022308_Traceguids);
      }
      goto LABEL_219;
    }
    v19 = (CHAR *)"FreezeSOASerialNumber";
    if ( !_stricmp(v10, "FreezeSOASerialNumber") )
    {
      if ( a3 != g_pTrustAnchorsZone
        && (*(_BYTE *)(a3 + 388) & 1) == 0
        && (*(_BYTE *)(a3 + 396) & 4) == 0
        && *(_DWORD *)(a3 + 372)
        || v11 != 1 )
      {
        if ( ((*(_DWORD *)(a3 + 396) >> 18) & 1) == v11 )
          goto LABEL_283;
        *(_DWORD *)(a3 + 396) ^= (*(_DWORD *)(a3 + 396) ^ (v11 << 18)) & 0x40000;
        goto LABEL_242;
      }
      v45 = WPP_GLOBAL_Control;
      if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        || (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) == 0
        || *((_BYTE *)WPP_GLOBAL_Control + 65) < 4u )
      {
        goto LABEL_219;
      }
      v46 = 101;
    }
    else
    {
      if ( _stricmp(v10, "EnablePolicies") )
      {
        v16 = 9553;
        goto LABEL_255;
      }
      if ( a3 != g_pTrustAnchorsZone && *(_DWORD *)(a3 + 372) <= 3u )
      {
        if ( *(_DWORD *)(a3 + 304) == v11 )
          goto LABEL_283;
        *(_DWORD *)(a3 + 304) = v11;
        v28 = 1;
        v19 = (CHAR *)"EnablePolicies";
        LODWORD(v62) = v11;
        goto LABEL_240;
      }
      v45 = WPP_GLOBAL_Control;
      if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        || (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) == 0
        || *((_BYTE *)WPP_GLOBAL_Control + 65) < 4u )
      {
LABEL_219:
        v16 = 9603;
        goto LABEL_255;
      }
      v46 = 102;
    }
    WPP_SF_S(
      *((_QWORD *)v45 + 7),
      v46,
      (__int64)&WPP_5efa35e0870730ffd13051b9da022308_Traceguids,
      *(const unsigned __int16 **)(a3 + 24));
    goto LABEL_219;
  }
  v16 = 9611;
LABEL_258:
  v12 = WPP_GLOBAL_Control;
LABEL_259:
  if ( v12 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)v12 + 68) & 4) != 0
    && *((_BYTE *)v12 + 65) >= 4u )
  {
    if ( !a3 || (v50 = *(_QWORD *)(a3 + 328)) == 0 )
      v50 = a3;
    if ( *(_QWORD *)(v50 + 200) )
    {
      if ( !a3 || (v51 = *(_QWORD *)(a3 + 328)) == 0 )
        v51 = a3;
      v52 = **(const wchar_t ***)(v51 + 200);
    }
    else
    {
      v52 = L".";
    }
    WPP_SF_dssS(*((_QWORD *)v12 + 7), 0x6Au, (__int64)v52, v16, (__int64)v10, *(_QWORD *)(a3 + 16), (__int64)v52);
  }
  return v16;
}
// 1400D5741: variable 'v41' is possibly undefined
// 1400D579E: variable 'v40' is possibly undefined
// 1401B8C48: using guessed type __int64 g_pTrustAnchorsZone;
// 1401B8C94: using guessed type int g_fDsReadOnlyDcMode;
// 1401B9750: using guessed type int dword_1401B9750;
// 1401B990C: using guessed type int dword_1401B990C;
// 1401B9910: using guessed type int dword_1401B9910;
