//----- (00000001400C824C) ----------------------------------------------------
void __fastcall Zone_UnlockAfterWriteEx(__int64 a1, __int16 a2, __int64 a3, char a4)
{
  char v8; // bl
  char CurrentThreadId; // al
  __int64 v10; // rdx
  __int64 v11; // r8
  __int64 v12; // rcx

  if ( a1 )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x10) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
    {
      v8 = *(_BYTE *)(a1 + 428);
      CurrentThreadId = GetCurrentThreadId();
      WPP_SF_sDdls(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        v10,
        v11,
        *(const char **)(a1 + 16),
        CurrentThreadId,
        v8,
        a4,
        a3);
    }
    if ( *(char *)(a1 + 428) < 0 && *(_DWORD *)(a1 + 404) == GetCurrentThreadId() )
    {
      ++*(_BYTE *)(a1 + 428);
      if ( (a2 & 1) != 0 )
      {
        --*(_BYTE *)(a1 + 400);
      }
      else if ( (a2 & 0x100) != 0 )
      {
        --*(_BYTE *)(a1 + 401);
      }
      if ( !*(_BYTE *)(a1 + 428) )
        *(_DWORD *)(a1 + 404) = 0;
      Lock_ReleaseWrite(*(_QWORD *)(a1 + 416));
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x10) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
      {
        WPP_SF_sd(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0xC3u,
          (__int64)&WPP_e9a0d5dea449334d7c383477da81f939_Traceguids,
          *(const char **)(a1 + 16));
      }
    }
    else
    {
      Dbg_ZoneLock("ERROR: bad zone write unlock:", a1);
      v12 = *(_QWORD *)(a1 + 416);
      *(_DWORD *)(a1 + 404) = 0;
      *(_BYTE *)(a1 + 428) = 0;
      Lock_Destroy(v12);
      *(_QWORD *)(a1 + 416) = Lock_Create();
    }
  }
}
// 1400C82C4: variable 'v10' is possibly undefined
// 1400C82C4: variable 'v11' is possibly undefined
