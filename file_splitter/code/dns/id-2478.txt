//----- (000000014012B834) ----------------------------------------------------
_OWORD *__fastcall std::num_put<unsigned short,std::ostreambuf_iterator<unsigned short>>::_Fput(
        __int64 a1,
        _OWORD *a2,
        __int128 *a3,
        __int64 a4,
        __int16 a5,
        char **Buf,
        __int64 a7,
        __int64 a8,
        __int64 a9,
        size_t MaxCount)
{
  char **v12; // rdi
  __int64 v13; // r13
  size_t v14; // r14
  __int64 *v15; // rax
  _BYTE *v16; // r15
  __int64 v17; // r12
  void **v18; // rcx
  char *v19; // rax
  __int64 v20; // rbx
  size_t v21; // r15
  char *v22; // rbx
  const char *v23; // rcx
  size_t v24; // rdi
  __int64 v25; // r15
  char v26; // cl
  size_t v27; // rax
  __int64 v28; // rcx
  __int64 v29; // rbx
  __int64 v30; // rbx
  int v31; // eax
  __int128 *v32; // rax
  _BYTE *v33; // rax
  __int64 v34; // r15
  __int128 *v35; // rax
  __int64 v36; // rcx
  __int128 *v37; // rax
  unsigned __int16 v38; // ax
  __int64 v39; // rcx
  __int128 *v40; // rax
  __int64 v41; // rcx
  _BYTE *v42; // rax
  __int64 v43; // r15
  __int128 *v44; // rax
  __int64 v45; // rcx
  __int128 *v46; // rax
  __int64 v47; // r13
  char *v48; // r9
  __int128 *v49; // rax
  __int64 v50; // rcx
  _OWORD *v51; // rbx
  __int64 v52; // rcx
  _Cvtvec *v54; // [rsp+20h] [rbp-E0h]
  wchar_t v55; // [rsp+30h] [rbp-D0h] BYREF
  char v56[8]; // [rsp+38h] [rbp-C8h] BYREF
  unsigned __int16 v57; // [rsp+40h] [rbp-C0h]
  unsigned __int16 v58; // [rsp+42h] [rbp-BEh]
  char Control; // [rsp+44h] [rbp-BCh] BYREF
  __int16 v60; // [rsp+45h] [rbp-BBh]
  __int128 v61; // [rsp+50h] [rbp-B0h] BYREF
  __int128 v62; // [rsp+60h] [rbp-A0h] BYREF
  __int128 v63; // [rsp+70h] [rbp-90h] BYREF
  __int64 v64; // [rsp+80h] [rbp-80h]
  __int64 v65; // [rsp+88h] [rbp-78h]
  __int64 v66; // [rsp+90h] [rbp-70h]
  __int64 v67; // [rsp+98h] [rbp-68h] BYREF
  _OWORD *v68; // [rsp+A0h] [rbp-60h]
  __int64 v69; // [rsp+A8h] [rbp-58h]
  char *Str[2]; // [rsp+B0h] [rbp-50h] BYREF
  size_t v71; // [rsp+C0h] [rbp-40h]
  unsigned __int64 v72; // [rsp+C8h] [rbp-38h]
  void *v73[3]; // [rsp+D8h] [rbp-28h] BYREF
  unsigned __int64 v74; // [rsp+F0h] [rbp-10h]

  v69 = -2i64;
  v66 = a4;
  v68 = a2;
  v64 = a1;
  v58 = a5;
  v12 = Buf;
  v13 = a7;
  v65 = a8;
  v14 = MaxCount;
  v15 = std::ios_base::getloc(a4, &v67);
  *(_QWORD *)&v62 = std::use_facet<std::numpunct<unsigned short>>(v15);
  std::locale::~locale((std::locale *)&v67);
  std::numpunct<unsigned short>::grouping(v62, (__int64)v73);
  v57 = (*(__int64 (__fastcall **)(_QWORD))(*(_QWORD *)v62 + 16i64))(v62);
  v72 = 15i64;
  v71 = 0i64;
  LOBYTE(Str[0]) = 0;
  v56[0] = 48;
  v55 = 0;
  LODWORD(v63) = 0;
  Mbrtowc(&v55, v56, 1ui64, (mbstate_t *)&v63, (const _Cvtvec *)(a1 + 16));
  *(_QWORD *)&v63 = ((*(_BYTE *)Buf - 43) & 0xFD) == 0;
  Control = *localeconv()->decimal_point;
  v60 = 101;
  *(_QWORD *)&v61 = memchr(Buf, 101, MaxCount);
  v16 = memchr(Buf, Control, MaxCount);
  v17 = a9 & -(__int64)(v16 != 0i64);
  v18 = v73;
  if ( v74 >= 0x10 )
    v18 = (void **)v73[0];
  if ( *(_BYTE *)v18 == 127 )
    goto LABEL_29;
  v19 = (char *)v73;
  if ( v74 >= 0x10 )
    v19 = (char *)v73[0];
  if ( *v19 <= 0 )
  {
LABEL_29:
    v25 = v63;
  }
  else
  {
    std::string::append(Str, (char *)Buf, MaxCount);
    v20 = v61;
    if ( (_QWORD)v61 )
    {
      if ( !v16 )
      {
        std::string::append((size_t *)Str, a7, 48);
        v13 = 0i64;
      }
      std::string::insert((size_t *)Str, v20 - (_QWORD)Buf, v17, 48);
    }
    else
    {
      std::string::append((size_t *)Str, v17, 48);
    }
    if ( v16 )
    {
      v21 = v16 - (_BYTE *)Buf;
      std::string::insert((size_t *)Str, v21 + 1, v65, 48);
      std::string::insert((size_t *)Str, v21, v13, 48);
      v65 = 0i64;
    }
    else
    {
      std::string::append((size_t *)Str, v13, 48);
    }
    v13 = 0i64;
    v22 = (char *)v73;
    if ( v74 >= 0x10 )
      v22 = (char *)v73[0];
    v23 = (const char *)Str;
    if ( v72 >= 0x10 )
      v23 = Str[0];
    v24 = strcspn(v23, &Control);
    v25 = v63;
    while ( 1 )
    {
      v26 = *v22;
      if ( *v22 == 127 || v26 <= 0 || v26 >= v24 - v25 )
        break;
      v24 -= v26;
      std::string::insert((size_t *)Str, v24, 1ui64, 0);
      if ( v22[1] > 0 )
        ++v22;
    }
    v12 = Str;
    if ( v72 >= 0x10 )
      v12 = (char **)Str[0];
    v17 = 0i64;
    v14 = v71;
  }
  v27 = v13 + v65 + v14 + v17;
  v28 = v66;
  v29 = *(_QWORD *)(v66 + 40);
  if ( v29 <= 0 || v29 <= v27 )
    v30 = 0i64;
  else
    v30 = v29 - v27;
  v31 = *(_DWORD *)(v66 + 24) & 0x1C0;
  if ( v31 != 64 )
  {
    if ( v31 == 256 && v25 )
    {
      v61 = *a3;
      *a3 = *std::num_put<unsigned short,std::ostreambuf_iterator<unsigned short>>::_Putc(
               v64,
               &v63,
               (__int64)&v61,
               v12,
               1i64);
      v12 = (char **)((char *)v12 + 1);
      --v14;
    }
    v61 = *a3;
    v32 = std::num_put<unsigned short,std::ostreambuf_iterator<unsigned short>>::_Rep(
            v28,
            &v63,
            (__int64)&v61,
            v58,
            v30);
    v30 = 0i64;
    *a3 = *v32;
  }
  v33 = memchr(v12, Control, v14);
  if ( v33 )
  {
    v34 = v33 - (_BYTE *)v12 + 1;
    v61 = *a3;
    v35 = std::num_put<unsigned short,std::ostreambuf_iterator<unsigned short>>::_Putgrouped(
            v64,
            &v63,
            &v61,
            v12,
            v33 - (_BYTE *)v12,
            v57);
    *a3 = *v35;
    v61 = *v35;
    v37 = std::num_put<unsigned short,std::ostreambuf_iterator<unsigned short>>::_Rep(
            v36,
            &v63,
            (__int64)&v61,
            v55,
            v13);
    *a3 = *v37;
    v61 = *v37;
    v38 = (*(__int64 (__fastcall **)(_QWORD))(*(_QWORD *)v62 + 8i64))(v62);
    v40 = std::num_put<unsigned short,std::ostreambuf_iterator<unsigned short>>::_Rep(
            v39,
            &v62,
            (__int64)&v61,
            v38,
            1i64);
    *a3 = *v40;
    v62 = *v40;
    *a3 = *std::num_put<unsigned short,std::ostreambuf_iterator<unsigned short>>::_Rep(
             v41,
             &v61,
             (__int64)&v62,
             v55,
             v65);
    v12 = (char **)((char *)v12 + v34);
    v14 -= v34;
  }
  v42 = memchr(v12, 101, v14);
  if ( v42 )
  {
    v43 = v42 - (_BYTE *)v12 + 1;
    v62 = *a3;
    v44 = std::num_put<unsigned short,std::ostreambuf_iterator<unsigned short>>::_Putgrouped(
            v64,
            &v61,
            &v62,
            v12,
            v42 - (_BYTE *)v12,
            v57);
    *a3 = *v44;
    v62 = *v44;
    v46 = std::num_put<unsigned short,std::ostreambuf_iterator<unsigned short>>::_Rep(
            v45,
            &v61,
            (__int64)&v62,
            v55,
            v17);
    *a3 = *v46;
    v17 = 0i64;
    v62 = *v46;
    v47 = v66;
    v48 = "e";
    if ( (*(_BYTE *)(v66 + 24) & 4) != 0 )
      v48 = "E";
    *a3 = *std::num_put<unsigned short,std::ostreambuf_iterator<unsigned short>>::_Putc(
             v64,
             &v61,
             (__int64)&v62,
             v48,
             1i64);
    v12 = (char **)((char *)v12 + v43);
    v14 -= v43;
  }
  else
  {
    v47 = v66;
  }
  v62 = *a3;
  v49 = std::num_put<unsigned short,std::ostreambuf_iterator<unsigned short>>::_Putgrouped(
          v64,
          &v61,
          &v62,
          v12,
          v14,
          v57);
  *a3 = *v49;
  v62 = *v49;
  *a3 = *std::num_put<unsigned short,std::ostreambuf_iterator<unsigned short>>::_Rep(v50, &v61, (__int64)&v62, v55, v17);
  *(_QWORD *)(v47 + 40) = 0i64;
  v62 = *a3;
  v54 = (_Cvtvec *)v30;
  v51 = v68;
  std::num_put<unsigned short,std::ostreambuf_iterator<unsigned short>>::_Rep(
    v52,
    v68,
    (__int64)&v62,
    v58,
    (__int64)v54);
  if ( v72 >= 0x10 )
    operator delete(Str[0]);
  v72 = 15i64;
  v71 = 0i64;
  LOBYTE(Str[0]) = 0;
  if ( v74 >= 0x10 )
    operator delete(v73[0]);
  return v51;
}
// 14012BB73: variable 'v28' is possibly undefined
// 14012BBFB: variable 'v36' is possibly undefined
// 14012BC39: variable 'v39' is possibly undefined
// 14012BC67: variable 'v41' is possibly undefined
// 14012BCF3: variable 'v45' is possibly undefined
// 14012BDA8: variable 'v50' is possibly undefined
// 14012BDDA: variable 'v52' is possibly undefined
// 140184CA8: using guessed type void __stdcall operator delete(void *);
// 140185140: using guessed type __int64 (__fastcall *_guard_dispatch_icall_fptr)(_QWORD, _QWORD);
// 14012B834: using guessed type char var_118[8];
