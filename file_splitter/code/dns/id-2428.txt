//----- (000000014012791C) ----------------------------------------------------
unsigned __int8 *__fastcall DnsSign::ConvertSaltStringToBinary(DnsSign *this, char *a2, unsigned __int8 *a3)
{
  char v5; // bl
  _BYTE *v6; // rdi
  unsigned int v7; // eax
  __int64 v8; // rdx
  _BYTE *v9; // rax
  __int64 v10; // rdx
  unsigned int v12; // [rsp+38h] [rbp-69h] BYREF
  _BYTE *v13; // [rsp+40h] [rbp-61h]
  __int64 v14; // [rsp+48h] [rbp-59h]
  char v15[24]; // [rsp+50h] [rbp-51h] BYREF
  char v16[56]; // [rsp+68h] [rbp-39h] BYREF
  char pExceptionObject[56]; // [rsp+A0h] [rbp-1h] BYREF

  v14 = -2i64;
  v5 = 0;
  v6 = 0i64;
  v7 = strnlen((const char *)this, 0x1FFui64);
  v12 = v7;
  if ( v7 > 0x1FE )
  {
    DnsSign::CBadCommandLineException::CBadCommandLineException((DnsSign::CBadCommandLineException *)v16, v8, 36);
    DnsSign::CException::AppendErrorMessageByID((DnsSign::CException *)v16, 0xD6DE9u, this);
    DnsSign::CBadCommandLineException::CBadCommandLineException((__int64)pExceptionObject, (__int64)v16);
    CxxThrowException_0(pExceptionObject, (_ThrowInfo *)&TI2_AVCBadCommandLineException_DnsSign__);
  }
  if ( v7 != 1 || *(_BYTE *)this != 45 )
  {
    v9 = Mem_Alloc(v7, 0i64, "ds\\dns\\server\\dnssign\\utils.cpp", 1602);
    v6 = v9;
    if ( !v9 )
    {
      std::bad_alloc::bad_alloc((std::bad_alloc *)v15);
      CxxThrowException_0(v15, (_ThrowInfo *)&TI2_AVbad_alloc_std__);
    }
    v13 = v9;
    if ( (unsigned int)buildByteBufferFromHexString((__int64)v9, &v12, (char *)this, v9) )
    {
      DnsSign::CBadCommandLineException::CBadCommandLineException((DnsSign::CBadCommandLineException *)v16, v10, 36);
      DnsSign::CException::AppendErrorMessageByID((DnsSign::CException *)v16, 0xD6DE9u, this);
      DnsSign::CBadCommandLineException::CBadCommandLineException((__int64)pExceptionObject, (__int64)v16);
      CxxThrowException_0(pExceptionObject, (_ThrowInfo *)&TI2_AVCBadCommandLineException_DnsSign__);
    }
    v13 = 0i64;
    Mem_Free(0i64, 0i64, 0i64, (__int64)"ds\\dns\\server\\dnssign\\zone.cpp", 239);
    v5 = v12;
  }
  *a2 = v5;
  return v6;
}
// 140127973: variable 'v8' is possibly undefined
// 140127A12: variable 'v10' is possibly undefined
