//----- (000000014012E510) ----------------------------------------------------
__int64 InternalRouterUpdateProtocolInfo(DWORD a1, int a2, ...)
{
  int v3; // esi
  DWORD Info; // ebx
  LPBYTE v5; // rax
  DWORD v6; // r8d
  DWORD v7; // r9d
  int v8; // ecx
  unsigned int v9; // ecx
  int v10; // ecx
  DWORD Size; // eax
  LPBYTE lpItemData; // [rsp+48h] [rbp-19h] BYREF
  LPBYTE ppGlobalInfo; // [rsp+50h] [rbp-11h] BYREF
  LPVOID lpNewHeader; // [rsp+58h] [rbp-9h] BYREF
  MPR_SERVER_HANDLE phMprServer; // [rsp+60h] [rbp-1h] BYREF
  HANDLE phMprConfig; // [rsp+68h] [rbp+7h] BYREF
  DWORD dwItemCount; // [rsp+70h] [rbp+Fh] BYREF
  LPBYTE v19; // [rsp+78h] [rbp+17h] BYREF
  HANDLE phRouterTransport; // [rsp+80h] [rbp+1Fh] BYREF
  LPBYTE v21; // [rsp+88h] [rbp+27h] BYREF
  DWORD dwGlobalInfoSize; // [rsp+90h] [rbp+2Fh] BYREF
  int v23[9]; // [rsp+94h] [rbp+33h] BYREF
  DWORD v24; // [rsp+C8h] [rbp+67h] BYREF
  __int64 dwItemSize; // [rsp+D8h] [rbp+77h] BYREF
  va_list dwItemSizea; // [rsp+D8h] [rbp+77h]
  __int64 v27; // [rsp+E0h] [rbp+7Fh] BYREF
  va_list va1; // [rsp+E0h] [rbp+7Fh]
  va_list va2; // [rsp+E8h] [rbp+87h] BYREF

  va_start(va2, a2);
  va_start(va1, a2);
  va_start(dwItemSizea, a2);
  dwItemSize = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v27 = va_arg(va2, _QWORD);
  v24 = a1;
  phMprServer = 0i64;
  phMprConfig = 0i64;
  v3 = 0;
  phRouterTransport = 0i64;
  ppGlobalInfo = 0i64;
  lpNewHeader = 0i64;
  lpItemData = 0i64;
  v19 = 0i64;
  v21 = 0i64;
  Info = MprAdminServerConnect(0i64, &phMprServer);
  if ( Info )
    goto LABEL_23;
  Info = MprAdminTransportGetInfo(phMprServer, 0x21u, &ppGlobalInfo, &dwGlobalInfoSize, 0i64, 0i64);
  if ( Info )
    goto LABEL_23;
  Info = MprInfoBlockFind(ppGlobalInfo, 0x81372713, (LPDWORD)dwItemSizea, &dwItemCount, &lpItemData);
  if ( Info )
    goto LABEL_23;
  if ( a2 == 3 )
  {
    Info = MprConfigServerConnect(0i64, &phMprConfig);
    if ( Info )
      goto LABEL_23;
    Info = MprConfigTransportGetHandle(phMprConfig, 0x21u, &phRouterTransport);
    if ( Info )
      goto LABEL_23;
    Info = MprConfigTransportGetInfo(phMprConfig, phRouterTransport, &v19, (LPDWORD)v23, 0i64, 0i64, 0i64);
    if ( Info )
      goto LABEL_23;
    Info = MprInfoBlockFind(v19, 0x81372713, &v24, (LPDWORD)va1, &v21);
    if ( Info )
      goto LABEL_23;
    v5 = v21;
    v6 = v24;
    v7 = v27;
    goto LABEL_20;
  }
  if ( a2 != 1 )
  {
    if ( a2 != 2 )
    {
      Info = 87;
      goto LABEL_23;
    }
    v5 = lpItemData;
    if ( !lpItemData )
      goto LABEL_19;
    v10 = *((_DWORD *)lpItemData + 1);
    if ( (v10 & 1) == 0 )
      goto LABEL_19;
    v9 = v10 & 0xFFFFFFFE;
    goto LABEL_18;
  }
  v5 = lpItemData;
  if ( lpItemData )
  {
    v8 = *((_DWORD *)lpItemData + 1);
    if ( (v8 & 1) == 0 )
    {
      v9 = v8 | 1;
LABEL_18:
      *((_DWORD *)v5 + 1) = v9;
      v3 = 1;
      v5 = lpItemData;
    }
  }
LABEL_19:
  v6 = dwItemSize;
  v7 = dwItemCount;
  if ( !v3 )
    goto LABEL_23;
LABEL_20:
  Info = MprInfoBlockSet(ppGlobalInfo, 0x81372713, v6, v7, v5, &lpNewHeader);
  if ( !Info )
  {
    Size = MprInfoBlockQuerySize(lpNewHeader);
    Info = MprAdminTransportSetInfo(phMprServer, 0x21u, (LPBYTE)lpNewHeader, Size, 0i64, 0);
  }
LABEL_23:
  if ( ppGlobalInfo )
    MprAdminBufferFree(ppGlobalInfo);
  if ( lpNewHeader )
    MprAdminBufferFree(lpNewHeader);
  if ( v19 )
    MprConfigBufferFree(v19);
  if ( phMprServer )
    MprAdminServerDisconnect(phMprServer);
  if ( phMprConfig )
    MprConfigServerDisconnect(phMprConfig);
  return Info;
}
// 14012E510: using guessed type DWORD var_24[9];
