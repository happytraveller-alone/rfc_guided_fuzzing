//----- (000000014016306C) ----------------------------------------------------
_WORD *__fastcall Tkey_RecordRead(__int64 a1, __int64 a2, __int64 a3, __int64 a4, unsigned __int64 a5)
{
  _WORD *Record; // rbx
  unsigned __int8 *v7; // rax
  unsigned __int16 v8; // dx
  unsigned __int8 *v9; // r9
  __int16 v10; // ax
  __int16 v11; // dx
  unsigned __int64 v12; // r9
  unsigned __int16 v13; // dx

  Record = Dns_AllocateRecordEx(0x38ui64);
  if ( Record )
  {
    Record[8] = 249;
    v7 = (unsigned __int8 *)Dns_SkipPacketName(a4, a5);
    if ( v7 && (__int64)&v7[-a4] < 256 )
    {
      *((_QWORD *)Record + 4) = 0i64;
      *((_QWORD *)Record + 5) = a4;
      *((_BYTE *)Record + 80) = (_BYTE)v7 - a4;
      if ( (unsigned __int64)(v7 + 16) < a5 )
      {
        *((_DWORD *)Record + 16) = v7[3] | ((v7[2] | ((v7[1] | (*v7 << 8)) << 8)) << 8);
        *((_DWORD *)Record + 17) = v7[7] | ((v7[6] | ((v7[5] | (v7[4] << 8)) << 8)) << 8);
        Record[36] = v7[9] + (v7[8] << 8);
        Record[37] = v7[11] + (v7[10] << 8);
        v8 = v7[13] + (v7[12] << 8);
        v9 = &v7[v8 + 14];
        Record[38] = v8;
        if ( (unsigned __int64)(v9 + 2) <= a5 )
        {
          *((_QWORD *)Record + 6) = v7 + 14;
          v10 = v9[1];
          v11 = *v9;
          v12 = (unsigned __int64)(v9 + 2);
          v13 = v10 + (v11 << 8);
          Record[39] = v13;
          if ( v12 + v13 <= a5 )
          {
            *((_DWORD *)Record + 21) = 1;
            *((_QWORD *)Record + 7) = v12 & -(__int64)(v13 != 0);
            return Record;
          }
        }
      }
    }
    else if ( (byte_1401BA001 & 0x20) != 0 )
    {
      WPP_SF_(28i64, (unsigned __int16)&WPP_4ce8f5ce0388397a72edd05e55ebbcd7_Traceguids, (__int64)v7);
    }
    if ( (byte_1401BA003 & 0x10) != 0 )
      WPP_SF_q(30i64, (unsigned __int16)&WPP_4ce8f5ce0388397a72edd05e55ebbcd7_Traceguids, a4);
    Dns_Free(Record);
  }
  return 0i64;
}
// 140183DD0: using guessed type __int64 __fastcall Dns_SkipPacketName(_QWORD, _QWORD);
// 1401BA001: using guessed type char byte_1401BA001;
// 1401BA003: using guessed type char byte_1401BA003;
