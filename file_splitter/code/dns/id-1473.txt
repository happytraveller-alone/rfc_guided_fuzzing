//----- (00000001400B7B38) ----------------------------------------------------
void __fastcall Up_CompleteZoneUpdate(__int64 a1, __int64 a2, __int64 a3, int a4)
{
  int v4; // edi
  CDnsClientSubnetRecordsTrie *v7; // rcx
  int v8; // edi
  int v9; // r14d
  int v10; // r9d
  char *v11; // rax
  int v12; // r14d
  char *v13; // rax
  __int64 v14; // rdx
  __int64 v15; // r8
  int v16; // ecx
  __int64 **i; // rax
  unsigned __int16 v18[22]; // [rsp+30h] [rbp-58h] BYREF
  int v19; // [rsp+5Ch] [rbp-2Ch]

  v4 = a3;
  v7 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control )
  {
    if ( (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) == 0 )
      goto LABEL_8;
    if ( *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_sd(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x3Au,
        (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids,
        *(const char **)(a1 + 16));
      v7 = WPP_GLOBAL_Control;
    }
  }
  if ( (*((_DWORD *)v7 + 17) & 0x80000) != 0 && *((_BYTE *)v7 + 65) >= 5u )
  {
    Dbg_UpdateList("Update list to complete:", a2);
    v7 = WPP_GLOBAL_Control;
  }
LABEL_8:
  v8 = *(_DWORD *)(a2 + 40) | v4;
  if ( *(_DWORD *)(a1 + 372) )
  {
    v9 = *(_DWORD *)(a1 + 512);
    if ( (*(_DWORD *)(a1 + 396) & 0x400) != 0 && (v8 & 0x20000000) == 0 )
    {
      Zone_GetZoneInfoFromResourceRecords(a1);
      v7 = WPP_GLOBAL_Control;
    }
    if ( *(_DWORD *)(a2 + 44) )
    {
      if ( (v8 & 0x20008) == 0 && *(_DWORD *)(a1 + 512) - v9 <= 0 )
      {
        memset_0(v18, 0, 0x40ui64);
        Zone_IncrementVersion(a1, v18);
        if ( v19 )
        {
          if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x200000) != 0
            && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
          {
            v11 = Dbg_NodeName(*(_QWORD *)(a1 + 40));
            WPP_SF_s(
              *((_QWORD *)WPP_GLOBAL_Control + 7),
              0x3Du,
              (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids,
              v11);
          }
          v12 = Up_ApplyUpdatesToDatabase((__int64)v18, a1, v8 | 0x22B0000u, v10);
          if ( v12 )
          {
            if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
              && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x200000) != 0
              && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
            {
              v13 = Dbg_NodeName(*(_QWORD *)(a1 + 40));
              WPP_SF_Ds(
                *((_QWORD *)WPP_GLOBAL_Control + 7),
                0x3Eu,
                (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids,
                v12,
                (__int64)v13);
            }
          }
          else
          {
            Up_AppendUpdateList(a2, (__int64)v18, *(_DWORD *)(a1 + 512));
          }
        }
        Up_FreeUpdatesInUpdateList((__int64)v18);
      }
      Up_LogZoneUpdate(a1, a2, v8);
      if ( (v8 & 0x4000000) != 0 )
        Dnssec_ProcessTrustAnchorsChanges((__int64 ***)a2);
      v16 = *(_DWORD *)(a1 + 512);
      for ( i = *(__int64 ***)a2; i; i = (__int64 **)*i )
      {
        if ( g_fDnsServiceExit == 1 )
        {
          if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
            && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
          {
            WPP_SF_(
              *((_QWORD *)WPP_GLOBAL_Control + 7),
              0x10u,
              (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids);
          }
          break;
        }
        i[2] = 0i64;
        *((_DWORD *)i + 8) = v16;
      }
      if ( *(_DWORD *)(a1 + 380) != 3 && ((*(_BYTE *)(a1 + 388) & 1) == 0 || *(_DWORD *)(a1 + 520)) )
        Up_AppendUpdateList(a1 + 1568, a2, *(_DWORD *)(a1 + 512));
      *(_DWORD *)(a1 + 444) += *(_DWORD *)(a2 + 56);
      if ( *(int *)(a1 + 444) <= 0 )
      {
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
        {
          WPP_SF_sd(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            0x3Fu,
            (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids,
            *(const char **)(a1 + 16));
        }
        *(_DWORD *)(a1 + 444) = 1;
      }
      Up_CleanZoneUpdateList(a1, v14, v15);
    }
    else
    {
      if ( v7 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)v7 + 17) & 0x80000) != 0
        && *((_BYTE *)v7 + 65) >= 4u )
      {
        WPP_SF_(*((_QWORD *)v7 + 7), 0x3Cu, (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids);
      }
      v8 |= 0x10000u;
    }
    if ( (v8 & 0x80000) == 0 )
      Zone_UnlockAfterWriteEx(a1, 1, (__int64)"ds\\dns\\server\\server\\update.c", 45);
    if ( (v8 & 0x10000) == 0 )
      Xfr_SendNotify(a1, a2, a3, a4);
    if ( (v8 & 0x100000) != 0 )
      initiateDsPeerUpdate(a2);
    Up_FreeUpdatesInUpdateList(a2);
  }
  else
  {
    if ( v7 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)v7 + 17) & 0x80000) != 0
      && *((_BYTE *)v7 + 65) >= 4u )
    {
      WPP_SF_(*((_QWORD *)v7 + 7), 0x3Bu, (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids);
    }
    Up_FreeUpdatesInUpdateList(a2);
    if ( (v8 & 0x80000) == 0 )
      Zone_UnlockAfterWriteEx(a1, 1, (__int64)"ds\\dns\\server\\server\\update.c", 129);
  }
}
// 1400B7D24: variable 'v10' is possibly undefined
// 1400B7E93: variable 'v14' is possibly undefined
// 1400B7E93: variable 'v15' is possibly undefined
// 1400B7EC0: variable 'a2' is possibly undefined
// 1400B7EC0: variable 'a3' is possibly undefined
// 1400B7EC0: variable 'a4' is possibly undefined
// 1401B9A40: using guessed type int g_fDnsServiceExit;
// 1400B7B38: using guessed type unsigned __int16 var_58[22];
