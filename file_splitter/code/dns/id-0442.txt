//----- (0000000140037948) ----------------------------------------------------
_DWORD *__fastcall Ds_WriteRecordToBuffer(__int64 a1, __int64 a2, __int64 a3, int a4)
{
  int v7; // ebp
  _DWORD *result; // rax
  _DWORD *v9; // rcx
  char v10; // al
  int v11; // eax

  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
  {
    WPP_SF_qqq(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x12u,
      (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
      a2,
      *(_QWORD *)(a1 + 24),
      *(_QWORD *)(a1 + 32));
  }
  v7 = (unsigned __int16)(*(_WORD *)(a2 + 14) + (a4 != 0 ? 4 : 0));
  result = (_DWORD *)Ds_ReserveBervalInModBuffer((_QWORD *)a1, v7 + 24);
  v9 = result;
  if ( result )
  {
    if ( a4 )
    {
      *result = a4;
      v9 = result + 1;
    }
    *(_WORD *)v9 = *(_WORD *)(a2 + 14);
    *((_WORD *)v9 + 1) = *(_WORD *)(a2 + 12);
    *((_BYTE *)v9 + 4) = 5;
    v10 = *(_BYTE *)(a2 + 8);
    *((_WORD *)v9 + 3) = 0;
    *((_BYTE *)v9 + 5) = v10;
    v9[2] = *(_DWORD *)(a1 + 20);
    v11 = *(_DWORD *)(a2 + 20);
    v9[4] = 0;
    v9[3] = v11;
    v9[5] = *(_DWORD *)(a2 + 24);
    memcpy_0(v9 + 6, (const void *)(a2 + 56), *(unsigned __int16 *)(a2 + 14));
    return (_DWORD *)Ds_CommitBervalToMod(a1, v7 + 24);
  }
  else if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
         && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
         && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    return (_DWORD *)WPP_SF_(
                       *((_QWORD *)WPP_GLOBAL_Control + 7),
                       0x13u,
                       (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids);
  }
  return result;
}
