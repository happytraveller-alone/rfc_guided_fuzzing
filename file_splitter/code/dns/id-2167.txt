//----- (00000001401123D8) ----------------------------------------------------
__int64 __fastcall Get_NextElement_ScopeMap(__int64 a1, __int64 a2, _DWORD *a3)
{
  __int64 v3; // rbx
  __int64 *v6; // rax
  __int64 v7; // rcx
  __int64 i; // rcx
  __int64 *v10; // [rsp+30h] [rbp+8h] BYREF
  __int64 v11; // [rsp+38h] [rbp+10h] BYREF

  v11 = a2;
  v3 = 0i64;
  if ( a3 )
    *a3 = 0;
  if ( a2 )
  {
    v6 = *std::_Tree<std::_Tmap_traits<unsigned short *,_DnsServerScopeInfo_ *,bool (*)(unsigned short *,unsigned short *),std::allocator<std::pair<unsigned short * const,_DnsServerScopeInfo_ *>>,0>>::find(
            a1,
            &v10,
            &v11);
    if ( v6 == *(__int64 **)(a1 + 8) )
    {
      if ( a3 )
        *a3 = 9952;
    }
    else if ( !*((_BYTE *)v6 + 41) )
    {
      v7 = v6[2];
      if ( *(_BYTE *)(v7 + 41) )
      {
        for ( i = v6[1]; !*(_BYTE *)(i + 41) && v6 == *(__int64 **)(i + 16); i = *(_QWORD *)(i + 8) )
          v6 = (__int64 *)i;
        v6 = (__int64 *)i;
      }
      else
      {
        do
        {
          v6 = (__int64 *)v7;
          v7 = *(_QWORD *)v7;
        }
        while ( !*(_BYTE *)(v7 + 41) );
      }
    }
  }
  else
  {
    v6 = **(__int64 ***)(a1 + 8);
  }
  if ( v6 != *(__int64 **)(a1 + 8) )
    return v6[4];
  return v3;
}
