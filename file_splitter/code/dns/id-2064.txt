//----- (0000000140102544) ----------------------------------------------------
__int64 __fastcall performZoneSigning(__int64 a1, int a2, int a3)
{
  __int64 v3; // rbx
  char v5; // r12
  CDnsClientSubnetRecordsTrie *v8; // rcx
  __int64 v9; // rax
  unsigned int v10; // esi
  __int64 v11; // rdx
  __int64 v12; // rcx
  __int64 v13; // rdx
  unsigned int v14; // eax
  int v15; // r14d
  int v16; // esi
  unsigned __int16 *v17; // rax
  __int64 v18; // rdx
  __int128 v19; // xmm0
  unsigned int v20; // eax
  unsigned int v21; // eax
  int v22; // edx
  const char *v23; // r9
  __int128 v25; // [rsp+50h] [rbp-10h] BYREF
  unsigned __int16 *v26; // [rsp+90h] [rbp+30h] BYREF

  v3 = 0i64;
  v5 = 0;
  v8 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    if ( a1 )
      v9 = *(_QWORD *)(a1 + 16);
    else
      v9 = 0i64;
    WPP_SF_Ds(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x6Cu,
      (__int64)&WPP_fcf90f505e41335ad1a88e0d5ede2d0c_Traceguids,
      a2,
      v9);
    v8 = WPP_GLOBAL_Control;
  }
  if ( a1 )
  {
    if ( (a3 & 0x10000000) != 0 )
    {
      v10 = RpcUtil_SwitchSecurityContext(0);
      if ( v10 )
      {
LABEL_76:
        v8 = WPP_GLOBAL_Control;
        goto LABEL_77;
      }
      v5 = 1;
    }
    v10 = Zone_LockForWriteEx(a1, 1, 0x2710u, (__int64)"ds\\dns\\server\\server\\olsrpc.cpp", 143);
    if ( v10 )
    {
LABEL_74:
      if ( v5 )
        RpcUtil_SwitchSecurityContext(1);
      goto LABEL_76;
    }
    if ( *(_DWORD *)(a1 + 372) != 1 )
      goto LABEL_15;
    v12 = a1;
    if ( *(_QWORD *)(a1 + 192) && *(_QWORD *)(a1 + 328) )
      v12 = *(_QWORD *)(a1 + 328);
    DnsOls_ResetZoneKeymasterFlagForZone(v12, v11, 1, 0, 0i64, 0i64, 0i64, 0i64, 0i64);
    v14 = *(_DWORD *)(a1 + 1040);
    if ( ((v14 >> 1) & 1) == 0 && !*(_QWORD *)(a1 + 192) )
    {
      v10 = 9101;
      goto LABEL_73;
    }
    if ( !g_fEnableOnlineSigning && (*(_BYTE *)(a1 + 388) & 1) != 0 )
    {
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
      {
        WPP_SF_s(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0x6Du,
          (__int64)&WPP_fcf90f505e41335ad1a88e0d5ede2d0c_Traceguids,
          *(const char **)(a1 + 16));
      }
      v10 = 9002;
      goto LABEL_73;
    }
    if ( a2 )
    {
      if ( (a2 == 2 || a2 == 1) && (*(_DWORD *)(a1 + 372) != 1 || (v14 & 4) == 0) )
      {
LABEL_15:
        v10 = 9611;
LABEL_73:
        Zone_UnlockAfterWriteEx(a1, 1, (__int64)"ds\\dns\\server\\server\\olsrpc.cpp", 146);
        goto LABEL_74;
      }
    }
    else if ( *(_DWORD *)(a1 + 372) == 1 && (v14 & 4) != 0 )
    {
      v10 = 9102;
      goto LABEL_73;
    }
    v15 = 1;
    v16 = 0;
    if ( a2 )
    {
      if ( a2 != 2 )
      {
        v16 = 0x4000;
        v15 = 0;
        goto LABEL_45;
      }
    }
    else
    {
      v16 = 64;
    }
    if ( !*(_QWORD *)(a1 + 192) )
    {
      v16 |= 3u;
      if ( ((*(_DWORD *)(a1 + 1040) >> 1) & 1) != 0 )
        v16 |= 0x11Cu;
    }
LABEL_45:
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_Ds(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x6Eu,
        (__int64)&WPP_fcf90f505e41335ad1a88e0d5ede2d0c_Traceguids,
        v16,
        *(_QWORD *)(a1 + 16));
    }
    if ( v15 )
    {
      v17 = *(unsigned __int16 **)(a1 + 24);
      v25 = DNS_EVENT_DNSSEC_SIGNING_STARTED;
      v26 = v17;
      Eventlog_LogEvent((__int64)&v25, v13, 1u, &v26, (unsigned __int8 *)1, 0, 0, 0i64);
    }
    v10 = DnsOls_CompleteZoneSign((struct _zone_info *)a1, v16);
    if ( !v10 )
    {
      v26 = *(unsigned __int16 **)(a1 + 24);
      if ( v15 )
        v19 = DNS_EVENT_DNSSEC_ZONE_IS_SIGNED;
      else
        v19 = DNS_EVENT_DNSSEC_ZONE_IS_UNSIGNED;
      v25 = v19;
      Eventlog_LogEvent((__int64)&v25, v18, 1u, &v26, (unsigned __int8 *)1, 0, 0, 0i64);
      if ( (*(_BYTE *)(a1 + 388) & 1) != 0 )
      {
        v20 = (*(_DWORD *)(a1 + 1040) >> 2) & 1;
        LODWORD(v25) = 0x80000;
        *((_QWORD *)&v25 + 1) = v20;
        if ( *(_QWORD *)(a1 + 192) )
          goto LABEL_73;
        v21 = Ds_ZoneWriteProperty(0, a1, (CHAR *)"IsSigned", (int *)&v25, 0);
      }
      else
      {
        if ( *(_QWORD *)(a1 + 192) )
          goto LABEL_73;
        LODWORD(v26) = (*(_DWORD *)(a1 + 1040) >> 2) & 1;
        v21 = Reg_SetValue(0, 0i64, a1, "IsSigned", 4u, (BYTE *)&v26, 4u);
      }
      v10 = v21;
      if ( *(_QWORD *)(a1 + 192) )
        goto LABEL_73;
      SetEvent(g_hOlsKeyRolloverEvent);
    }
    if ( !*(_QWORD *)(a1 + 192) )
    {
      v22 = (*(_DWORD *)(a1 + 1040) >> 3) & 1;
      if ( v22 != ((*(_DWORD *)(a1 + 1040) >> 2) & 1) )
      {
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
        {
          v23 = "unsigned";
          if ( v22 )
            v23 = "signed";
          WPP_SF_ss(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            0x6Fu,
            (__int64)&WPP_fcf90f505e41335ad1a88e0d5ede2d0c_Traceguids,
            v23,
            *(_QWORD *)(a1 + 16));
        }
        *(_DWORD *)(a1 + 1040) ^= ((unsigned __int8)*(_DWORD *)(a1 + 1040) ^ (unsigned __int8)(2 * *(_DWORD *)(a1 + 1040))) & 8;
      }
      if ( !v10 )
      {
        DnsOls_ClearZoneResignSchedule(a1);
        DnsOls_SetZoneSigRefreshTime(a1, 1);
      }
    }
    goto LABEL_73;
  }
  v10 = 87;
LABEL_77:
  if ( v8 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)v8 + 68) & 4) != 0
    && *((_BYTE *)v8 + 65) >= 4u )
  {
    if ( a1 )
      v3 = *(_QWORD *)(a1 + 16);
    WPP_SF_Dds(*((_QWORD *)v8 + 7), 0x70u, (__int64)&WPP_fcf90f505e41335ad1a88e0d5ede2d0c_Traceguids, v10, a2, v3);
  }
  return v10;
}
// 140102665: variable 'v11' is possibly undefined
// 1401027C0: variable 'v13' is possibly undefined
// 140102818: variable 'v18' is possibly undefined
// 140186738: using guessed type __int128 DNS_EVENT_DNSSEC_SIGNING_STARTED;
// 140187320: using guessed type __int128 DNS_EVENT_DNSSEC_ZONE_IS_UNSIGNED;
// 1401878F8: using guessed type __int128 DNS_EVENT_DNSSEC_ZONE_IS_SIGNED;
// 1401B917C: using guessed type int g_fEnableOnlineSigning;
