//----- (0000000140045C6C) ----------------------------------------------------
__int64 __fastcall Ds_WriteZoneProperties(LDAP *a1, __int64 a2)
{
  unsigned int v2; // ebx
  LDAP *v3; // r14
  CDnsClientSubnetRecordsTrie *v5; // rcx
  unsigned __int16 v6; // dx
  const unsigned __int16 *v8; // r9
  unsigned int inited; // esi
  _DWORD *v10; // r8
  unsigned int v11; // r9d
  _DWORD *v12; // r8
  unsigned int v13; // r9d
  _DWORD *v14; // r8
  int v15[4]; // [rsp+30h] [rbp-D0h] BYREF
  __int64 v16[2048]; // [rsp+40h] [rbp-C0h] BYREF

  v2 = 0;
  v3 = a1;
  if ( !a1 )
    v3 = pServerLdap;
  v5 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_s(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x18Cu,
      (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
      *(const char **)(a2 + 16));
    v5 = WPP_GLOBAL_Control;
  }
  if ( (*(_BYTE *)(a2 + 388) & 1) == 0 )
  {
    if ( v5 == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      || (*((_DWORD *)v5 + 17) & 0x400) == 0
      || *((_BYTE *)v5 + 65) < 4u )
    {
      return 0i64;
    }
    v6 = 397;
LABEL_12:
    WPP_SF_s(
      *((_QWORD *)v5 + 7),
      v6,
      (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
      *(const char **)(a2 + 16));
    return 0i64;
  }
  v8 = *(const unsigned __int16 **)(a2 + 192);
  if ( v8 )
  {
    if ( v5 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)v5 + 17) & 0x400) != 0
      && *((_BYTE *)v5 + 65) >= 4u )
    {
      WPP_SF_S(*((_QWORD *)v5 + 7), 0x18Eu, (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids, v8);
    }
    return 0i64;
  }
  if ( !*(_QWORD *)(a2 + 840) )
  {
    if ( v5 == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      || (*((_DWORD *)v5 + 17) & 0x400) == 0
      || *((_BYTE *)v5 + 65) < 4u )
    {
      return 0i64;
    }
    v6 = 399;
    goto LABEL_12;
  }
  inited = Ds_InitModBuffer(v16, 0x4000u, 2, 30, 0);
  if ( !inited )
  {
    writeDsPropertyStruct(v16, 1, (const void *)(a2 + 372), 4u);
    v15[0] = *(_BYTE *)(a2 + 392) & 3;
    writeDsPropertyStruct(v16, 2, v15, 1u);
    writeDsPropertyStruct(v16, 8, (const void *)(a2 + 1016), 8u);
    v15[0] = *(_DWORD *)(a2 + 396) & 1;
    writeDsPropertyStruct(v16, 64, v15, 4u);
    writeDsPropertyStruct(v16, 16, (const void *)(a2 + 992), 4u);
    writeDsPropertyStruct(v16, 32, (const void *)(a2 + 996), 4u);
    v10 = *(_DWORD **)(a2 + 1008);
    if ( v10 )
      v11 = (v10[1] << 6) + 32;
    else
      v11 = 0;
    writeDsPropertyStruct(v16, 144, v10, v11);
    writeDnsAddrArrayDsPropertyStruct(v16, 17, *(_DWORD **)(a2 + 1008), 0);
    v12 = *(_DWORD **)(a2 + 1032);
    if ( v12 )
      v13 = (v12[1] << 6) + 32;
    else
      v13 = 0;
    writeDsPropertyStruct(v16, 146, v12, v13);
    writeDnsAddrArrayDsPropertyStruct(v16, 130, *(_DWORD **)(a2 + 1032), 0);
    if ( *(_DWORD *)(a2 + 376) )
      writeDsPropertyStruct(v16, 131, (const void *)(a2 + 376), 4u);
    if ( (unsigned int)(*(_DWORD *)(a2 + 372) - 2) <= 2 )
    {
      v14 = *(_DWORD **)(a2 + 1168);
      if ( v14 )
        v2 = (v14[1] << 6) + 32;
      writeDsPropertyStruct(v16, 145, v14, v2);
      writeDnsAddrArrayDsPropertyStruct(v16, 129, *(_DWORD **)(a2 + 1168), 0);
    }
    writeDsPropertyStruct(v16, 18, (const void *)(a2 + 1000), 4u);
    inited = writePropertyToDsNode(v3, *(_QWORD *)(a2 + 840), (__int64)v16);
  }
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_Ds(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x190u,
      (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
      inited,
      *(_QWORD *)(a2 + 16));
  }
  return inited;
}
// 140045C6C: using guessed type _QWORD var_4040[2048];
