//----- (00000001400628F4) ----------------------------------------------------
unsigned __int8 *__fastcall Name_PacketNameToCountNameEx(
        _BYTE *a1,
        __int64 a2,
        unsigned __int8 *a3,
        unsigned __int64 a4)
{
  unsigned __int8 *v5; // r10
  unsigned __int8 *v6; // r12
  unsigned __int8 *v7; // r11
  char v8; // bl
  unsigned __int8 v12; // dl
  unsigned __int8 *i; // rsi
  unsigned __int8 *v14; // rax
  unsigned __int8 v15; // cl
  unsigned __int8 *v16; // rcx
  unsigned __int16 v17; // r8
  CDnsClientSubnetRecordsTrie *v18; // rax
  char *v19; // rax
  CDnsClientSubnetRecordsTrie *v20; // rax
  char *v21; // rax
  __int128 v22; // xmm0
  CDnsClientSubnetRecordsTrie *v23; // rcx
  char *v24; // rax
  char *v25; // rax
  char *v27; // rax
  __int128 v28; // [rsp+40h] [rbp-28h] BYREF

  v5 = a1 + 2;
  v6 = 0i64;
  v7 = a1 + 257;
  v8 = 0;
  if ( (unsigned __int64)a3 >= a4 )
    return 0i64;
  v12 = *a3;
  for ( i = a3 + 1; ; ++i )
  {
    if ( !v12 )
    {
      if ( v5 + 1 <= v7 )
      {
        *v5 = 0;
        a1[1] = v8;
        *a1 = (_BYTE)v5 - (_BYTE)a1 - 1;
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x40000) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
        {
          v25 = Dbg_PacketName(a1 + 2, 0i64, 0i64);
          WPP_SF_s(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            0x12u,
            (__int64)&WPP_7966accab5e33f0669cbfec5669d513c_Traceguids,
            v25);
        }
        if ( v6 )
          return v6;
        return i;
      }
LABEL_52:
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x40000) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
      {
        v27 = Dbg_PacketName(a3, a2 + 6304, a4);
        WPP_SF_s(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0x13u,
          (__int64)&WPP_7966accab5e33f0669cbfec5669d513c_Traceguids,
          v27);
      }
      v22 = DNS_EVENT_PACKET_NAME_TOO_LONG;
LABEL_57:
      v28 = v22;
      if ( a2 )
        EventLog_BadPacket(&v28, a2);
      return 0i64;
    }
    if ( (v12 & 0xC0) == 0 )
      break;
    if ( (v12 & 0xC0) != 0xC0 )
    {
      v23 = WPP_GLOBAL_Control;
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control )
      {
        if ( (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x40000) != 0 && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
        {
          WPP_SF_Dq(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            0x10u,
            (__int64)&WPP_7966accab5e33f0669cbfec5669d513c_Traceguids,
            v12);
          v23 = WPP_GLOBAL_Control;
        }
        if ( v23 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)v23 + 17) & 0x40000) != 0
          && *((_BYTE *)v23 + 65) >= 2u )
        {
          v24 = Dbg_PacketName(a3, a2 + 6304, a4);
          WPP_SF_s(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            0x11u,
            (__int64)&WPP_7966accab5e33f0669cbfec5669d513c_Traceguids,
            v24);
        }
      }
      v22 = DNS_EVENT_PACKET_NAME_BAD_OFFSET;
      goto LABEL_57;
    }
    if ( (unsigned __int64)i >= a4 )
      return 0i64;
    v16 = i - 1;
    v17 = *i | ((v12 ^ 0xC0) << 8);
    i = (unsigned __int8 *)(v17 + a2 + 6304);
    if ( i >= a3 || i >= v16 )
    {
      v20 = WPP_GLOBAL_Control;
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control )
      {
        if ( (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x40000) != 0 && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
        {
          WPP_SF_Dqq(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            0xEu,
            (__int64)&WPP_7966accab5e33f0669cbfec5669d513c_Traceguids,
            v17);
          v20 = WPP_GLOBAL_Control;
        }
        if ( v20 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)v20 + 17) & 0x40000) != 0
          && *((_BYTE *)v20 + 65) >= 2u )
        {
          v21 = Dbg_PacketName(a3, a2 + 6304, a4);
          WPP_SF_s(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            0xFu,
            (__int64)&WPP_7966accab5e33f0669cbfec5669d513c_Traceguids,
            v21);
        }
      }
      v22 = DNS_EVENT_PACKET_NAME_OFFSET_TOO_LONG;
      goto LABEL_57;
    }
    if ( !v6 )
      v6 = v16 + 2;
LABEL_17:
    v12 = *i;
  }
  ++v8;
  if ( &v5[v12 + 1] > v7 )
    goto LABEL_52;
  *v5++ = v12;
  if ( (unsigned __int64)&i[v12] < a4 )
  {
    v14 = v5 + 1;
    while ( 1 )
    {
      v15 = *i;
      --v12;
      ++i;
      if ( v14 > v7 )
        goto LABEL_52;
      *v5 = v15;
      ++v14;
      ++v5;
      if ( !v12 )
        goto LABEL_17;
    }
  }
  v18 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control )
  {
    if ( (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x40000) != 0 && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
    {
      WPP_SF_qqqq(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0xCu,
        (__int64)&WPP_7966accab5e33f0669cbfec5669d513c_Traceguids,
        a3,
        a2,
        i,
        a4);
      v18 = WPP_GLOBAL_Control;
    }
    if ( v18 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)v18 + 17) & 0x40000) != 0
      && *((_BYTE *)v18 + 65) >= 2u )
    {
      v19 = Dbg_PacketName(a3, a2 + 6304, a4);
      WPP_SF_s(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0xDu,
        (__int64)&WPP_7966accab5e33f0669cbfec5669d513c_Traceguids,
        v19);
    }
  }
  return 0i64;
}
// 140062975: conditional instruction was optimized away because dl.1!=0
// 140186468: using guessed type __int128 DNS_EVENT_PACKET_NAME_OFFSET_TOO_LONG;
// 140187578: using guessed type __int128 DNS_EVENT_PACKET_NAME_TOO_LONG;
// 140187838: using guessed type __int128 DNS_EVENT_PACKET_NAME_BAD_OFFSET;
