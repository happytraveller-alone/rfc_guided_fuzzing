//----- (00000001400AFFA0) ----------------------------------------------------
void Timeout_CleanupDelayedFreeList()
{
  __int64 v0; // rax
  _QWORD *v1; // rdi
  int v2; // esi
  __int64 v3; // rdx
  __int64 v4; // r8
  _QWORD *v5; // rbx
  __int64 v6; // rcx
  __int64 v7; // [rsp+20h] [rbp-48h]
  __int64 v8; // [rsp+30h] [rbp-38h]

  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x100) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
  {
    HIDWORD(v7) = HIDWORD(CurrentDelayedFreeList);
    WPP_SF_Dqq(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x23u,
      (__int64)&WPP_fcef9ab22f0836151509c33d06164dff_Traceguids,
      dword_1401B9714);
  }
  EnterCriticalSection(&csTimeoutLock);
  v0 = CurrentDelayedFreeList;
  v1 = (_QWORD *)CoolingDelayedFreeList;
  v2 = CoolingDelayedCount;
  CurrentDelayedFreeList = 0i64;
  CoolingDelayedFreeList = v0;
  LODWORD(v0) = CurrentDelayedCount;
  CurrentDelayedCount = 0;
  CoolingDelayedCount = v0;
  LeaveCriticalSection(&csTimeoutLock);
  while ( v1 && g_fDnsServiceExit != 1 )
  {
    v5 = v1;
    v1 = (_QWORD *)*v1;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x100) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
    {
      WPP_SF_dqqqqDds(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        v3,
        v4,
        v2,
        (char)v5,
        *v5,
        v5[1],
        v5[2],
        *((_DWORD *)v5 + 8),
        *((_DWORD *)v5 + 9),
        v5[3]);
    }
    _InterlockedIncrement(&dword_1401C8460);
    v6 = v5[1];
    if ( dword_1401B99C0 )
    {
      if ( !(unsigned int)Mem_VerifyHeapBlock(v6, 0, 0) )
        Dbg_HardAssert("ds\\dns\\server\\server\\timeout.c", 0x217u, "Mem_VerifyHeapBlock( pTimeoutFree->pItem, 0, 0 )");
LABEL_14:
      if ( v5[2] )
      {
        _InterlockedIncrement(&dword_1401C8464);
        ((void (__fastcall *)(_QWORD))v5[2])(v5[1]);
      }
      else
      {
        Mem_Free((_QWORD *)v5[1], 0i64, 0i64, (__int64)"ds\\dns\\server\\server\\timeout.c", 571);
      }
      goto LABEL_22;
    }
    if ( (unsigned int)Mem_VerifyHeapBlock(v6, 0, 0) )
      goto LABEL_14;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x100) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      LODWORD(v8) = *((_DWORD *)v5 + 9);
      LODWORD(v7) = *((_DWORD *)v5 + 8);
      WPP_SF_qdsd(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0xDu,
        (__int64)&WPP_fcef9ab22f0836151509c33d06164dff_Traceguids,
        v5[1],
        v7,
        v5[3],
        v8);
    }
LABEL_22:
    Mem_Free(v5, 40i64, 7i64, (__int64)"ds\\dns\\server\\server\\timeout.c", 578);
    --v2;
  }
}
// 1400B00C9: variable 'v3' is possibly undefined
// 1400B00C9: variable 'v4' is possibly undefined
// 1400B0172: variable 'v7' is possibly undefined
// 1400B0172: variable 'v8' is possibly undefined
// 140185140: using guessed type __int64 (__fastcall *_guard_dispatch_icall_fptr)(_QWORD, _QWORD);
// 1401B9714: using guessed type int dword_1401B9714;
// 1401B99C0: using guessed type int dword_1401B99C0;
// 1401B9A40: using guessed type int g_fDnsServiceExit;
// 1401BB510: using guessed type __int64 CurrentDelayedFreeList;
// 1401BB518: using guessed type __int64 CoolingDelayedFreeList;
// 1401BB520: using guessed type int CurrentDelayedCount;
// 1401BB524: using guessed type int CoolingDelayedCount;
// 1401C8460: using guessed type int dword_1401C8460;
// 1401C8464: using guessed type int dword_1401C8464;
