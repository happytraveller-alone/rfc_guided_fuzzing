//----- (00000001400397DC) ----------------------------------------------------
__int64 __fastcall addDnsToDirectory(LDAP *ld, int a2)
{
  unsigned int v4; // edi
  char *BaseDnsDn; // rax
  unsigned __int16 *v6; // rbx
  __int64 v7; // rax
  unsigned int v8; // eax
  int v9; // eax
  PSID v10; // r8
  int v11; // eax
  __int64 v12; // r8
  unsigned int v14; // [rsp+28h] [rbp-A1h]
  int v15; // [rsp+40h] [rbp-89h] BYREF
  const WCHAR *v16; // [rsp+48h] [rbp-81h]
  __int64 *v17; // [rsp+50h] [rbp-79h]
  __int64 v18[3]; // [rsp+78h] [rbp-51h] BYREF
  int v19; // [rsp+90h] [rbp-39h] BYREF
  const wchar_t *v20; // [rsp+98h] [rbp-31h]
  __int64 *v21; // [rsp+A0h] [rbp-29h]
  __int64 v22[3]; // [rsp+C8h] [rbp-1h] BYREF
  LDAPModW *attrs[3]; // [rsp+E0h] [rbp+17h] BYREF

  v4 = 0;
  BaseDnsDn = Ds_GenerateBaseDnsDn(1);
  v6 = (unsigned __int16 *)BaseDnsDn;
  if ( !BaseDnsDn )
  {
    v4 = 14;
    goto LABEL_31;
  }
  g_pwszDnsContainerDN = (PWSTR)BaseDnsDn;
  v7 = -1i64;
  do
    ++v7;
  while ( v6[v7] );
  g_AppendZoneLength = 2 * v7 + 50;
  if ( dword_1401B9750 || g_fDsReadOnlyDcMode )
    goto LABEL_31;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_S(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x43u, (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids, v6);
  }
  attrs[0] = (LDAPModW *)&v15;
  attrs[2] = 0i64;
  attrs[1] = (LDAPModW *)&v19;
  v18[1] = 0i64;
  v17 = v18;
  v15 = 0;
  v16 = L"objectClass";
  v22[1] = 0i64;
  v18[0] = (__int64)L"container";
  v21 = v22;
  v20 = L"cn";
  v22[0] = (__int64)L"MicrosoftDNS";
  v19 = 0;
  v8 = Dns_LdapAddExt(ld, v6, attrs, 0i64, 0i64, v14, 0);
  v4 = v8;
  if ( !v8 )
  {
    g_bDsFirstTimeRun = 1;
LABEL_15:
    v9 = Ds_AddPrincipalAccess(ld, v6, 0i64, L"DnsAdmins", 0xF017Fu, 2u, 0, 1);
    if ( v9
      && WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_D(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x44u,
        (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
        v9);
    }
    v10 = g_pEnterpriseDomainControllersSid;
    if ( g_pEnterpriseDomainControllersSid )
    {
      v11 = Ds_AddPrincipalAccess(ld, v6, g_pEnterpriseDomainControllersSid, 0i64, 0xF017Fu, 2u, 1, 0);
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        WPP_SF_DS(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0x45u,
          (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
          v11,
          (__int64)v6);
      }
    }
    Ds_RemovePrincipalAccess(ld, v6, (__int64)v10, g_pAuthenticatedUserSid);
    Ds_RemovePrincipalAccess(ld, v6, v12, (void *)g_pBuiltInAdminsSid);
    goto LABEL_26;
  }
  if ( v8 != 68 )
  {
LABEL_31:
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_DS(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x47u,
        (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
        v4,
        (__int64)g_pwszDnsContainerDN);
    }
    return v4;
  }
  if ( a2 )
    goto LABEL_15;
LABEL_26:
  addObjectValueIfMissing(ld, v6);
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_SD(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x46u,
      (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
      g_pwszDnsContainerDN);
  }
  return 0i64;
}
// 140039920: variable 'v14' is possibly undefined
// 140039A37: variable 'v10' is possibly undefined
// 140039A49: variable 'v12' is possibly undefined
// 14018B618: using guessed type wchar_t aContainer[10];
// 14018BF90: using guessed type wchar_t aCn_0[3];
// 1401B8C94: using guessed type int g_fDsReadOnlyDcMode;
// 1401B8D40: using guessed type int g_bDsFirstTimeRun;
// 1401B9750: using guessed type int dword_1401B9750;
// 1401C94A8: using guessed type __int64 g_pBuiltInAdminsSid;
// 1401EC320: using guessed type int g_AppendZoneLength;
