//----- (0000000140162850) ----------------------------------------------------
int __fastcall DsRecordPrint(void (*a1)(__int64, const char *, ...), __int64 a2, __int64 a3)
{
  int v6; // ebx
  __int64 StringForValue; // rax
  int v8; // r11d
  __int64 v9; // r10
  int v10; // ebx
  const char *v11; // rax
  int v12; // r11d
  __int64 v13; // r10
  __int64 v15; // [rsp+20h] [rbp-28h]
  int v16; // [rsp+20h] [rbp-28h]
  __int64 v17; // [rsp+30h] [rbp-18h]
  int v18; // [rsp+30h] [rbp-18h]

  if ( a1 )
  {
    v6 = *(unsigned __int8 *)(a3 + 34);
    Dns_GetStringForValue((__int64)&DnssecDigestTypeTable, *(unsigned __int8 *)(a3 + 35));
    StringForValue = Dns_GetStringForValue((__int64)&DnssecAlgorithmTable, v6);
    v18 = v8;
    v16 = v6;
    a1(
      a2,
      "\tKey Tag              = %d \r\n\tAlgorithm            = %s (%d)\r\n\tDigest Type          = %s (%d)\r\n",
      *(unsigned __int16 *)(a3 + 32),
      StringForValue,
      v16,
      v9,
      v18);
  }
  if ( (byte_1401BA001 & 4) != 0 )
  {
    v10 = *(unsigned __int8 *)(a3 + 34);
    Dns_GetStringForValue((__int64)&DnssecDigestTypeTable, *(unsigned __int8 *)(a3 + 35));
    v11 = (const char *)Dns_GetStringForValue((__int64)&DnssecAlgorithmTable, v10);
    LODWORD(v17) = v12;
    LODWORD(v15) = v10;
    WPP_SF_dsdsd(
      0x22u,
      (__int64)&WPP_cb270f16dde935b5e1552b160c3fa946_Traceguids,
      *(unsigned __int16 *)(a3 + 32),
      v11,
      v15,
      v13,
      v17);
  }
  return DnsPrint_RawBinary(a1, a2, (__int64)"\tDigest:", "\t\t  ", a3 + 40, *(unsigned __int16 *)(a3 + 36), 0);
}
// 1401628A8: variable 'v8' is possibly undefined
// 1401628BF: variable 'v9' is possibly undefined
// 140162903: variable 'v12' is possibly undefined
// 140162919: variable 'v15' is possibly undefined
// 140162919: variable 'v13' is possibly undefined
// 140162919: variable 'v17' is possibly undefined
// 140185140: using guessed type __int64 (__fastcall *_guard_dispatch_icall_fptr)(_QWORD, _QWORD);
// 1401BA001: using guessed type char byte_1401BA001;
