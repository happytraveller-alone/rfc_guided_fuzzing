//----- (0000000140118AC0) ----------------------------------------------------
ULONG WPP_SF_sddsd(TRACEHANDLE LoggerHandle, USHORT a2, const GUID *a3, const char *a4, ...)
{
  __int64 v4; // r10
  __int64 v7; // r9
  __int64 v8; // r9
  __int64 v9; // r10
  const char *v10; // rcx
  const char *v11; // rax
  __int64 v13; // [rsp+B0h] [rbp+28h] BYREF
  va_list va; // [rsp+B0h] [rbp+28h]
  __int64 v15; // [rsp+B8h] [rbp+30h] BYREF
  va_list va1; // [rsp+B8h] [rbp+30h]
  __int64 v17; // [rsp+C0h] [rbp+38h]
  va_list va2; // [rsp+C8h] [rbp+40h] BYREF

  va_start(va2, a4);
  va_start(va1, a4);
  va_start(va, a4);
  v13 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v15 = va_arg(va2, _QWORD);
  v17 = va_arg(va2, _QWORD);
  v4 = -1i64;
  if ( v17 )
  {
    v7 = -1i64;
    do
      ++v7;
    while ( *(_BYTE *)(v17 + v7) );
    v8 = v7 + 1;
  }
  else
  {
    v8 = 5i64;
  }
  if ( a4 )
  {
    do
      ++v4;
    while ( a4[v4] );
    v9 = v4 + 1;
  }
  else
  {
    v9 = 5i64;
  }
  v10 = "NULL";
  v11 = "NULL";
  if ( v17 )
    v11 = (const char *)v17;
  if ( a4 )
    v10 = a4;
  return TraceMessage(LoggerHandle, 0x2Bu, a3, a2, v10, v9, va, 4i64, va1, 4i64, v11, v8, va2, 4i64, 0i64);
}
