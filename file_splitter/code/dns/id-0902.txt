//----- (000000014007B9FC) ----------------------------------------------------
__int64 __fastcall Remote_ChooseSendIp(__int64 a1, __int64 a2)
{
  unsigned int *v2; // r14
  __int64 v4; // rbp
  int v5; // edi
  unsigned int v6; // r15d
  __int64 v7; // r12
  unsigned __int64 v8; // rbx
  unsigned int v9; // eax
  int v10; // esi
  ULONGLONG v11; // rdx
  CDnsClientSubnetRecordsTrie *v12; // rcx
  unsigned int v13; // r8d
  unsigned int v14; // r8d
  unsigned int *v15; // rdx
  unsigned __int8 v16; // al
  unsigned __int64 v17; // rcx
  unsigned __int64 v18; // rcx
  unsigned __int64 v19; // rcx
  __int64 v20; // rax
  int v21; // esi
  unsigned int v22; // ebx
  __int64 v23; // rsi
  __int64 NextRecord; // rax
  char *v25; // r14
  __int64 *v26; // rcx
  CDnsClientSubnetRecordsTrie *v27; // rax
  char *v28; // rax
  char *v29; // rax
  unsigned __int16 v30; // ax
  unsigned __int64 v33; // [rsp+A8h] [rbp+10h]
  unsigned __int64 v34; // [rsp+B0h] [rbp+18h]
  ULONGLONG TickCount64; // [rsp+B8h] [rbp+20h]

  v2 = *(unsigned int **)(a1 + 1280);
  v4 = a1;
  v5 = 0;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x8000) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_q(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x2Au, (__int64)&WPP_eab7c483710f366eae903c691df4ee49_Traceguids, a1);
  }
  *(_DWORD *)(a2 + 4) = 0;
  v6 = v2[1];
  v7 = 24i64 * v2[3];
  v34 = (unsigned __int64)&v2[24 * *v2 + 12];
  v8 = (unsigned __int64)&v2[24 * (v6 - 1) + 12];
  v9 = LOBYTE(v2[v7 + 34]);
  v33 = v8;
  if ( v9 >= 2 )
    v10 = 3 - (v9 < 4);
  else
    v10 = 1;
  TickCount64 = GetTickCount64();
  v11 = TickCount64;
  if ( !v10 )
  {
LABEL_83:
    v2[1] = v6;
    ++LOBYTE(v2[v7 + 34]);
    if ( !*(_DWORD *)(a2 + 4) )
      v5 = -1072573692;
    v22 = v5;
    goto LABEL_86;
  }
  v12 = WPP_GLOBAL_Control;
  while ( 1 )
  {
    v8 += 96i64;
    v13 = 2147483639;
    if ( v8 >= v34 )
      goto LABEL_17;
    if ( *(_BYTE *)(v8 + 88) )
    {
      ++v6;
      v33 = v8;
      goto LABEL_32;
    }
    if ( *(_DWORD *)(a2 + 4) )
    {
      v14 = *(_DWORD *)(v8 + 8);
      if ( v14 > 0x64 )
      {
        v13 = v14 >> 2;
        if ( v13 > 0x7FFFFFF7 )
          v13 = 2147483639;
LABEL_17:
        v15 = &v2[v7 + 36];
        if ( (unsigned __int64)v15 <= v33 )
        {
          do
          {
            if ( !*((_BYTE *)v15 + 89) )
            {
              v16 = *((_BYTE *)v15 + 88);
              if ( v16 < 2u && (*((_WORD *)v15 + 12) != 2 || v15[7] != -1) && v15[2] < v13 )
              {
                *((_BYTE *)v15 + 88) = v16 + 1;
                v17 = (unsigned __int64)(unsigned int)(*(_DWORD *)(a2 + 4))++ << 6;
                *(_OWORD *)(v17 + a2 + 32) = *(_OWORD *)(v15 + 6);
                *(_OWORD *)(v17 + a2 + 48) = *(_OWORD *)(v15 + 10);
                *(_OWORD *)(v17 + a2 + 64) = *(_OWORD *)(v15 + 14);
                *(_OWORD *)(v17 + a2 + 80) = *(_OWORD *)(v15 + 18);
                if ( !--v10 )
                  break;
              }
            }
            v15 += 24;
          }
          while ( (unsigned __int64)v15 <= v33 );
          v4 = a1;
          if ( (unsigned __int64)v15 <= v33 )
            goto LABEL_83;
          v12 = WPP_GLOBAL_Control;
        }
        if ( v13 >= 0x7FFFFFF7 || *(_WORD *)(v8 + 24) == 2 && *(_DWORD *)(v8 + 28) == -1 )
        {
          if ( v12 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_DWORD *)v12 + 17) & 0x8000) != 0
            && *((_BYTE *)v12 + 65) >= 4u )
          {
            WPP_SF_(*((_QWORD *)v12 + 7), 0x2Cu, (__int64)&WPP_eab7c483710f366eae903c691df4ee49_Traceguids);
          }
          goto LABEL_83;
        }
        ++*(_BYTE *)(v8 + 88);
        v18 = (unsigned __int64)(unsigned int)(*(_DWORD *)(a2 + 4))++ << 6;
        ++v6;
        *(_OWORD *)(v18 + a2 + 32) = *(_OWORD *)(v8 + 24);
        *(_OWORD *)(v18 + a2 + 48) = *(_OWORD *)(v8 + 40);
        *(_OWORD *)(v18 + a2 + 64) = *(_OWORD *)(v8 + 56);
        *(_OWORD *)(v18 + a2 + 80) = *(_OWORD *)(v8 + 72);
LABEL_31:
        v12 = WPP_GLOBAL_Control;
        --v10;
        goto LABEL_32;
      }
    }
    if ( *(_WORD *)(v8 + 24) != 2 || *(_DWORD *)(v8 + 28) != -1 )
    {
      *(_BYTE *)(v8 + 88) = 1;
      v19 = (unsigned __int64)(unsigned int)(*(_DWORD *)(a2 + 4))++ << 6;
      ++v6;
      *(_OWORD *)(v19 + a2 + 32) = *(_OWORD *)(v8 + 24);
      *(_OWORD *)(v19 + a2 + 48) = *(_OWORD *)(v8 + 40);
      *(_OWORD *)(v19 + a2 + 64) = *(_OWORD *)(v8 + 56);
      *(_OWORD *)(v19 + a2 + 80) = *(_OWORD *)(v8 + 72);
      *(_QWORD *)(v8 + 16) = v11;
      goto LABEL_31;
    }
    if ( (*(_BYTE *)(*(_QWORD *)v8 + 92i64) & 1) == 0 )
      break;
    if ( v12 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)v12 + 17) & 0x4000) != 0
      && *((_BYTE *)v12 + 65) >= 4u )
    {
      WPP_SF_q(*((_QWORD *)v12 + 7), 0x2Bu, (__int64)&WPP_eab7c483710f366eae903c691df4ee49_Traceguids);
      v12 = WPP_GLOBAL_Control;
    }
    ++v6;
LABEL_32:
    if ( !v10 )
      goto LABEL_83;
    v11 = TickCount64;
  }
  if ( *(_QWORD *)(v4 + 56) != 4241280207i64 )
    goto LABEL_56;
  v20 = v4;
  v21 = 0;
  do
  {
    v20 = *(_QWORD *)(v20 + 1264);
    ++v21;
  }
  while ( v20 );
  if ( v12 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)v12 + 17) & 0x8000) != 0
    && *((_BYTE *)v12 + 65) >= 4u )
  {
    WPP_SF_D(*((_QWORD *)v12 + 7), 0x2Du, (__int64)&WPP_eab7c483710f366eae903c691df4ee49_Traceguids, v21);
    v12 = WPP_GLOBAL_Control;
  }
  if ( v21 > 5 )
  {
    if ( v12 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)v12 + 17) & 0x8000) != 0
      && *((_BYTE *)v12 + 65) >= 4u )
    {
      WPP_SF_q(*((_QWORD *)v12 + 7), 0x2Eu, (__int64)&WPP_eab7c483710f366eae903c691df4ee49_Traceguids, v4);
    }
    Recurse_ResumeSuspendedQuery(v4);
    v22 = -1072573693;
  }
  else
  {
LABEL_56:
    v23 = *(_QWORD *)v8;
    *(_BYTE *)(v8 + 88) = 1;
    if ( v23 )
      *(_BYTE *)(v23 + 98) = CurrentTimeoutBin;
    *((_QWORD *)v2 + 5) = v23;
    v2[1] = v6;
    if ( (*(_BYTE *)(v23 + 92) & 1) != 0
      || (NextRecord = RR_FindNextRecordEx(v23, 0, 1u, 0i64, *(_DWORD *)(v4 + 568), 1)) != 0
      && *(char *)(NextRecord + 10) < 0 )
    {
      v22 = -1072573692;
    }
    else
    {
      if ( (qword_1401B9780 & 0x400000) != 0 )
      {
        v25 = 0i64;
        if ( (qword_1401B9780 & 0x100000) != 0 && (unsigned int)Log_EnterLock() )
        {
          v26 = *(__int64 **)(v8 + 8);
          g_pszCurrentLogLevelString = (__int64)"LOOKUP";
          v25 = Log_FormatNodeName(v26);
          Log_Printf("Querying for missing glue for %s\n", v25);
          g_pszCurrentLogLevelString = 0i64;
          Log_LeaveLock();
        }
        Mem_Free(v25, 0i64, 0i64, (__int64)"ds\\dns\\server\\server\\remote.c", 3010);
      }
      v27 = WPP_GLOBAL_Control;
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control )
      {
        if ( (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x8000) != 0 && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
        {
          v28 = Dbg_NodeName(v23);
          WPP_SF_s(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            0x2Fu,
            (__int64)&WPP_eab7c483710f366eae903c691df4ee49_Traceguids,
            v28);
          v27 = WPP_GLOBAL_Control;
        }
        if ( v27 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)v27 + 17) & 0x8000) != 0
          && *((_BYTE *)v27 + 65) >= 4u )
        {
          v29 = Dbg_NodeName(*(_QWORD *)(v8 + 8));
          WPP_SF_s(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            0x30u,
            (__int64)&WPP_eab7c483710f366eae903c691df4ee49_Traceguids,
            v29);
        }
      }
      if ( *(_QWORD *)(v4 + 56) != 4241280207i64 || (v30 = 0, *(_QWORD *)(v4 + 192) != v23) )
        v30 = 0x8000;
      v22 = -1072573692
          - ((unsigned int)Recurse_SendCacheUpdateQuery(
                             v23,
                             0i64,
                             *(_QWORD *)(v8 + 8),
                             0i64,
                             1u,
                             v4,
                             1u,
                             v30,
                             0i64,
                             0i64) != 0);
    }
  }
LABEL_86:
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x8000) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
  {
    WPP_SF_dqd(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x31u,
      (__int64)&WPP_eab7c483710f366eae903c691df4ee49_Traceguids,
      v22);
  }
  return v22;
}
// 1401B8F28: using guessed type __int64 g_pszCurrentLogLevelString;
// 1401B9780: using guessed type __int64 qword_1401B9780;
// 1401BA4B8: using guessed type char CurrentTimeoutBin;
