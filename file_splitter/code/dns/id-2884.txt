//----- (000000014014FD54) ----------------------------------------------------
CDnsRRLStateHashMap *__fastcall CDnsRRLStateHashMap::CDnsRRLStateHashMap(CDnsRRLStateHashMap *this)
{
  _QWORD *v2; // rbx
  char *v3; // rsi
  _QWORD *v4; // rax
  char pExceptionObject[32]; // [rsp+28h] [rbp-20h] BYREF

  *(_QWORD *)this = &CDnsRRLStateHashMap::`vftable';
  v2 = operator new(0x58ui64);
  if ( v2 )
  {
    *(_WORD *)v2 = (_WORD)v2;
    v3 = (char *)(v2 + 1);
    v2[2] = 0i64;
    v4 = operator new(0x20ui64);
    if ( !v4 )
    {
      std::bad_alloc::bad_alloc((std::bad_alloc *)pExceptionObject, 0i64);
      CxxThrowException_0(pExceptionObject, (_ThrowInfo *)&TI2_AVbad_alloc_std__);
    }
    *(_QWORD *)v3 = v4;
    *v4 = v4;
    *(_QWORD *)(*(_QWORD *)v3 + 8i64) = *(_QWORD *)v3;
    v2[4] = 0i64;
    v2[5] = 0i64;
    v2[6] = 0i64;
    *((_DWORD *)v2 + 20) = 1065353216;
    std::_Hash<std::_Hmap_traits<unsigned short,TrustAnchor,stdext::hash_compare<unsigned short,std::less<unsigned short>>,std::allocator<std::pair<unsigned short const,TrustAnchor>>,1>>::_Init(
      v2,
      8i64);
  }
  else
  {
    v2 = 0i64;
  }
  *((_QWORD *)this + 1) = v2;
  return this;
}
// 140172190: using guessed type void *CDnsRRLStateHashMap::`vftable';
