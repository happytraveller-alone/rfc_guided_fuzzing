//----- (00000001400FE788) ----------------------------------------------------
struct _DnsRpcSigningKeyDescriptorStateEx *__fastcall Rpc_AllocateSkdStateEx(struct _zone_info *a1, struct _dnsskd *a2)
{
  char *zero; // rax
  void *v5; // rbx
  void **v6; // rsi
  struct _Dbase_Record *v7; // rdx
  struct _Dbase_Record *v8; // rdx
  void *v9; // rcx

  zero = (char *)MIDL_user_allocate_zero(0x58ui64);
  v5 = zero;
  if ( !zero )
    return (struct _DnsRpcSigningKeyDescriptorStateEx *)v5;
  *(_DWORD *)zero = 1;
  v6 = (void **)(zero + 48);
  *(_OWORD *)(zero + 8) = *(_OWORD *)((char *)a2 + 8);
  *((_DWORD *)zero + 6) = *((_DWORD *)a2 + 25);
  *((_DWORD *)zero + 7) = *((_DWORD *)a2 + 26);
  *((_DWORD *)zero + 8) = *((_DWORD *)a2 + 27);
  *(_QWORD *)(zero + 36) = *(_QWORD *)((char *)a2 + 116);
  v7 = (struct _Dbase_Record *)*((_QWORD *)a2 + 16);
  if ( !v7 )
  {
    *((_DWORD *)zero + 11) = 0;
    *v6 = 0i64;
LABEL_6:
    v8 = (struct _Dbase_Record *)*((_QWORD *)a2 + 17);
    if ( v8 )
    {
      if ( (unsigned int)Rpc_AllocateRR(a1, v8, (unsigned int *)v5 + 14, (unsigned __int8 **)v5 + 8) )
        goto LABEL_8;
    }
    else
    {
      *((_DWORD *)v5 + 14) = 0;
      *((_QWORD *)v5 + 8) = 0i64;
    }
    *((_DWORD *)v5 + 18) = *((_DWORD *)a2 + 40);
    *((_DWORD *)v5 + 19) = *((_DWORD *)a2 + 46);
    *((_DWORD *)v5 + 20) = *((_DWORD *)a2 + 52);
    return (struct _DnsRpcSigningKeyDescriptorStateEx *)v5;
  }
  if ( !(unsigned int)Rpc_AllocateRR(a1, v7, (unsigned int *)zero + 11, (unsigned __int8 **)zero + 6) )
    goto LABEL_6;
LABEL_8:
  if ( *v6 )
    MIDL_user_free(*v6);
  v9 = (void *)*((_QWORD *)v5 + 8);
  if ( v9 )
    MIDL_user_free(v9);
  MIDL_user_free(v5);
  return 0i64;
}
