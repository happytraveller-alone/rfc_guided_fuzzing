//----- (0000000140168A80) ----------------------------------------------------
// write access to const memory has been detected, the output may be wrong!
__int64 sub_140168A80()
{
  int v0; // eax
  int v1; // eax
  bool v2; // zf
  _crt_app_type image_app_type; // eax

  if ( MEMORY[0x140000000] != 23117 || *(_DWORD *)(0x140000000i64 + MEMORY[0x14000003C]) != 17744 )
    goto LABEL_2;
  v1 = *(unsigned __int16 *)(0x140000018i64 + MEMORY[0x14000003C]);
  if ( v1 != 267 )
  {
    if ( v1 == 523 )
    {
      v0 = 0;
      if ( *(_DWORD *)(0x140000084i64 + MEMORY[0x14000003C]) <= 0xEu )
        goto LABEL_11;
      v2 = *(_DWORD *)(0x1400000F8i64 + MEMORY[0x14000003C]) == 0;
      goto LABEL_10;
    }
LABEL_2:
    v0 = 0;
    goto LABEL_11;
  }
  v0 = 0;
  if ( *(_DWORD *)(0x140000074i64 + MEMORY[0x14000003C]) <= 0xEu )
    goto LABEL_11;
  v2 = *(_DWORD *)(0x1400000E8i64 + MEMORY[0x14000003C]) == 0;
LABEL_10:
  LOBYTE(v0) = !v2;
LABEL_11:
  dword_1401B8678 = v0;
  image_app_type = (unsigned int)get_image_app_type(1u);
  __set_app_type(image_app_type);
  _onexitend = -1i64;
  _onexitbegin = -1i64;
  _fmode = fmode;
  _commode = commode;
  CDNSPolicyCriteriaTime::IsCriteriaNegative(*(struct _exception **)&_commode);
  if ( !_defaultmatherr )
    __setusermatherr((_UserMathErrorFunctionPointer)CDNSPolicyCriteriaTime::IsCriteriaNegative);
  return 0i64;
}
// 140168B1C: write access to const memory at 140184B48 has been detected
// 140168B2B: write access to const memory at 140184B50 has been detected
// 1401B7E80: using guessed type int _defaultmatherr;
// 1401B8678: using guessed type int dword_1401B8678;
// 1401B9FD8: using guessed type __int64 _onexitend;
// 1401B9FE0: using guessed type __int64 _onexitbegin;
