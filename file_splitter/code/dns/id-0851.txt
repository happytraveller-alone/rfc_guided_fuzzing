//----- (0000000140075CE0) ----------------------------------------------------
__int64 __fastcall Reg_SetAddrArrayEx(int a1, HKEY a2, __int64 a3, const CHAR *a4, __int64 a5, int a6)
{
  char *RegStringFromAddrArray; // rdi
  unsigned int v11; // ebx
  unsigned int v12; // eax
  int v14[14]; // [rsp+40h] [rbp-38h] BYREF

  RegStringFromAddrArray = 0i64;
  v14[0] = 0;
  if ( !a5 || !*(_DWORD *)(a5 + 4) )
  {
    v12 = Reg_DeleteValue(a1, a2, a3, a4);
LABEL_15:
    v11 = v12;
    goto LABEL_16;
  }
  RegStringFromAddrArray = createRegStringFromAddrArray(a5, a6, v14);
  if ( RegStringFromAddrArray )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_s(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x24u,
        (__int64)&WPP_6ba06e9d807b3b6640892c588bf1aced_Traceguids,
        a4);
    }
    v12 = Reg_SetValue(a1, a2, a3, a4, 7u, (BYTE *)RegStringFromAddrArray, v14[0]);
    goto LABEL_15;
  }
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_q(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x23u, (__int64)&WPP_6ba06e9d807b3b6640892c588bf1aced_Traceguids, a5);
  }
  v11 = 14;
LABEL_16:
  Mem_Free(RegStringFromAddrArray, 0i64, 0i64, (__int64)"ds\\dns\\server\\server\\registry.c", 1685);
  return v11;
}
// 140075CE0: using guessed type DWORD var_38[14];
