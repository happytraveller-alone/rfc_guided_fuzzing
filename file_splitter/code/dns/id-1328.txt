//----- (00000001400A9870) ----------------------------------------------------
__int64 __fastcall Rpc_GetClientSubnetRecord(
        __int64 a1,
        __int64 a2,
        __int64 a3,
        __int64 a4,
        int a5,
        wchar_t *Str,
        _DWORD *a7,
        struct _ClientSubnetRecord **a8)
{
  unsigned int Lock; // ebx
  unsigned __int64 v10; // r8
  __int64 v11; // rcx
  __int64 *v12; // rax
  struct _ClientSubnetRecord *v13; // rcx
  struct _ClientSubnetRecord *v14; // [rsp+20h] [rbp-40h] BYREF
  __int64 v15; // [rsp+28h] [rbp-38h] BYREF
  const void *v16[3]; // [rsp+30h] [rbp-30h] BYREF
  unsigned __int64 v17; // [rsp+48h] [rbp-18h]

  v14 = 0i64;
  if ( !(unsigned int)IsValidFileName(Str) )
    return 9984i64;
  Lock = Policy_AcquireReadLock(&g_hServerLevelPolicyLock, 0x2710u);
  if ( Lock )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
    {
      WPP_SF_D(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x41u,
        (__int64)&WPP_8dcaf0ee02573174dfb45ec0cfad4f2e_Traceguids,
        Lock);
    }
  }
  else
  {
    v17 = 7i64;
    v10 = -1i64;
    v16[2] = 0i64;
    LOWORD(v16[0]) = 0;
    do
      ++v10;
    while ( Str[v10] );
    std::wstring::assign((char *)v16, (char *)Str, v10);
    v12 = std::_Tree<std::_Tmap_traits<std::wstring,CDNSClientSubnetRecord *,CDnsCompareName,std::allocator<std::pair<std::wstring const,CDNSClientSubnetRecord *>>,0>>::find(
            v11,
            &v15,
            v16);
    if ( *v12 == qword_1401B93E8 )
    {
      if ( v17 >= 8 )
        operator delete((void *)v16[0]);
      Lock = 9976;
    }
    else
    {
      Lock = CDNSClientSubnetRecord::GetClientSubnetRecord(*(CDNSClientSubnetRecord **)(*v12 + 64), (void ***)&v14);
      if ( v17 >= 8 )
        operator delete((void *)v16[0]);
      if ( !Lock )
      {
        v13 = v14;
        *a7 = 57;
        *a8 = v13;
      }
    }
    LODWORD(v14) = -1;
    releaseRead(g_hServerLevelPolicyLock, (unsigned int *)&v14, 1);
  }
  return Lock;
}
// 1400A9954: variable 'v11' is possibly undefined
// 140184CA8: using guessed type void __stdcall operator delete(void *);
// 1401B9240: using guessed type __int64 g_hServerLevelPolicyLock;
// 1401B93E8: using guessed type __int64 qword_1401B93E8;
