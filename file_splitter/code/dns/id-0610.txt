//----- (000000014005695C) ----------------------------------------------------
char *writeMessageInfoHeader()
{
  char *result; // rax
  int v1; // r8d

  result = sprintfSafeA(
             lpMultiByteStr,
             (unsigned int)qword_1401B8F90,
             "\r\n"
             "Message logging key (for packets - other items use a subset of these fields):\r\n"
             "\tField #  Information         Values\r\n"
             "\t-------  -----------         ------\r\n"
             "\t   1     Date\r\n"
             "\t   2     Time\r\n"
             "\t   3     Thread ID\r\n"
             "\t   4     Context\r\n"
             "\t   5     Internal packet identifier\r\n"
             "\t   6     UDP/TCP indicator\r\n"
             "\t   7     Send/Receive indicator\r\n"
             "\t   8     Remote IP\r\n"
             "\t   9     Xid (hex)\r\n"
             "\t  10     Query/Response      R = Response\r\n"
             "\t                             blank = Query\r\n"
             "\t  11     Opcode              Q = Standard Query\r\n"
             "\t                             N = Notify\r\n"
             "\t                             U = Update\r\n"
             "\t                             ? = Unknown\r\n"
             "\t  12     [ Flags (hex)\r\n"
             "\t  13     Flags (char codes)  A = Authoritative Answer\r\n"
             "\t                             T = Truncated Response\r\n"
             "\t                             D = Recursion Desired\r\n"
             "\t                             R = Recursion Available\r\n"
             "\t  14     ResponseCode ]\r\n"
             "\t  15     Question Type\r\n"
             "\t  16     Question Name\r\n"
             "\r\n");
  if ( result )
  {
    v1 = (_DWORD)result - (_DWORD)lpMultiByteStr;
    if ( result - lpMultiByteStr <= (unsigned __int64)(unsigned int)qword_1401B8F90 )
    {
      lpMultiByteStr = result;
      LODWORD(qword_1401B8F90) = qword_1401B8F90 - v1;
    }
  }
  return result;
}
