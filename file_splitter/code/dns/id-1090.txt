//----- (000000014008DC40) ----------------------------------------------------
__int64 __fastcall RR_UpdateAdd(__int64 a1, __int64 a2, __int64 a3, __int64 a4, int a5, __int64 a6)
{
  __int64 v6; // r15
  unsigned __int64 v7; // r12
  __int64 v10; // rdi
  __int64 v11; // rbx
  char *v12; // rax
  __int64 v13; // r8
  __int64 v14; // rdx
  unsigned int v15; // ebx
  char v16; // r13
  __int64 v17; // rcx
  __int64 v18; // rsi
  int v19; // eax
  bool v20; // zf
  unsigned int v21; // eax
  volatile signed __int32 *j; // rax
  volatile signed __int32 *v23; // rcx
  u_long v24; // ecx
  char *v25; // rax
  unsigned __int8 v26; // cl
  __int64 v27; // rdx
  _QWORD *v28; // r13
  __int64 i; // rsi
  __int64 v30; // rcx
  char *v31; // rax
  __int64 v32; // r8
  u_long v33; // ebx
  __int64 v34; // rcx
  char *v35; // rax
  __int64 v36; // rdx
  __int64 v37; // r8
  char *v39; // rax
  __int64 v40; // r8
  __int64 v41; // [rsp+20h] [rbp-68h]
  __int64 v42; // [rsp+28h] [rbp-60h]
  char v43; // [rsp+98h] [rbp+10h]
  int v44; // [rsp+A0h] [rbp+18h]

  v6 = a3;
  v7 = *(unsigned __int16 *)(a3 + 12);
  v43 = *(_BYTE *)(a3 + 8);
  v10 = 0i64;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    if ( a1 )
      v11 = *(_QWORD *)(a1 + 16);
    else
      v11 = 0i64;
    v12 = Dbg_NodeName(a2);
    WPP_SF_qDss(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x53u, v13, v6, (unsigned __int16)v7, v12, v11);
  }
  Dbase_LockEx(a2, 2, (__int64)"ds\\dns\\server\\server\\rrlist.c", 187);
  if ( !a2 || (v44 = 1, !*(_QWORD *)(a2 + 64)) )
    v44 = 0;
  *(_DWORD *)(a2 + 76) = 0;
  deleteCachedRecordsForUpdate(a2);
  if ( (*(_BYTE *)(a2 + 92) & 0x20) != 0 || (_WORD)v7 == 5 )
  {
    v15 = checkCnameConditions(a2, v14, v7, 0);
    if ( v15 )
    {
      v16 = a5;
      if ( (a5 & 1) == 0 )
        goto LABEL_26;
      if ( (_WORD)v7 != 5 || !dword_1401B996C )
      {
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
        {
          WPP_SF_sd(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            0x55u,
            (__int64)&WPP_10d39582251c332017bd035d2c946054_Traceguids,
            (const char *)(a2 + 102));
        }
        v15 = 9007;
        goto LABEL_26;
      }
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        WPP_SF_ss(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0x54u,
          (__int64)&WPP_10d39582251c332017bd035d2c946054_Traceguids,
          (const char *)(a2 + 102),
          *(_QWORD *)(a1 + 16));
      }
LABEL_65:
      v15 = 0;
      goto LABEL_26;
    }
  }
  v16 = a5;
  if ( (_WORD)v7 == 39 && (a5 & 1) != 0 )
  {
LABEL_33:
    v15 = 9005;
    goto LABEL_26;
  }
  if ( (*(_DWORD *)(a2 + 92) & 0x20000) != 0 || (_WORD)v7 == 39 )
  {
    v15 = checkDnameConditions(a2, v14, v7, 0);
    if ( v15 )
      goto LABEL_26;
  }
  if ( (_WORD)v7 == 1 || (_WORD)v7 == 28 )
    goto LABEL_67;
  if ( (_WORD)v7 != 2 )
  {
    if ( (_WORD)v7 != 6 )
    {
      if ( (v7 & 0xFFFC) == 0xFF00 )
      {
        v21 = Wins_RecordCheck(a1, a2, v6);
        v15 = v21;
        if ( v21 )
        {
          if ( v21 != 9753 )
            goto LABEL_26;
          v6 = 0i64;
          goto LABEL_65;
        }
        *(_DWORD *)(a1 + 396) |= 0x400u;
      }
      goto LABEL_67;
    }
    if ( (*(_DWORD *)(a2 + 92) & 0x100) == 0 )
    {
      v15 = 9710;
      goto LABEL_26;
    }
    if ( (a5 & 1) == 0 )
      goto LABEL_67;
    v20 = (dword_1401B9840 & 1) == 0;
    goto LABEL_54;
  }
  v19 = *(_DWORD *)(a2 + 92);
  if ( (v19 & 0x100) != 0 )
  {
    if ( (a5 & 1) == 0 )
      goto LABEL_67;
    v20 = (dword_1401B9840 & 2) == 0;
LABEL_54:
    if ( !v20 )
      goto LABEL_33;
    goto LABEL_67;
  }
  if ( (v19 & 0x10) == 0 && *(_BYTE *)(a2 + 96) != 0xF2 )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_q(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x56u,
        (__int64)&WPP_10d39582251c332017bd035d2c946054_Traceguids,
        a2);
    }
    goto LABEL_47;
  }
  if ( (a5 & 1) != 0 && (dword_1401B983C || (dword_1401B9840 & 4) != 0) )
    goto LABEL_33;
  *(_BYTE *)(a2 + 96) = 67;
  *(_DWORD *)(a2 + 92) = v19 | 0x10;
  Lookup_NsHostNode(v6 + 56, a5 & 0x4000, a1, 0i64, 0i64, dword_1401B9714, 0i64, a6);
LABEL_67:
  if ( a1 && a2 == *(_QWORD *)(a1 + 40) )
  {
LABEL_77:
    if ( a1 )
    {
      v24 = *(_DWORD *)(v6 + 20);
      if ( v24 == *(_DWORD *)(a1 + 528) )
      {
        *(_WORD *)(v6 + 10) |= 0x40u;
      }
      else if ( ntohl(v24) > *(_DWORD *)(a1 + 536) )
      {
        *(_DWORD *)(a1 + 536) = ntohl(*(_DWORD *)(v6 + 20));
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x40000) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
        {
          v25 = Dbg_NodeName(a2);
          WPP_SF_DqDss(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            0x57u,
            *(unsigned __int16 *)(v6 + 12),
            *(_DWORD *)(a1 + 536),
            v6,
            *(_WORD *)(v6 + 12),
            (__int64)v25,
            *(_QWORD *)(a1 + 16));
        }
      }
      v26 = -16;
      v43 = -16;
      if ( *(_BYTE *)(a2 + 96) != 0xF2 )
      {
        if ( (_WORD)v7 == 2 )
        {
          v26 = -126;
          v43 = -126;
          if ( (*(_BYTE *)(a2 + 92) & 0x10) == 0 )
          {
LABEL_47:
            v15 = 9563;
            goto LABEL_26;
          }
        }
        else
        {
          v26 = 0x80;
          v43 = 0x80;
          if ( (unsigned __int16)v7 > 0x32u )
            goto LABEL_47;
          v27 = 0x5C80010000002i64;
          if ( !_bittest64(&v27, v7) )
            goto LABEL_47;
        }
      }
    }
    else
    {
      v26 = v43;
    }
    if ( (a5 & 0x800000) != 0 && *(_BYTE *)(v6 + 8) == 0xC1 )
    {
      v26 = -63;
      v43 = -63;
    }
    else
    {
      *(_BYTE *)(v6 + 8) = v26;
    }
    v28 = (_QWORD *)(a2 + 64);
    for ( i = *(_QWORD *)(a2 + 64); i; i = *(_QWORD *)i )
    {
      if ( (_WORD)v7 == *(_WORD *)(i + 12) )
      {
        if ( (a5 & 0x800000) != 0 || (*(_BYTE *)(i + 8) & 1) == 0 )
        {
          if ( v26 == *(_BYTE *)(i + 8) )
          {
            if ( (unsigned int)RR_Compare(v6, i, 0i64) )
            {
              if ( *(_DWORD *)(v6 + 20) == *(_DWORD *)(i + 20) )
              {
                v15 = 9711;
                v16 = a5;
                if ( *(_DWORD *)(i + 24) || (a5 & 0x1002) == 4098 )
                {
                  if ( (a5 & 2) != 0 && (!*(_DWORD *)(i + 24) || !*(_DWORD *)(v6 + 24)) )
                    v15 = 0;
                  *(_DWORD *)(i + 24) = *(_DWORD *)(v6 + 24);
                }
                goto LABEL_26;
              }
              goto LABEL_132;
            }
            if ( (unsigned __int16)v7 == 5 )
              goto LABEL_132;
            if ( (unsigned __int16)v7 == 6 )
            {
              if ( (a5 & 1) != 0 )
              {
                v33 = htonl(*(_DWORD *)(i + 56));
                if ( htonl(*(_DWORD *)(v6 + 56)) - v33 - 1 > 0x7FFFFFFE )
                {
                  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
                    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
                  {
                    WPP_SF_(
                      *((_QWORD *)WPP_GLOBAL_Control + 7),
                      0x59u,
                      (__int64)&WPP_10d39582251c332017bd035d2c946054_Traceguids);
                  }
                  v16 = a5;
                  v15 = 9618;
                  goto LABEL_26;
                }
              }
              *(_DWORD *)(a1 + 396) |= 0x600u;
LABEL_132:
              if ( !*(_DWORD *)(i + 24) && (a5 & 1) != 0 )
              {
                if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                  && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x200) != 0
                  && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
                {
                  WPP_SF_(
                    *((_QWORD *)WPP_GLOBAL_Control + 7),
                    0x5Bu,
                    (__int64)&WPP_10d39582251c332017bd035d2c946054_Traceguids);
                }
                *(_DWORD *)(v6 + 24) = 0;
              }
              *v28 = v6;
              *(_QWORD *)v6 = *(_QWORD *)i;
              *(_QWORD *)i = 0i64;
              *(_QWORD *)(a4 + 24) = i;
              *(_QWORD *)(a4 + 16) = v6;
              NTree_ChangeAncestorCounters((volatile signed __int32 **)a2, v44);
              Dbase_UnlockEx(v34, 2, (__int64)"ds\\dns\\server\\server\\rrlist.c", 233);
              if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
                && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
              {
                if ( a1 )
                  v10 = *(_QWORD *)(a1 + 16);
                v35 = Dbg_NodeName(a2);
                LODWORD(v42) = (unsigned __int16)v7;
                WPP_SF_qqDss(*((_QWORD *)WPP_GLOBAL_Control + 7), v36, v37, i, v6, v42, v35, v10);
              }
              return 0i64;
            }
            if ( (unsigned int)(unsigned __int16)v7 - 65281 <= 1 )
              goto LABEL_132;
          }
          else if ( v26 >= *(_BYTE *)(i + 8) )
          {
            break;
          }
        }
        else
        {
          *v28 = *(_QWORD *)i;
          if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
            && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
          {
            WPP_SF_q(
              *((_QWORD *)WPP_GLOBAL_Control + 7),
              0x58u,
              (__int64)&WPP_10d39582251c332017bd035d2c946054_Traceguids,
              i);
          }
          RR_Free(i);
          i = (__int64)v28;
        }
      }
      else if ( (unsigned __int16)v7 <= *(_WORD *)(i + 12) )
      {
        break;
      }
      v26 = v43;
      v28 = (_QWORD *)i;
    }
    *(_QWORD *)v6 = i;
    *v28 = v6;
    *(_QWORD *)(a4 + 16) = v6;
    RR_ListResetNodeFlags(a2);
    NTree_ChangeAncestorCounters((volatile signed __int32 **)a2, v44);
    Dbase_UnlockEx(v30, 2, (__int64)"ds\\dns\\server\\server\\rrlist.c", 187);
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      if ( a1 )
        v10 = *(_QWORD *)(a1 + 16);
      v31 = Dbg_NodeName(a2);
      LODWORD(v41) = (unsigned __int16)v7;
      WPP_SF_qDss(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x5Au, v32, v6, v41, v31, v10);
    }
    return 0i64;
  }
  for ( j = *(volatile signed __int32 **)a2; ; j = *(volatile signed __int32 **)j )
  {
    if ( !j )
      goto LABEL_77;
    v23 = a1 ? *(volatile signed __int32 **)(a1 + 40) : 0i64;
    if ( j == v23 )
      goto LABEL_77;
    if ( (j[23] & 0x20000) != 0 )
      break;
  }
  v15 = 9570;
LABEL_26:
  NTree_ChangeAncestorCounters((volatile signed __int32 **)a2, v44);
  Dbase_UnlockEx(v17, 2, (__int64)"ds\\dns\\server\\server\\rrlist.c", 246);
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    if ( a1 )
      v18 = *(_QWORD *)(a1 + 16);
    else
      v18 = 0i64;
    v39 = Dbg_NodeName(a2);
    LODWORD(v41) = (unsigned __int16)v7;
    WPP_SF_qDss(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x5Du, v40, v6, v41, v39, v18);
  }
  RR_Free(v6);
  *(_QWORD *)(a4 + 16) = 0i64;
  *(_WORD *)(a4 + 40) = -772;
  if ( v15 == 9711 )
    return (v16 & 2) != 0 ? 0x25EF : 0;
  return v15;
}
// 14008DCD1: variable 'v13' is possibly undefined
// 14008DD3A: variable 'v14' is possibly undefined
// 14008DE2B: variable 'v17' is possibly undefined
// 14008E1E1: variable 'v30' is possibly undefined
// 14008E24A: variable 'v32' is possibly undefined
// 14008E24A: variable 'v41' is possibly undefined
// 14008E40D: variable 'v34' is possibly undefined
// 14008E46A: variable 'v36' is possibly undefined
// 14008E46A: variable 'v37' is possibly undefined
// 14008E46A: variable 'v42' is possibly undefined
// 14008E4F6: variable 'v40' is possibly undefined
// 1401B9714: using guessed type int dword_1401B9714;
// 1401B983C: using guessed type int dword_1401B983C;
// 1401B9840: using guessed type int dword_1401B9840;
// 1401B996C: using guessed type int dword_1401B996C;
