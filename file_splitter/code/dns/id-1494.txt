//----- (00000001400BC084) ----------------------------------------------------
__int64 __fastcall dsPeerThreadWorker(__int64 a1)
{
  DNS_RECORDA *v1; // rsi
  unsigned __int16 v3; // di
  DNS_RECORDA *v4; // r14
  __int64 NextRecord; // rbp
  unsigned __int64 v6; // r15
  DNS_RECORDA *Record; // rax
  DNS_RECORDA *v8; // rbx
  int v9; // eax
  unsigned int v11; // [rsp+68h] [rbp+10h] BYREF

  v1 = 0i64;
  v3 = 1;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_D(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0xBDu,
      (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids,
      dword_1401B9714);
  }
  while ( 1 )
  {
    v4 = 0i64;
    v11 = -1;
    acquireRead(DbaseLock, 0xFFFFFFFF, &v11);
    NextRecord = RR_FindNextRecordEx(a1, 0, v3, 0i64, 0, 0);
    if ( NextRecord )
      break;
LABEL_20:
    v11 = -1;
    releaseRead(DbaseLock, &v11, 1);
    if ( v1 )
    {
      v9 = DnsReplaceRecordSetUTF8(v1, 0x1000u, 0i64, 0i64, 0i64);
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        WPP_SF_D(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0xC0u,
          (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids,
          v9);
      }
      Dns_RecordListFree((__int64)v1);
      v1 = 0i64;
    }
    if ( v3 != 1 )
      return Dns_RecordListFree((__int64)v1);
    v3 = 28;
  }
  v6 = 16i64;
  if ( v3 == 1 )
    v6 = 4i64;
  while ( 1 )
  {
    Record = (DNS_RECORDA *)Dns_AllocateRecordEx(v6);
    v8 = Record;
    if ( !Record )
      break;
    Record->pName = (PSTR)Str;
    Record->dwTtl = htonl(*(_DWORD *)(NextRecord + 20));
    v8->wType = v3;
    if ( v3 == 1 )
      v8->Data.A.IpAddress = *(_DWORD *)(NextRecord + 56);
    else
      *(_OWORD *)&v8->Data.A.IpAddress = *(_OWORD *)(NextRecord + 56);
    if ( v4 )
      v4->pNext = v8;
    else
      v1 = v8;
    v4 = v8;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_D(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0xBFu,
        (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids,
        v3);
    }
    NextRecord = RR_FindNextRecordEx(a1, 0, v3, NextRecord, 0, 0);
    if ( !NextRecord )
      goto LABEL_20;
  }
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
  {
    WPP_SF_D(*((_QWORD *)WPP_GLOBAL_Control + 7), 0xBEu, (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids, v3);
  }
  v11 = -1;
  releaseRead(DbaseLock, &v11, 1);
  return Dns_RecordListFree((__int64)v1);
}
// 1401B9714: using guessed type int dword_1401B9714;
// 1401EC5E8: using guessed type __int64 DbaseLock;
