//----- (0000000140154928) ----------------------------------------------------
const unsigned __int16 **Zone_UpdateVirtualizationInstanceOwnRecords()
{
  const unsigned __int16 **result; // rax
  _QWORD *v1; // rax
  _QWORD *v2; // rbx
  __int64 *v3; // rax
  __int64 i; // rax

  if ( (unsigned int)Dns_VirtualInstanceTree_AcquireReadLock() )
  {
    v1 = *(_QWORD **)(*(_QWORD *)g_pVirtualizationManager + 8i64);
    v2 = (_QWORD *)*v1;
    if ( (_QWORD *)*v1 != v1 )
    {
      do
      {
        Zone_UpdateOwnRecords((const unsigned __int16 **)v2[4]);
        if ( !*((_BYTE *)v2 + 41) )
        {
          v3 = (__int64 *)v2[2];
          if ( *((_BYTE *)v3 + 41) )
          {
            for ( i = v2[1]; !*(_BYTE *)(i + 41) && v2 == *(_QWORD **)(i + 16); i = *(_QWORD *)(i + 8) )
              v2 = (_QWORD *)i;
            v2 = (_QWORD *)i;
          }
          else
          {
            do
            {
              v2 = v3;
              v3 = (__int64 *)*v3;
            }
            while ( !*((_BYTE *)v3 + 41) );
          }
        }
      }
      while ( v2 != *(_QWORD **)(*(_QWORD *)g_pVirtualizationManager + 8i64) );
    }
    Dns_VirtualInstanceTree_ReleaseReadLock();
    return Zone_UpdateOwnRecords(0i64);
  }
  else
  {
    result = (const unsigned __int16 **)&WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
    {
      return (const unsigned __int16 **)WPP_SF_(
                                          *((_QWORD *)WPP_GLOBAL_Control + 7),
                                          0x24u,
                                          (__int64)&WPP_724dcb1c6d0b3932d6d2d238a2e9cfc2_Traceguids);
    }
  }
  return result;
}
// 1401B9270: using guessed type struct CDnsVirtualizationManager *g_pVirtualizationManager;
