//----- (00000001401090CC) ----------------------------------------------------
const void **__fastcall std::wstring::append(char *Src, char *a2)
{
  char *v3; // rbx
  unsigned __int64 v4; // r14
  char *v5; // rax
  char *v6; // rax
  char *v7; // r8
  unsigned __int64 v8; // rdi
  bool v9; // cf
  char *v10; // rax
  char *v11; // rcx
  char *v12; // rax

  v3 = Src;
  v4 = -1i64;
  do
    ++v4;
  while ( *(_WORD *)&a2[2 * v4] );
  if ( a2 )
  {
    v5 = *((_QWORD *)Src + 3) < 8ui64 ? Src : *(char **)Src;
    if ( a2 >= v5 )
    {
      if ( *((_QWORD *)Src + 3) >= 8ui64 )
        Src = *(char **)Src;
      if ( &Src[2 * *((_QWORD *)v3 + 2)] > a2 )
      {
        if ( *((_QWORD *)v3 + 3) < 8ui64 )
          v6 = v3;
        else
          v6 = *(char **)v3;
        return std::wstring::append((const void **)v3, v3, (a2 - v6) >> 1, v4);
      }
    }
  }
  v7 = (char *)*((_QWORD *)v3 + 2);
  if ( -1 - (__int64)v7 <= v4 )
    std::wstring::_Xlen();
  if ( v4 )
  {
    v8 = (unsigned __int64)&v7[v4];
    if ( (unsigned __int64)&v7[v4] > 0x7FFFFFFFFFFFFFFEi64 )
      std::wstring::_Xlen();
    if ( *((_QWORD *)v3 + 3) >= v8 )
    {
      if ( v8 )
      {
LABEL_26:
        if ( *((_QWORD *)v3 + 3) < 8ui64 )
          v11 = v3;
        else
          v11 = *(char **)v3;
        memcpy_0(&v11[2 * *((_QWORD *)v3 + 2)], a2, 2 * v4);
        v9 = *((_QWORD *)v3 + 3) < 8ui64;
        *((_QWORD *)v3 + 2) = v8;
        if ( v9 )
          v12 = v3;
        else
          v12 = *(char **)v3;
        *(_WORD *)&v12[2 * v8] = 0;
        return (const void **)v3;
      }
      v9 = *((_QWORD *)v3 + 3) < 8ui64;
      *((_QWORD *)v3 + 2) = 0i64;
      if ( v9 )
        v10 = v3;
      else
        v10 = *(char **)v3;
      *(_WORD *)v10 = 0;
    }
    else
    {
      std::wstring::_Copy((const void **)v3, (unsigned __int64)&v7[v4], v7);
    }
    if ( !v8 )
      return (const void **)v3;
    goto LABEL_26;
  }
  return (const void **)v3;
}
