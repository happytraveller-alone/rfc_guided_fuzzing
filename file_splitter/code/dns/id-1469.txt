//----- (00000001400B6B88) ----------------------------------------------------
__int64 __fastcall Up_CleanZoneUpdateList(__int64 a1, __int64 a2, __int64 a3)
{
  int v3; // r14d
  int v5; // r15d
  CDnsClientSubnetRecordsTrie *v6; // rcx
  __int64 result; // rax
  int v8; // edx
  int v9; // r14d
  int v10; // ebp
  int *v11; // rsi
  int v12; // eax

  v3 = *(_DWORD *)(a1 + 1612);
  v5 = 0;
  v6 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control )
  {
    if ( (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) == 0 )
      goto LABEL_8;
    if ( *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_sdL(*((_QWORD *)WPP_GLOBAL_Control + 7), a2, a3, *(const char **)(a1 + 16));
      v6 = WPP_GLOBAL_Control;
    }
  }
  if ( (*((_DWORD *)v6 + 17) & 0x80000) != 0 && *((_BYTE *)v6 + 65) >= 5u )
  {
    Dbg_UpdateList("Zone update list before cleanup:", a1 + 1568);
    v6 = WPP_GLOBAL_Control;
  }
LABEL_8:
  if ( *(_DWORD *)(a1 + 380) == 3 || (*(_BYTE *)(a1 + 388) & 1) != 0 && !*(_DWORD *)(a1 + 520) )
  {
    Up_FreeUpdatesInUpdateList(a1 + 1568);
    result = (__int64)memset_0((void *)(a1 + 1568), 0, 0x40ui64);
    *(_DWORD *)(a1 + 1608) |= 0x80000000;
  }
  else
  {
    if ( *(int *)(a1 + 444) < 0 )
    {
      if ( v6 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)v6 + 17) & 0x80000) != 0
        && *((_BYTE *)v6 + 65) >= 2u )
      {
        WPP_SF_sd(
          *((_QWORD *)v6 + 7),
          0x22u,
          (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids,
          *(const char **)(a1 + 16));
      }
      *(_DWORD *)(a1 + 444) = 1;
      v6 = WPP_GLOBAL_Control;
    }
    result = 0x10000i64;
    v8 = *(int *)(a1 + 444) >> 3;
    if ( v8 <= 0x10000 )
    {
      result = (unsigned int)v8;
      if ( v8 < 20 )
        result = 20i64;
    }
    v9 = v3 - result;
    if ( v9 > 0 )
    {
      if ( v6 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)v6 + 17) & 0x80000) != 0
        && *((_BYTE *)v6 + 65) >= 4u )
      {
        WPP_SF_D(*((_QWORD *)v6 + 7), 0x24u, (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids, v9);
        v6 = WPP_GLOBAL_Control;
      }
      v10 = 0;
      v11 = *(int **)(a1 + 1568);
      if ( v11 )
      {
        while ( g_fDnsServiceExit != 1 )
        {
          v12 = v11[8];
          if ( v12 == *(_DWORD *)(a1 + 512) )
            goto LABEL_51;
          if ( v10 >= v9 )
          {
            if ( v10 == v9 )
            {
              v5 = v11[8];
            }
            else if ( v5 != v12 )
            {
              goto LABEL_51;
            }
          }
          ++v10;
          v11 = (int *)Up_FreeUpdateEx(v11, 1, 1);
          if ( !v11 )
          {
            v6 = WPP_GLOBAL_Control;
            goto LABEL_38;
          }
        }
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
        {
          WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x25u, (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids);
        }
LABEL_51:
        *(_DWORD *)(a1 + 1612) -= v10;
        *(_QWORD *)(a1 + 1568) = v11;
      }
      else
      {
LABEL_38:
        if ( v6 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)v6 + 17) & 0x80000) != 0
          && *((_BYTE *)v6 + 65) >= 4u )
        {
          WPP_SF_s(
            *((_QWORD *)v6 + 7),
            0x26u,
            (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids,
            *(const char **)(a1 + 16));
        }
        memset_0((void *)(a1 + 1568), 0, 0x40ui64);
        *(_DWORD *)(a1 + 1608) |= 0x80000000;
      }
      result = (__int64)WPP_GLOBAL_Control;
      if ( (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0 )
      {
        Up_VerifyUpdateList(a1 + 1568);
        result = (__int64)WPP_GLOBAL_Control;
        if ( (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0 && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
          return (__int64)Dbg_UpdateList("Zone update list after cleanup:", a1 + 1568);
      }
    }
    else if ( v6 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
           && (*((_DWORD *)v6 + 17) & 0x80000) != 0
           && *((_BYTE *)v6 + 65) >= 4u )
    {
      return WPP_SF_sd(
               *((_QWORD *)v6 + 7),
               0x23u,
               (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids,
               *(const char **)(a1 + 16));
    }
  }
  return result;
}
// 1400B6E46: conditional instruction was optimized away because rsi.8!=0
// 1401B9A40: using guessed type int g_fDnsServiceExit;
