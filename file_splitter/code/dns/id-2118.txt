//----- (000000014010BEB8) ----------------------------------------------------
void __fastcall initiateChildDsPolling(unsigned __int16 **a1, struct _DnsTreeNode *a2)
{
  __int64 v4; // rdx
  __int64 NextRecord; // r14
  char *v6; // rax
  int v7; // ecx
  char *v8; // rax
  int v9; // r9d
  unsigned __int16 v10; // dx
  __int64 v11; // r9
  struct _DnsTreeNode *ChildDnskeyNode; // r14
  CDnsClientSubnetRecordsTrie *v13; // rcx
  char *v14; // rax
  __int64 v15; // rax
  char *v16; // rax
  char *v17; // rax
  unsigned __int16 *v18[2]; // [rsp+50h] [rbp-20h] BYREF
  __int128 v19; // [rsp+60h] [rbp-10h] BYREF
  unsigned int v20; // [rsp+B8h] [rbp+48h] BYREF
  unsigned int v21; // [rsp+C0h] [rbp+50h] BYREF

  if ( (*((_DWORD *)a2 + 23) & 0x110) != 16 )
    return;
  v20 = -1;
  acquireRead(DbaseLock, 0xFFFFFFFF, &v20);
  NextRecord = RR_FindNextRecordEx((__int64)a2, 0, 0x2Bu, 0i64, 0, 0);
  if ( NextRecord )
  {
    while ( NextRecord && *(_WORD *)(NextRecord + 12) == 43 )
    {
      if ( *(_BYTE *)(NextRecord + 58) > 0xEu || (v7 = 26016, !_bittest(&v7, *(unsigned __int8 *)(NextRecord + 58))) )
      {
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x200000) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
        {
          v8 = Dbg_NodeName((__int64)a2);
          v9 = *(unsigned __int8 *)(NextRecord + 58);
          v10 = 53;
LABEL_22:
          WPP_SF_Ds(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            v10,
            (__int64)&WPP_9f96d4c672f338bf067ce342b88232b8_Traceguids,
            v9,
            (__int64)v8);
        }
LABEL_23:
        if ( (*((_DWORD *)a2 + 23) & 0x400) == 0 )
        {
          v18[0] = (unsigned __int16 *)((char *)a2 + 102);
          v18[1] = a1[3];
          LOWORD(v20) = 259;
          v19 = DNS_EVENT_DNSSEC_UNSUPPORTED_CHILD_ALG;
          Eventlog_LogEvent((__int64)&v19, v4, 2u, v18, (unsigned __int8 *)&v20, 0, 0, 0i64);
          *((_DWORD *)a2 + 23) |= 0x400u;
        }
        goto LABEL_25;
      }
      if ( ((*(_BYTE *)(NextRecord + 59) - 1) & 0xFC) != 0 || *(_BYTE *)(NextRecord + 59) == 3 )
      {
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x200000) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
        {
          v8 = Dbg_NodeName((__int64)a2);
          v9 = *(unsigned __int8 *)(NextRecord + 59);
          v10 = 54;
          goto LABEL_22;
        }
        goto LABEL_23;
      }
      NextRecord = *(_QWORD *)NextRecord;
    }
    v20 = -1;
    releaseRead(DbaseLock, &v20, 1);
    ChildDnskeyNode = findChildDnskeyNode(a2, 1);
    if ( !ChildDnskeyNode )
    {
      v13 = WPP_GLOBAL_Control;
      if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        || (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x200000) == 0
        || *((_BYTE *)WPP_GLOBAL_Control + 65) < 2u )
      {
LABEL_32:
        v15 = *((_QWORD *)ChildDnskeyNode + 7);
        if ( !v15 || *(_DWORD *)(v15 + 372) == 5 )
        {
          if ( v13 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_DWORD *)v13 + 17) & 0x200000) != 0
            && *((_BYTE *)v13 + 65) >= 4u )
          {
            v17 = Dbg_NodeName((__int64)a2);
            WPP_SF_qsq(
              *((_QWORD *)WPP_GLOBAL_Control + 7),
              0x39u,
              (__int64)&WPP_9f96d4c672f338bf067ce342b88232b8_Traceguids,
              a2,
              v17,
              ChildDnskeyNode);
          }
          Recurse_SendCacheUpdateQuery(
            (__int64)ChildDnskeyNode,
            0i64,
            (__int64)a2,
            v11,
            0x30u,
            0i64,
            1u,
            0,
            (__int64)DnsOls_ChildDsPollingCallback,
            (__int64)a2);
        }
        else
        {
          if ( v13 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_DWORD *)v13 + 17) & 0x200000) != 0
            && *((_BYTE *)v13 + 65) >= 4u )
          {
            v16 = Dbg_NodeName((__int64)ChildDnskeyNode);
            WPP_SF_s(
              *((_QWORD *)WPP_GLOBAL_Control + 7),
              0x38u,
              (__int64)&WPP_9f96d4c672f338bf067ce342b88232b8_Traceguids,
              v16);
          }
          performChildDsRebuild(a2, ChildDnskeyNode);
        }
        return;
      }
      v14 = Dbg_NodeName((__int64)a2);
      WPP_SF_s(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x37u,
        (__int64)&WPP_9f96d4c672f338bf067ce342b88232b8_Traceguids,
        v14);
    }
    v13 = WPP_GLOBAL_Control;
    goto LABEL_32;
  }
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x200000) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
  {
    v6 = Dbg_NodeName((__int64)a2);
    WPP_SF_s(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x34u, (__int64)&WPP_9f96d4c672f338bf067ce342b88232b8_Traceguids, v6);
  }
LABEL_25:
  v21 = -1;
  releaseRead(DbaseLock, &v21, 1);
}
// 14010C0A2: variable 'v4' is possibly undefined
// 14010C20A: variable 'v11' is possibly undefined
// 140186CA0: using guessed type __int128 DNS_EVENT_DNSSEC_UNSUPPORTED_CHILD_ALG;
// 1401EC5E8: using guessed type __int64 DbaseLock;
