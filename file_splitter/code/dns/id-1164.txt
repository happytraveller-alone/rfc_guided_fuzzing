//----- (0000000140096680) ----------------------------------------------------
__int64 __fastcall Rpc_DeleteZoneNode(
        __int64 a1,
        const unsigned __int16 **a2,
        __int64 a3,
        __int64 a4,
        __int64 a5,
        unsigned __int16 *a6)
{
  __int64 v6; // rbx
  int v7; // r13d
  __int64 result; // rax
  char *v9; // r15
  unsigned int v10; // edi
  const char *v11; // rax
  const unsigned __int16 *v12; // r9
  _BYTE *v13; // r15
  __int64 v14; // rdx
  const unsigned __int16 *v15; // rcx
  int v16; // eax
  unsigned int refreshed; // edi
  __int64 v18; // rcx
  const unsigned __int16 **v19; // rax
  const unsigned __int16 *v20; // rdx
  __int64 v21; // rcx
  char *v22; // r8
  unsigned __int16 *v23; // rax
  int v24; // r8d
  unsigned int v25; // eax
  __int64 v26; // rcx
  const unsigned __int16 *v27; // rax
  const unsigned __int16 *v28; // r9
  const char *v29; // rbx
  const unsigned __int16 *v30; // rax
  int v31; // [rsp+48h] [rbp-39h]
  int v32; // [rsp+4Ch] [rbp-35h]
  const char *v33; // [rsp+50h] [rbp-31h]
  int v34; // [rsp+58h] [rbp-29h] BYREF
  int v35[3]; // [rsp+5Ch] [rbp-25h] BYREF
  __int128 v36; // [rsp+68h] [rbp-19h] BYREF
  char v37[64]; // [rsp+78h] [rbp-9h] BYREF

  v34 = 0;
  v6 = a3;
  v31 = 0;
  v7 = 0;
  v32 = 0;
  if ( !a6 )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
    {
      WPP_SF_D(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        (_WORD)a6 + 38,
        (__int64)&WPP_94ace1326352386894146b7c4d888c88_Traceguids,
        87);
    }
    return 87i64;
  }
  v9 = (char *)*((_QWORD *)a6 + 1);
  v10 = *(_DWORD *)a6;
  v33 = v9;
  LODWORD(a6) = *(_DWORD *)a6;
  if ( a3 && !*(_DWORD *)(a3 + 372) )
    v6 = -(__int64)(*(_QWORD *)(a3 + 192) != 0i64) & a3;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    if ( v6 )
      v11 = *(const char **)(v6 + 16);
    else
      v11 = "NULL (cache)";
    if ( a2 )
      v12 = *a2;
    else
      v12 = L".";
    WPP_SF_Sssd(*((_QWORD *)WPP_GLOBAL_Control + 7), (__int64)a2, a3, v12, (__int64)v11, (__int64)v9);
  }
  v13 = Lookup_ZoneNodeFromDotted((_QWORD *)v6, v9, 0, 16, (__int64 *)0xFFFFFFFFFFFFFFFFi64, v35);
  if ( !v13 )
  {
    result = (unsigned int)v35[0];
    if ( v35[0] == 9714 )
      return 0i64;
    return result;
  }
  v14 = 1i64;
  v15 = L"Default";
  if ( !v6 )
  {
LABEL_63:
    if ( dword_1401B991C && (!v6 || !*(_DWORD *)(v6 + 372)) && !v13[102] && v10 )
      v7 = 1;
    if ( v6 && *(_DWORD *)(v6 + 372) )
      v22 = v37;
    else
      v22 = 0i64;
    refreshed = (unsigned int)RpcUtil_DeleteNodeOrSubtreeForAdmin((__int64)v13, v6, (__int64)v22, &v34, v10) != 0
              ? 0
              : 0x25F4;
    if ( v7 && (!refreshed || refreshed == 9716 && v34) )
    {
      if ( !v6 || (v23 = *(unsigned __int16 **)(v6 + 192)) == 0i64 )
        v23 = L"Default";
      a6 = v23;
      v36 = DNS_EVENT_CACHESCOPE_FLUSHED;
      Eventlog_LogEvent((__int64)&v36, v14, 1u, &a6, (unsigned __int8 *)1, 0, 0, 0i64);
    }
    if ( v6 && *(_DWORD *)(v6 + 372) )
    {
      v24 = 33554434;
      if ( v6 == g_pTrustAnchorsZone )
        v24 = 100663298;
      v25 = Up_ExecuteUpdateEx(
              (const char **)v6,
              (__int64)v37,
              v24,
              0,
              (__int64)"ds\\dns\\server\\server\\rrrpc.c",
              107);
      if ( v25 )
        refreshed = v25;
      goto LABEL_38;
    }
LABEL_53:
    if ( !v31 )
      goto LABEL_90;
    goto LABEL_89;
  }
  v16 = *(_DWORD *)(v6 + 372);
  if ( !v16 )
  {
    refreshed = Zone_LockForWriteEx(v6, 1, 0x2710u, (__int64)"ds\\dns\\server\\server\\rrrpc.c", 38);
    if ( refreshed )
      goto LABEL_38;
    v31 = 1;
LABEL_62:
    v10 = (unsigned int)a6;
    goto LABEL_63;
  }
  if ( v13 == *(_BYTE **)(v6 + 40) )
  {
    refreshed = 9603;
    goto LABEL_39;
  }
  if ( v16 == 1 )
  {
    memset_0(v37, 0, sizeof(v37));
    v18 = v6;
    if ( *(_QWORD *)(v6 + 328) )
      v18 = *(_QWORD *)(v6 + 328);
    refreshed = Zone_LockForRPCSeqEx(v18, 0xBB8u);
    if ( refreshed )
    {
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        WPP_SF_Ds(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0x28u,
          (__int64)&WPP_94ace1326352386894146b7c4d888c88_Traceguids,
          refreshed,
          *(_QWORD *)(v6 + 16));
      }
      goto LABEL_38;
    }
    v32 = 1;
    refreshed = Zone_LockForWriteEx(v6, 1, 0x2710u, (__int64)"ds\\dns\\server\\server\\rrrpc.c", 213);
    if ( refreshed )
    {
LABEL_91:
      if ( !v6 || (v26 = *(_QWORD *)(v6 + 328)) == 0 )
        v26 = v6;
      Lock_ReleaseWrite(*(_QWORD *)(v26 + 312));
      goto LABEL_38;
    }
    v31 = 1;
    refreshed = RpcUtil_SwitchSecurityContext(0);
    if ( refreshed )
    {
LABEL_89:
      Zone_UnlockAfterWriteEx(v6, 1, (__int64)"ds\\dns\\server\\server\\rrrpc.c", 126);
LABEL_90:
      if ( v32 )
        goto LABEL_91;
LABEL_38:
      v15 = L"Default";
      goto LABEL_39;
    }
    refreshed = DnsOls_RefreshAllDnsKeyPairObject((struct _zone_info *)v6);
    if ( refreshed )
    {
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        WPP_SF_sd(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0x29u,
          (__int64)&WPP_94ace1326352386894146b7c4d888c88_Traceguids,
          *(const char **)(v6 + 16));
      }
      RpcUtil_SwitchSecurityContext(1);
      goto LABEL_53;
    }
    RpcUtil_SwitchSecurityContext(1);
    v21 = v6;
    if ( *(_QWORD *)(v6 + 328) )
      v21 = *(_QWORD *)(v6 + 328);
    Lock_ReleaseWrite(*(_QWORD *)(v21 + 312));
    v32 = 0;
    if ( (unsigned int)Ds_ZonePollAndUpdate(v6, 1)
      && WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_s(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x2Au,
        (__int64)&WPP_94ace1326352386894146b7c4d888c88_Traceguids,
        *(const char **)(v6 + 16));
    }
    goto LABEL_62;
  }
  refreshed = 9611;
LABEL_39:
  if ( v6 && *(_DWORD *)(v6 + 372) )
  {
    if ( !refreshed && (Microsoft_Windows_DNSServerEnableBits & 0x20000000) != 0 )
    {
      v19 = *(const unsigned __int16 ***)(v6 + 200);
      if ( v19 )
        v20 = *v19;
      else
        v20 = L".";
      v27 = *(const unsigned __int16 **)(v6 + 192);
      v28 = *(const unsigned __int16 **)(v6 + 24);
      v29 = v33;
      if ( v27 )
        v15 = v27;
      Template_szzz((__int64)v15, (__int64)v20, v33, v28, v15, v20);
      goto LABEL_106;
    }
  }
  else if ( !refreshed && (dword_1401B9104 & 0x20) != 0 )
  {
    if ( !v6 || (v30 = *(const unsigned __int16 **)(v6 + 192)) == 0i64 )
      v30 = L"Default";
    v29 = v33;
    Template_qsz((__int64)L"Default", v14, 255, v33, v30);
    goto LABEL_106;
  }
  v29 = v33;
LABEL_106:
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_sd(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x2Bu,
      (__int64)&WPP_94ace1326352386894146b7c4d888c88_Traceguids,
      v29);
  }
  return refreshed;
}
// 140096ABE: variable 'v14' is possibly undefined
// 1401871B0: using guessed type __int128 DNS_EVENT_CACHESCOPE_FLUSHED;
// 140188260: using guessed type wchar_t aDefault_1[8];
// 1401B8C48: using guessed type __int64 g_pTrustAnchorsZone;
// 1401B9100: using guessed type int Microsoft_Windows_DNSServerEnableBits;
// 1401B9104: using guessed type int dword_1401B9104;
// 1401B991C: using guessed type int dword_1401B991C;
// 140096680: using guessed type unsigned int var_6C[3];
