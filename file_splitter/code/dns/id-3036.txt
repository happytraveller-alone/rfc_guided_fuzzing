//----- (000000014015C960) ----------------------------------------------------
void **__fastcall TLSA_RecordBuildW(int a1, __int64 a2)
{
  void **Record; // rdi
  char *v4; // rsi
  __int64 v5; // rbx
  DWORD v6; // ecx
  char *v7; // rax
  int v8; // eax
  void **result; // rax
  int v10; // [rsp+40h] [rbp+8h] BYREF

  Record = 0i64;
  v4 = 0i64;
  if ( a1 != 4 )
    goto LABEL_11;
  v5 = -1i64;
  do
    ++v5;
  while ( *(_WORD *)(*(_QWORD *)(a2 + 24) + 2 * v5) );
  v10 = v5;
  Record = (void **)Dns_AllocateRecordEx((unsigned __int16)(v5 + 9));
  if ( !Record
    || (*((_BYTE *)Record + 32) = wcstoul(*(const wchar_t **)a2, 0i64, 10),
        *((_BYTE *)Record + 33) = wcstoul(*(const wchar_t **)(a2 + 8), 0i64, 10),
        *((_BYTE *)Record + 34) = wcstoul(*(const wchar_t **)(a2 + 16), 0i64, 10),
        v7 = (char *)Dns_StringCopyAllocate(*(char **)(a2 + 24), 0, 1i64, 2),
        (v4 = v7) == 0i64) )
  {
    v6 = 14;
LABEL_12:
    SetLastError(v6);
    Dns_Free(v4);
    Dns_RecordFree(Record);
    return 0i64;
  }
  if ( Record == (void **)-41i64 )
  {
    v8 = 13;
  }
  else
  {
    v8 = buildByteBufferFromHexString((__int64)Record + 41, &v10, v7, (_BYTE *)Record + 41);
    LOWORD(v5) = v10;
  }
  if ( v8 )
  {
LABEL_11:
    v6 = 13;
    goto LABEL_12;
  }
  Dns_Free(v4);
  *((_WORD *)Record + 18) = v5;
  result = Record;
  *((_WORD *)Record + 9) = v5 + 3;
  return result;
}
