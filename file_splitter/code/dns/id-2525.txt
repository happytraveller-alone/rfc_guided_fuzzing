//----- (000000014012E224) ----------------------------------------------------
__int64 __fastcall DnsSign::CCNGAlgorithmManager::GetHashSizeByDigestType(
        DnsSign::CCNGAlgorithmManager *this,
        __int64 a2)
{
  unsigned int v2; // ebx
  char v4[56]; // [rsp+28h] [rbp-80h] BYREF
  char pExceptionObject[56]; // [rsp+60h] [rbp-48h] BYREF

  v2 = (unsigned __int8)a2;
  if ( (unsigned __int8)a2 == 1 )
    return (unsigned __int16)word_1401B84A8;
  if ( (unsigned __int8)a2 == 2 )
    return (unsigned __int16)word_1401B84AA;
  if ( (unsigned __int8)a2 != 4 )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 7) & 0x100000) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 25) >= 4u )
    {
      WPP_SF_D(
        *((_QWORD *)WPP_GLOBAL_Control + 2),
        0xDu,
        (__int64)&WPP_a9354bd5cd823ab7126e1b8d4348d392_Traceguids,
        (unsigned __int8)a2);
    }
    DnsSign::CRunTimeException::CRunTimeException((DnsSign::CRunTimeException *)v4, a2, 27);
    DnsSign::CException::AppendErrorMessageByID((DnsSign::CException *)v4, 0xD6DBBu, v2);
    DnsSign::CRunTimeException::CRunTimeException(
      (DnsSign::CRunTimeException *)pExceptionObject,
      (const struct DnsSign::CRunTimeException *)v4);
    CxxThrowException_0(pExceptionObject, (_ThrowInfo *)&TI2_AVCRunTimeException_DnsSign__);
  }
  return (unsigned __int16)word_1401B84AE;
}
// 14012E2A9: variable 'a2' is possibly undefined
// 1401B84A8: using guessed type __int16 word_1401B84A8;
// 1401B84AA: using guessed type __int16 word_1401B84AA;
// 1401B84AE: using guessed type __int16 word_1401B84AE;
