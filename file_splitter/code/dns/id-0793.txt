//----- (000000014006F088) ----------------------------------------------------
_DWORD *__fastcall RR_CreateSoa(__int64 a1, __int64 a2, char *a3, unsigned __int8 *a4)
{
  unsigned __int8 *v7; // rsi
  char *v8; // rdi
  char v10; // cl
  char *v11; // rax
  CHAR *v12; // rdx
  CHAR v13; // al
  unsigned __int8 *v14; // rbp
  _DWORD *v15; // rax
  _DWORD *v16; // rdi
  u_long v17; // eax
  __int16 v18; // [rsp+30h] [rbp-148h] BYREF
  char v19; // [rsp+32h] [rbp-146h]

  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 1) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_qs(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0xFu,
      (__int64)&WPP_103a918d359034d16f977c36c11204c8_Traceguids,
      a1,
      a3);
  }
  if ( !a1 )
  {
    v18 = 1;
    v8 = "hostmaster";
    v19 = 0;
    if ( a3 )
      v8 = a3;
    if ( !v8 || !(unsigned int)Name_AppendDottedNameToCountName((unsigned __int8 *)&v18, v8) )
    {
      v10 = *v8;
      v11 = v8;
      while ( v10 )
      {
        if ( v10 == 46 && v11 != v8 && *(v11 - 1) != 92 )
          goto LABEL_24;
        v10 = *++v11;
      }
      v12 = (CHAR *)Str;
      do
      {
        v13 = *v12;
        if ( !*v12 )
        {
          v12 = 0i64;
          goto LABEL_22;
        }
        ++v12;
      }
      while ( v13 != 46 );
      if ( !*v12 )
        goto LABEL_24;
LABEL_22:
      if ( !v12 || !(unsigned int)Name_AppendDottedNameToCountName((unsigned __int8 *)&v18, v12) )
      {
LABEL_24:
        v7 = (unsigned __int8 *)&v18;
        goto LABEL_25;
      }
    }
    return 0i64;
  }
  v7 = (unsigned __int8 *)(a1 + *(unsigned __int8 *)(a1 + 76) + 78i64);
LABEL_25:
  v14 = (unsigned __int8 *)&g_ServerDbaseName;
  if ( a4 )
    v14 = a4;
  v15 = RR_AllocateEx(*v7 + 2 + *v14 + 22, 0, 0x21u);
  v16 = v15;
  if ( !v15 )
    return 0i64;
  if ( a1 )
  {
    v15[14] = *(_DWORD *)(a1 + 56);
    v15[15] = *(_DWORD *)(a1 + 60);
    v15[16] = *(_DWORD *)(a1 + 64);
    v15[17] = *(_DWORD *)(a1 + 68);
    v17 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    v15[14] = htonl(1u);
    v16[15] = htonl(0x384u);
    v16[16] = htonl(0x258u);
    v16[17] = htonl(0x15180u);
    v17 = htonl(0xE10u);
  }
  v16[6] = 0;
  *((_WORD *)v16 + 5) |= 0x40u;
  v16[18] = v17;
  *((_BYTE *)v16 + 8) = -16;
  *((_WORD *)v16 + 6) = 6;
  v16[5] = v16[18];
  Name_CopyCountName(v16 + 19, v14);
  Name_CopyCountName((char *)v16 + *((unsigned __int8 *)v16 + 76) + 78, v7);
  return v16;
}
// 1401C86C0: using guessed type char g_ServerDbaseName;
