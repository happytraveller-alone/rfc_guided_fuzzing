//----- (000000014006BAFC) ----------------------------------------------------
__int64 Plugin_Initialize()
{
  unsigned int LastError; // ebx
  int v1; // ebp
  HMODULE Library; // rax
  CDnsClientSubnetRecordsTrie *v3; // rcx
  unsigned __int16 v4; // dx
  FARPROC ProcAddress; // rax
  int v6; // eax
  const wchar_t *v7; // rax
  __int64 v8; // rcx

  LastError = 0;
  v1 = 0;
  if ( lpLibFileName && *lpLibFileName )
  {
    Plugin_Cleanup();
    Library = LoadLibraryExW(lpLibFileName, 0i64, 0);
    g_hServerLevelPluginModule = Library;
    if ( !Library )
    {
      LastError = GetLastError();
      if ( (qword_1401B9780 & 0x100000000000000i64) != 0 && (unsigned int)Log_EnterLock() )
      {
        g_pszCurrentLogLevelString = (__int64)"PLUGIN";
        Log_Printf("Error %d loading plugin DLL %S\n", LastError, lpLibFileName);
        g_pszCurrentLogLevelString = 0i64;
        Log_LeaveLock();
      }
      v3 = WPP_GLOBAL_Control;
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 1) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        v4 = 10;
LABEL_11:
        WPP_SF_DS(
          *((_QWORD *)v3 + 7),
          v4,
          (__int64)&WPP_2c132243eb273534b128a6dd6bc8e6e2_Traceguids,
          LastError,
          (__int64)lpLibFileName);
LABEL_64:
        v3 = WPP_GLOBAL_Control;
        goto LABEL_65;
      }
      goto LABEL_65;
    }
    g_pfnPluginInit = (__int64 (__fastcall *)(_QWORD, _QWORD))GetProcAddress(Library, "DnsPluginInitialize");
    if ( !g_pfnPluginInit )
    {
      LastError = GetLastError();
      if ( (qword_1401B9780 & 0x100000000000000i64) != 0 && (unsigned int)Log_EnterLock() )
      {
        g_pszCurrentLogLevelString = (__int64)"PLUGIN";
        Log_Printf("Error %d loading DnsPluginInitialize from DLL %S\n", LastError, lpLibFileName);
        g_pszCurrentLogLevelString = 0i64;
        Log_LeaveLock();
      }
      v3 = WPP_GLOBAL_Control;
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 1) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        v4 = 11;
        goto LABEL_11;
      }
LABEL_65:
      if ( LastError )
        goto LABEL_85;
      goto LABEL_66;
    }
    g_pfnPluginCleanup = (__int64)GetProcAddress(g_hServerLevelPluginModule, "DnsPluginCleanup");
    if ( !g_pfnPluginCleanup )
    {
      LastError = GetLastError();
      if ( (qword_1401B9780 & 0x100000000000000i64) != 0 && (unsigned int)Log_EnterLock() )
      {
        g_pszCurrentLogLevelString = (__int64)"PLUGIN";
        Log_Printf("Error %d loading DnsPluginCleanup from DLL %S\n", LastError, lpLibFileName);
        g_pszCurrentLogLevelString = 0i64;
        Log_LeaveLock();
      }
      v3 = WPP_GLOBAL_Control;
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 1) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        v4 = 12;
        goto LABEL_11;
      }
      goto LABEL_65;
    }
    g_pfnPluginDnsQuery = (__int64)GetProcAddress(g_hServerLevelPluginModule, "DnsPluginQuery");
    ProcAddress = GetProcAddress(g_hServerLevelPluginModule, "DnsPluginQuery2");
    g_pfnPluginDnsQuery2 = (__int64)ProcAddress;
    if ( g_pfnPluginDnsQuery || ProcAddress )
    {
      v1 = 1;
    }
    else
    {
      LastError = GetLastError();
      if ( (qword_1401B9780 & 0x100000000000000i64) != 0 && (unsigned int)Log_EnterLock() )
      {
        g_pszCurrentLogLevelString = (__int64)"PLUGIN";
        Log_Printf("Error %d loading DnsPluginQuery or DnsPluginQuery2 from DLL %S\n", LastError, lpLibFileName);
        g_pszCurrentLogLevelString = 0i64;
        Log_LeaveLock();
      }
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 1) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        WPP_SF_DS(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0xDu,
          (__int64)&WPP_2c132243eb273534b128a6dd6bc8e6e2_Traceguids,
          LastError,
          (__int64)lpLibFileName);
      }
    }
    if ( g_pfnPluginDnsQuery && (dword_1401B9144 & 0x8000) != 0 )
      TemplateEventDescriptor(Microsoft_Windows_DNS_Server_ServiceHandle, &DNS_EVENT_V1_PLUGIN_IMPLEMENTED);
    if ( g_pfnPluginDnsQuery2 && (dword_1401B9144 & 0x8000) != 0 )
      TemplateEventDescriptor(Microsoft_Windows_DNS_Server_ServiceHandle, &DNS_EVENT_V2_PLUGIN_IMPLEMENTED);
    g_pfnPluginDnsQuery3 = (__int64)GetProcAddress(g_hServerLevelPluginModule, "DnsPluginQueryZoneScope");
    if ( g_pfnPluginDnsQuery3 )
    {
      v1 = 1;
      if ( (dword_1401B9144 & 0x8000) != 0 )
        TemplateEventDescriptor(Microsoft_Windows_DNS_Server_ServiceHandle, &DNS_EVENT_V3_PLUGIN_IMPLEMENTED);
    }
    else
    {
      LastError = GetLastError();
      if ( (qword_1401B9780 & 0x100000000000000i64) != 0 && (unsigned int)Log_EnterLock() )
      {
        g_pszCurrentLogLevelString = (__int64)"PLUGIN";
        Log_Printf("Error %d loading DnsPluginQueryZoneScope from DLL %S\n", LastError, lpLibFileName);
        g_pszCurrentLogLevelString = 0i64;
        Log_LeaveLock();
      }
    }
    g_pfnPluginDnsQuery4 = (__int64)GetProcAddress(g_hServerLevelPluginModule, "DnsPluginQueryServerScope");
    if ( g_pfnPluginDnsQuery4 )
    {
      v1 = 1;
      if ( (dword_1401B9144 & 0x8000) != 0 )
        TemplateEventDescriptor(Microsoft_Windows_DNS_Server_ServiceHandle, &DNS_EVENT_SERVERSCOPE_PLUGIN_IMPLEMENTED);
    }
    else
    {
      LastError = GetLastError();
      if ( (qword_1401B9780 & 0x100000000000000i64) != 0 && (unsigned int)Log_EnterLock() )
      {
        g_pszCurrentLogLevelString = (__int64)"PLUGIN";
        Log_Printf("Error %d loading DnsPluginQueryServerScope from DLL %S\n", LastError, lpLibFileName);
        g_pszCurrentLogLevelString = 0i64;
        Log_LeaveLock();
      }
    }
    g_pfnPluginDnsQuery5 = (__int64)GetProcAddress(g_hServerLevelPluginModule, "DnsPluginQueryCacheScope");
    if ( g_pfnPluginDnsQuery5 )
    {
      v1 = 1;
      if ( (dword_1401B9144 & 0x8000) == 0 )
        goto LABEL_63;
      TemplateEventDescriptor(Microsoft_Windows_DNS_Server_ServiceHandle, &DNS_EVENT_CACHESCOPE_PLUGIN_IMPLEMENTED);
    }
    else
    {
      LastError = GetLastError();
      if ( (qword_1401B9780 & 0x100000000000000i64) != 0 && (unsigned int)Log_EnterLock() )
      {
        g_pszCurrentLogLevelString = (__int64)"PLUGIN";
        Log_Printf("Error %d loading DnsPluginQueryCacheScope from DLL %S\n", LastError, lpLibFileName);
        g_pszCurrentLogLevelString = 0i64;
        Log_LeaveLock();
      }
    }
    if ( !v1 )
      goto LABEL_64;
LABEL_63:
    LastError = 0;
    goto LABEL_64;
  }
LABEL_66:
  if ( g_pfnPluginInit )
  {
    LastError = g_pfnPluginInit(pluginAllocator, pluginFree);
    if ( LastError )
    {
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 1) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        WPP_SF_DS(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0xEu,
          (__int64)&WPP_2c132243eb273534b128a6dd6bc8e6e2_Traceguids,
          LastError,
          (__int64)lpLibFileName);
      }
      Plugin_Cleanup();
      goto LABEL_84;
    }
  }
  if ( QueryPerformanceFrequency(&g_lQCFrequency) )
  {
    if ( g_lQCFrequency.QuadPart )
    {
      g_fQPCounterAvailable = 1;
      goto LABEL_84;
    }
    v3 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 1) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0xFu, (__int64)&WPP_2c132243eb273534b128a6dd6bc8e6e2_Traceguids);
LABEL_84:
      v3 = WPP_GLOBAL_Control;
    }
  }
  else
  {
    v6 = GetLastError();
    v3 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 1) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_D(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x10u,
        (__int64)&WPP_2c132243eb273534b128a6dd6bc8e6e2_Traceguids,
        v6);
      goto LABEL_84;
    }
  }
LABEL_85:
  if ( lpLibFileName
    && v3 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)v3 + 68) & 1) != 0
    && *((_BYTE *)v3 + 65) >= 4u )
  {
    v7 = L"NULL";
    v8 = *((_QWORD *)v3 + 7);
    if ( *lpLibFileName )
      v7 = lpLibFileName;
    WPP_SF_DS(v8, 0x11u, (__int64)&WPP_2c132243eb273534b128a6dd6bc8e6e2_Traceguids, LastError, (__int64)v7);
  }
  return LastError;
}
// 14006BAF0: using guessed type __int64 __fastcall pluginFree();
// 140185140: using guessed type __int64 (__fastcall *_guard_dispatch_icall_fptr)(_QWORD, _QWORD);
// 140186258: using guessed type EVENT_DESCRIPTOR DNS_EVENT_V1_PLUGIN_IMPLEMENTED;
// 1401867C8: using guessed type EVENT_DESCRIPTOR DNS_EVENT_SERVERSCOPE_PLUGIN_IMPLEMENTED;
// 140186838: using guessed type EVENT_DESCRIPTOR DNS_EVENT_V2_PLUGIN_IMPLEMENTED;
// 140186C80: using guessed type EVENT_DESCRIPTOR DNS_EVENT_V3_PLUGIN_IMPLEMENTED;
// 140186F60: using guessed type EVENT_DESCRIPTOR DNS_EVENT_CACHESCOPE_PLUGIN_IMPLEMENTED;
// 1401B8F28: using guessed type __int64 g_pszCurrentLogLevelString;
// 1401B8FC8: using guessed type __int64 g_pfnPluginDnsQuery4;
// 1401B8FD0: using guessed type __int64 g_pfnPluginDnsQuery;
// 1401B8FD8: using guessed type __int64 g_pfnPluginDnsQuery2;
// 1401B8FE8: using guessed type int g_fQPCounterAvailable;
// 1401B8FF0: using guessed type __int64 g_pfnPluginDnsQuery5;
// 1401B8FF8: using guessed type __int64 g_pfnPluginDnsQuery3;
// 1401B9000: using guessed type __int64 g_pfnPluginCleanup;
// 1401B9008: using guessed type __int64 (__fastcall *g_pfnPluginInit)(_QWORD, _QWORD);
// 1401B9144: using guessed type int dword_1401B9144;
// 1401B9780: using guessed type __int64 qword_1401B9780;
