//----- (00000001400605E0) ----------------------------------------------------
ULONG __fastcall Template_zszqqz(
        __int64 a1,
        __int64 a2,
        const unsigned __int16 *a3,
        const char *a4,
        const unsigned __int16 *a5,
        char a6,
        char a7,
        const unsigned __int16 *a8)
{
  __int64 v8; // rdx
  int v9; // r10d
  __int64 v10; // rax
  ULONG v11; // ecx
  const wchar_t *v12; // r11
  const wchar_t *v13; // rax
  __int64 v14; // rcx
  int v15; // ecx
  const char *v16; // rax
  __int64 v17; // rax
  int v18; // r8d
  const wchar_t *v19; // rax
  bool v20; // zf
  struct _EVENT_DATA_DESCRIPTOR UserData; // [rsp+20h] [rbp-39h] BYREF
  const char *v23; // [rsp+30h] [rbp-29h]
  int v24; // [rsp+38h] [rbp-21h]
  int v25; // [rsp+3Ch] [rbp-1Dh]
  const wchar_t *v26; // [rsp+40h] [rbp-19h]
  int v27; // [rsp+48h] [rbp-11h]
  int v28; // [rsp+4Ch] [rbp-Dh]
  char *v29; // [rsp+50h] [rbp-9h]
  __int64 v30; // [rsp+58h] [rbp-1h]
  char *v31; // [rsp+60h] [rbp+7h]
  __int64 v32; // [rsp+68h] [rbp+Fh]
  const wchar_t *v33; // [rsp+70h] [rbp+17h]
  int v34; // [rsp+78h] [rbp+1Fh]
  int v35; // [rsp+7Ch] [rbp+23h]

  v8 = -1i64;
  v9 = 10;
  if ( a3 )
  {
    v10 = -1i64;
    do
      ++v10;
    while ( a3[v10] );
    v11 = 2 * v10 + 2;
  }
  else
  {
    v11 = 10;
  }
  UserData.Size = v11;
  v12 = L"NULL";
  UserData.Reserved = 0;
  v13 = L"NULL";
  if ( a3 )
    v13 = a3;
  UserData.Ptr = (ULONGLONG)v13;
  if ( a4 )
  {
    v14 = -1i64;
    do
      ++v14;
    while ( a4[v14] );
    v15 = v14 + 1;
  }
  else
  {
    v15 = 5;
  }
  v24 = v15;
  v16 = "NULL";
  if ( a4 )
    v16 = a4;
  v25 = 0;
  v23 = v16;
  if ( a5 )
  {
    v17 = -1i64;
    do
      ++v17;
    while ( a5[v17] );
    v18 = 2 * v17 + 2;
  }
  else
  {
    v18 = 10;
  }
  v27 = v18;
  v19 = L"NULL";
  v28 = 0;
  if ( a5 )
    v19 = a5;
  v30 = 4i64;
  v26 = v19;
  v29 = &a6;
  v31 = &a7;
  v32 = 4i64;
  v20 = a8 == 0i64;
  if ( a8 )
  {
    do
      ++v8;
    while ( a8[v8] );
    v9 = 2 * v8 + 2;
    v20 = a8 == 0i64;
  }
  if ( !v20 )
    v12 = a8;
  v34 = v9;
  v33 = v12;
  v35 = 0;
  return EventWrite(
           Microsoft_Windows_DNSServerHandle,
           &DNS_EVENT_UPDATE_ZONE_LEVEL_POLICY_MODIFY_SCOPE_WEIGHT,
           6u,
           &UserData);
}
