//----- (0000000140065154) ----------------------------------------------------
void __fastcall sendNbstatResponse(struct _DNS_MSGINFO *a1, const CHAR *a2)
{
  __int64 v3; // r9
  __int64 v4; // r13
  CDnsClientSubnetRecordsTrie *v5; // rcx
  __int64 v6; // r9
  __int64 v7; // rax
  _BYTE *v8; // r12
  char *v9; // rax
  __int64 BytesInOemString; // rdx
  int v11; // ecx
  PCCH v12; // r8
  unsigned __int8 v14; // al
  DWORD v15; // edx
  char *v16; // rax
  DWORD v17; // eax
  unsigned int v18; // eax
  const char *v19; // rax
  _BYTE *v20; // rax
  unsigned __int64 v21; // r8
  CHAR *v22; // rdx
  __int64 v23; // rax
  int v24; // r13d
  char *v25; // rax
  __int16 v26; // ax
  unsigned __int16 v27; // dx
  char *v28; // rax
  unsigned int v29; // eax
  __int64 *v30; // r13
  ULONG BytesInUnicodeString[2]; // [rsp+60h] [rbp-79h] BYREF
  __int64 *v32; // [rsp+68h] [rbp-71h] BYREF
  PCCH OemString; // [rsp+70h] [rbp-69h]
  __int64 v34; // [rsp+78h] [rbp-61h]
  _QWORD *v35[2]; // [rsp+80h] [rbp-59h] BYREF
  WCHAR UnicodeString[16]; // [rsp+90h] [rbp-49h] BYREF
  char v37[64]; // [rsp+B0h] [rbp-29h] BYREF

  OemString = a2;
  _InterlockedAdd(&dword_1401C7C34, 1u);
  _InterlockedAdd((volatile signed __int32 *)pcWinsReverseResponseSent, 1u);
  v3 = *((_QWORD *)a1 + 26);
  v4 = *(_QWORD *)(v3 + 344);
  if ( v4 )
  {
    if ( v4 == *((_QWORD *)a1 + 164) )
    {
LABEL_12:
      v5 = WPP_GLOBAL_Control;
      goto LABEL_13;
    }
    v5 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x10000) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_sqqq(*((_QWORD *)WPP_GLOBAL_Control + 7), (__int64)a2, 0i64, *(const char **)(v3 + 16));
      goto LABEL_12;
    }
LABEL_13:
    while ( *(_WORD *)(v4 + 12) != 0xFF02
         || *(_QWORD *)v4 == 0xFE0B0BEFFE0B0BEFui64
         || (*(_WORD *)(v4 + 10) & 0x200) != 0 )
    {
      v6 = *((_QWORD *)a1 + 26);
      v7 = *(_QWORD *)(v6 + 344);
      if ( v4 == v7 )
        goto LABEL_46;
      v4 = *(_QWORD *)(v6 + 344);
      if ( !v7 )
        goto LABEL_6;
      if ( v5 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)v5 + 17) & 0x10000) != 0
        && *((_BYTE *)v5 + 65) >= 4u )
      {
        WPP_SF_sq(
          *((_QWORD *)v5 + 7),
          0x20u,
          (__int64)&WPP_fc3a6397bf853e2fe940ea821e43295b_Traceguids,
          *(const char **)(v6 + 16));
        v5 = WPP_GLOBAL_Control;
      }
    }
    v8 = (_BYTE *)*((_QWORD *)a1 + 24);
    if ( !v8 )
    {
      v8 = Lookup_ZoneNode(*((_QWORD *)a1 + 26), (unsigned __int8 *)a1 + 6316, (__int64)a1, 0i64, 16, 0i64, 0i64, 0i64);
      if ( !v8 )
        goto LABEL_45;
      v5 = WPP_GLOBAL_Control;
    }
    if ( v5 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)v5 + 17) & 0x10000) != 0
      && *((_BYTE *)v5 + 65) >= 4u )
    {
      v9 = Dbg_NodeName((__int64)v8);
      WPP_SF_s(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x21u,
        (__int64)&WPP_fc3a6397bf853e2fe940ea821e43295b_Traceguids,
        v9);
    }
    BytesInOemString = -1i64;
    do
      ++BytesInOemString;
    while ( OemString[BytesInOemString] );
    v34 = BytesInOemString;
    v11 = BytesInOemString;
    v12 = OemString;
    do
    {
      if ( !v11-- )
        goto LABEL_55;
      v14 = *v12++;
    }
    while ( v14 < 0x80u );
    if ( !RtlOemToUnicodeN(UnicodeString, 0x1Eu, BytesInUnicodeString, OemString, BytesInOemString) )
    {
      v15 = BytesInUnicodeString[0] >> 1;
      BytesInUnicodeString[0] >>= 1;
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x10000) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        v16 = FormatLabelW(v15, UnicodeString);
        WPP_SF_sSD(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0x22u,
          (__int64)&WPP_fc3a6397bf853e2fe940ea821e43295b_Traceguids,
          OemString,
          (__int64)v16);
        v15 = BytesInUnicodeString[0];
      }
      v17 = CharLowerBuffW(UnicodeString, v15);
      if ( v17 == BytesInUnicodeString[0] )
      {
        v18 = DnsUnicodeToUtf8(UnicodeString, BytesInUnicodeString[0], v37, 63i64);
        LODWORD(v32) = v18;
        if ( !v18 )
        {
          v5 = WPP_GLOBAL_Control;
          if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control )
            goto LABEL_50;
          if ( (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x10000) != 0 && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
          {
            WPP_SF_(
              *((_QWORD *)WPP_GLOBAL_Control + 7),
              0x23u,
              (__int64)&WPP_fc3a6397bf853e2fe940ea821e43295b_Traceguids);
            goto LABEL_45;
          }
          goto LABEL_46;
        }
        LODWORD(v34) = v18;
        OemString = v37;
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x10000) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
        {
          v19 = (const char *)FormatLabelA(v18, v37);
          WPP_SF_sd(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            0x24u,
            (__int64)&WPP_fc3a6397bf853e2fe940ea821e43295b_Traceguids,
            v19);
        }
LABEL_55:
        v20 = RR_AllocateEx(*(unsigned __int8 *)(v4 + 68) + 2 + (unsigned __int16)v34 + 1, 0, 0x25u);
        v32 = (__int64 *)v20;
        if ( !v20 )
          goto LABEL_45;
        v21 = (unsigned int)v34;
        v22 = (CHAR *)OemString;
        *((_WORD *)v20 + 6) = 12;
        *((_DWORD *)v20 + 5) = *(_DWORD *)(v4 + 64) + *((_DWORD *)a1 + 142);
        *(_QWORD *)BytesInUnicodeString = v20 + 56;
        v20[8] = -63;
        if ( (unsigned int)Name_ConvertFileNameToCountNameEx(v20 + 56, v22, (_WORD *)v21, 1) == 123
          && WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x10000) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
        {
          WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x25u, (__int64)&WPP_fc3a6397bf853e2fe940ea821e43295b_Traceguids);
        }
        if ( (unsigned int)Name_AppendCountName(*(unsigned __int8 **)BytesInUnicodeString, (unsigned __int8 *)(v4 + 68))
          && WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x10000) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
        {
          WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x26u, (__int64)&WPP_fc3a6397bf853e2fe940ea821e43295b_Traceguids);
        }
        v23 = *((_QWORD *)a1 + 26);
        if ( *(_DWORD *)(v23 + 372) == 1 && (*(_BYTE *)(v23 + 1040) & 4) != 0 )
        {
          v35[0] = v32;
          v35[1] = v32;
          v24 = DnsOls_ProcessWinsResponse((__int64)a1, (__int64)v8, v35);
          if ( !v24 )
          {
            LODWORD(v32) = 0;
            if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
              && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x10000) != 0
              && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
            {
              v25 = Dbg_NodeName((__int64)v8);
              WPP_SF_sq(
                *((_QWORD *)WPP_GLOBAL_Control + 7),
                0x27u,
                (__int64)&WPP_fc3a6397bf853e2fe940ea821e43295b_Traceguids,
                v25);
            }
            if ( !*((_QWORD *)a1 + 24) )
            {
              *((_QWORD *)a1 + 58) = v8;
              *((_QWORD *)a1 + 25) = v8;
              *((_QWORD *)a1 + 24) = v8;
              *((_QWORD *)a1 + 31) = 0i64;
            }
            v26 = Wire_WriteRecordsAtNodeToMessage(
                    (__int64)a1,
                    *((_QWORD *)a1 + 24),
                    0xCu,
                    0i64,
                    *((_WORD *)a1 + 221),
                    0,
                    &v32);
            if ( (_DWORD)v32 )
            {
              v5 = WPP_GLOBAL_Control;
              if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control )
                goto LABEL_50;
              if ( (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x10000) == 0 || *((_BYTE *)WPP_GLOBAL_Control + 65) < 4u )
                goto LABEL_46;
              v27 = 40;
LABEL_80:
              WPP_SF_q(*((_QWORD *)v5 + 7), v27, (__int64)&WPP_fc3a6397bf853e2fe940ea821e43295b_Traceguids, a1);
              goto LABEL_45;
            }
            if ( !v26 )
            {
              v5 = WPP_GLOBAL_Control;
              if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control )
              {
                if ( (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x10000) != 0 && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
                {
                  v27 = 41;
                  goto LABEL_80;
                }
LABEL_46:
                if ( v5 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                  && (*((_DWORD *)v5 + 17) & 0x10000) != 0
                  && *((_BYTE *)v5 + 65) >= 2u )
                {
                  WPP_SF_q(*((_QWORD *)v5 + 7), 0x2Bu, (__int64)&WPP_fc3a6397bf853e2fe940ea821e43295b_Traceguids, a1);
                }
              }
LABEL_50:
              Reject_Request((__int64)a1, 2u, 0);
              return;
            }
LABEL_92:
            Send_Msg((__int64)a1, 0);
            return;
          }
          v5 = WPP_GLOBAL_Control;
          if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control )
            goto LABEL_50;
          if ( (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x10000) == 0 || *((_BYTE *)WPP_GLOBAL_Control + 65) < 2u )
            goto LABEL_46;
          v28 = Dbg_NodeName((__int64)v8);
          WPP_SF_Ds(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            0x2Au,
            (__int64)&WPP_fc3a6397bf853e2fe940ea821e43295b_Traceguids,
            v24,
            (__int64)v28);
        }
        else
        {
          v29 = *(_DWORD *)(v4 + 64);
          v30 = v32;
          RR_CacheSetAtNode(0i64, (__int64)v8, (__int64)v32, v32, v29, dword_1401B9714, 0, 0i64, 0, 0i64, 0i64, 0);
          if ( (unsigned int)Wire_AddResourceRecordToMessage((__int64)a1, 0i64, 0xCu, (__int64)v30, 0, 0i64) )
          {
            ++*((_WORD *)a1 + 3155);
            goto LABEL_92;
          }
        }
      }
    }
LABEL_45:
    v5 = WPP_GLOBAL_Control;
    goto LABEL_46;
  }
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x10000) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_sq(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x1Eu,
      (__int64)&WPP_fc3a6397bf853e2fe940ea821e43295b_Traceguids,
      *(const char **)(v3 + 16));
  }
LABEL_6:
  Send_NameError(a1, 0i64);
}
// 140183DA0: using guessed type __int64 __fastcall DnsUnicodeToUtf8(_QWORD, _QWORD, _QWORD, _QWORD);
// 1401B9714: using guessed type int dword_1401B9714;
// 1401C7C34: using guessed type int dword_1401C7C34;
// 1401C7C40: using guessed type __int64 pcWinsReverseResponseSent;
