//----- (000000014007A204) ----------------------------------------------------
__int64 __fastcall Remote_UpdateResponseTime(struct in_addr *a1, unsigned int a2, int a3, char a4)
{
  const char *v8; // rax
  struct in_addr *v9; // rbx
  __int64 v10; // rcx
  unsigned int v12[10]; // [rsp+30h] [rbp-28h] BYREF

  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x8000) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    v8 = DnsAddr_Ntoa(a1);
    WPP_SF_sdD(*((_QWORD *)WPP_GLOBAL_Control + 7), 0xFu, (__int64)&WPP_eab7c483710f366eae903c691df4ee49_Traceguids, v8);
  }
  v12[0] = -1;
  acquireUpdate(hRemoteLock, 0xFFFFFFFF, v12, 1);
  v9 = (struct in_addr *)Remote_FindOrCreate((__int64)a1, 1);
  if ( v9 )
  {
    v12[0] = -1;
    acquireWrite(hRemoteLock, 0xFFFFFFFF, v12);
    v9[20].S_un.S_addr = dword_1401B9714;
    if ( a3 )
    {
      v9[22].S_un.S_addr = 2147483639;
      Remote_UpdateEDNSState(v9, a4);
    }
    else
    {
      if ( !a2 )
        a2 = 1;
      ++v9[23].S_un.S_addr;
      if ( !v9[22].S_un.S_addr || a2 < v9[22].S_un.S_addr )
        v9[22].S_un.S_addr = a2;
    }
    v10 = hRemoteLock;
    v9[21].S_un.S_addr = (a2 + v9[21].S_un.S_addr) >> 1;
    Lock_ReleaseWrite(v10);
  }
  v12[0] = -1;
  return releaseUpdate(hRemoteLock, v12, 1);
}
// 1401B9028: using guessed type __int64 hRemoteLock;
// 1401B9714: using guessed type int dword_1401B9714;
