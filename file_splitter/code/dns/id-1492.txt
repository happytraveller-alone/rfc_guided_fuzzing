//----- (00000001400BBB10) ----------------------------------------------------
__int64 __fastcall Up_PrepareUpdateListForExecution(__int64 a1, __int64 a2, __int64 a3, char a4)
{
  CDnsClientSubnetRecordsTrie *v8; // rcx
  __int64 **v9; // rbx
  __int64 *v10; // rdi
  char *i; // rax
  int updated; // r9d
  CDnsClientSubnetRecordsTrie *v14; // rcx
  unsigned __int16 v15; // dx
  __int64 v16; // rdi
  __int64 v17; // rbx
  __int64 v18; // rax
  __int64 v19; // rax
  __int64 v20; // rax
  char v21; // si
  __int64 v22; // rcx
  __int64 v23; // rsi
  unsigned int v24; // [rsp+60h] [rbp+18h] BYREF

  v8 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_sd(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0xB1u,
      (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids,
      *(const char **)(a1 + 16));
    v8 = WPP_GLOBAL_Control;
  }
  v9 = *(__int64 ***)a3;
  if ( *(_QWORD *)a3 )
  {
    while ( 1 )
    {
      if ( g_fDnsServiceExit == 1 )
      {
        v14 = WPP_GLOBAL_Control;
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
        {
          v15 = 178;
          goto LABEL_43;
        }
        return 1167617i64;
      }
      v10 = v9[1];
      if ( (*((_DWORD *)v10 + 21) & 0x88880000) != -2004353024 )
        break;
LABEL_21:
      v9 = (__int64 **)*v9;
      if ( !v9 )
      {
        v8 = WPP_GLOBAL_Control;
        goto LABEL_23;
      }
    }
    for ( i = *(char **)(a3 + 16); i && *((__int64 **)i + 1) != v10; i = (char *)*((_QWORD *)i + 3) )
      ;
    if ( a2 )
    {
      if ( i )
        goto LABEL_20;
      i = *(char **)(a2 + 16);
      if ( !i )
      {
LABEL_18:
        i = NTree_CopyNode((unsigned __int8 *)v9[1]);
        if ( !i )
          return 2i64;
        *((_DWORD *)i + 18) = -1;
        *((_QWORD *)i + 1) = v10;
        *((_DWORD *)i + 21) = -2004353024;
        *((_QWORD *)i + 3) = *(_QWORD *)(a3 + 16);
        *(_QWORD *)(a3 + 16) = i;
        goto LABEL_20;
      }
      do
      {
        if ( *((__int64 **)i + 1) == v10 )
          break;
        i = (char *)*((_QWORD *)i + 3);
      }
      while ( i );
    }
    if ( !i )
      goto LABEL_18;
LABEL_20:
    v9[1] = (__int64 *)i;
    goto LABEL_21;
  }
LABEL_23:
  if ( (*(_BYTE *)(a1 + 388) & 1) != 0
    && (a4 & 1) == 0
    && (*(_DWORD *)(a1 + 372) != 1 || (*(_BYTE *)(a1 + 1040) & 4) == 0 || (*(_DWORD *)(a3 + 40) & 0x200000) == 0) )
  {
    if ( v8 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)v8 + 17) & 0x80000) != 0
      && *((_BYTE *)v8 + 65) >= 5u )
    {
      WPP_SF_s(
        *((_QWORD *)v8 + 7),
        0xB5u,
        (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids,
        *(const char **)(a1 + 16));
    }
    updated = Ds_UpdateNodeListFromDs(a1, *(_QWORD *)(a3 + 16), *(_DWORD *)(a3 + 40));
    if ( !updated )
      goto LABEL_37;
    v8 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_Ds(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0xB6u,
        (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids,
        updated,
        *(_QWORD *)(a1 + 16));
LABEL_37:
      v8 = WPP_GLOBAL_Control;
    }
  }
  v16 = *(_QWORD *)(a3 + 16);
  if ( v16 )
  {
    while ( g_fDnsServiceExit != 1 )
    {
      v17 = *(_QWORD *)(v16 + 8);
      if ( v17 )
        v18 = *(_QWORD *)(v17 + 56);
      else
        v18 = 0i64;
      v21 = 1;
      if ( v18 )
      {
        v19 = v17 ? *(_QWORD *)(v17 + 56) : 0i64;
        if ( *(_DWORD *)(v19 + 372) == 1 )
        {
          v20 = v17 ? *(_QWORD *)(v17 + 56) : 0i64;
          if ( (*(_BYTE *)(v20 + 1040) & 4) != 0 )
            v21 = 0;
        }
      }
      v24 = -1;
      acquireRead(DbaseLock, 0xFFFFFFFF, &v24);
      if ( (*(_BYTE *)(v17 + 92) & 1) != 0 )
        v23 = 0i64;
      else
        v23 = RR_ListCopy(v22, *(unsigned __int16 **)(v17 + 64), v21);
      v24 = -1;
      releaseRead(DbaseLock, &v24, 1);
      *(_QWORD *)(v16 + 64) = v23;
      *(_DWORD *)(v16 + 92) = *(_DWORD *)(v17 + 92) & 0x260133;
      v16 = *(_QWORD *)(v16 + 24);
      if ( !v16 )
      {
        v8 = WPP_GLOBAL_Control;
        goto LABEL_66;
      }
    }
    v14 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      v15 = 183;
LABEL_43:
      WPP_SF_(*((_QWORD *)v14 + 7), v15, (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids);
    }
    return 1167617i64;
  }
  else
  {
LABEL_66:
    if ( (*((_DWORD *)v8 + 17) & 0x80000) != 0 && *((_BYTE *)v8 + 65) >= 5u )
    {
      Dbg_UpdateList("Update list after prepare:", a3);
      v8 = WPP_GLOBAL_Control;
    }
    if ( v8 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)v8 + 17) & 0x80000) != 0
      && *((_BYTE *)v8 + 65) >= 4u )
    {
      WPP_SF_(*((_QWORD *)v8 + 7), 0xB8u, (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids);
    }
    return 0i64;
  }
}
// 1400BBDD5: variable 'v22' is possibly undefined
// 1401B9A40: using guessed type int g_fDnsServiceExit;
// 1401EC5E8: using guessed type __int64 DbaseLock;
