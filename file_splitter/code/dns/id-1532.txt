//----- (00000001400C09AC) ----------------------------------------------------
__int64 __fastcall Zone_Delete(struct _zone_info *a1, int a2, int a3, char a4, int a5)
{
  unsigned int v9; // r15d
  CDnsClientSubnetRecordsTrie *v10; // rcx
  const wchar_t *v11; // rsi
  const wchar_t **v12; // rax
  const wchar_t *v13; // r8
  int v14; // r13d
  const wchar_t **v16; // rax
  __int64 v17; // rcx
  const wchar_t **v18; // rax
  const wchar_t **v19; // rax
  __int64 v20; // rcx
  const wchar_t **v21; // rax
  unsigned int v22; // r9d
  __int64 *i; // rdi
  const wchar_t **v24; // rax
  const wchar_t *v25; // r8
  __int64 *j; // rax
  __int64 v27; // r9
  _BYTE *v28; // rcx
  __int64 v29; // rdx
  __int64 v30; // rdi
  const wchar_t **v31; // rax
  struct _zone_info *v32; // rsi
  unsigned int v33; // eax
  int RootHints; // eax
  __int64 v35; // rdi
  int v36; // esi
  const WCHAR **v37; // rax
  const WCHAR *v38; // rcx
  void *v39; // rcx
  int v40; // [rsp+30h] [rbp-58h]
  unsigned int v41; // [rsp+34h] [rbp-54h] BYREF
  unsigned int v42; // [rsp+38h] [rbp-50h] BYREF
  __int64 *v43; // [rsp+40h] [rbp-48h] BYREF
  __int64 v44[8]; // [rsp+48h] [rbp-40h] BYREF
  int v45; // [rsp+90h] [rbp+8h]
  int v46; // [rsp+98h] [rbp+10h]

  v46 = 0;
  v45 = 0;
  v40 = 0;
  v43 = 0i64;
  v9 = 0;
  v10 = WPP_GLOBAL_Control;
  v11 = L".";
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x10) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    v12 = (const wchar_t **)*((_QWORD *)a1 + 25);
    if ( v12 )
      v13 = *v12;
    else
      v13 = L".";
    WPP_SF_sS(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x1Fu,
      (__int64)&WPP_e9a0d5dea449334d7c383477da81f939_Traceguids,
      *((const char **)a1 + 2),
      (__int64)v13);
    v10 = WPP_GLOBAL_Control;
  }
  v14 = a2 & 0x10000000;
  if ( (a2 & 0x10000000) != 0 )
  {
    RpcUtil_SwitchSecurityContext(0);
    v10 = WPP_GLOBAL_Control;
  }
  if ( !*((_DWORD *)a1 + 93) )
  {
    if ( v10 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)v10 + 68) & 0x10) != 0
      && *((_BYTE *)v10 + 65) >= 4u )
    {
      WPP_SF_(*((_QWORD *)v10 + 7), 0x20u, (__int64)&WPP_e9a0d5dea449334d7c383477da81f939_Traceguids);
    }
LABEL_15:
    if ( v14 )
      RpcUtil_SwitchSecurityContext(1);
    return v9;
  }
  Zone_ListRemoveZone((__int64 *)a1);
  if ( _InterlockedCompareExchange((volatile signed __int32 *)a1 + 108, 1, 0) )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x10) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      v16 = (const wchar_t **)*((_QWORD *)a1 + 25);
      if ( v16 )
        v11 = *v16;
      WPP_SF_sS(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x21u,
        (__int64)&WPP_e9a0d5dea449334d7c383477da81f939_Traceguids,
        *((const char **)a1 + 2),
        (__int64)v11);
    }
    while ( *((char *)a1 + 428) < 0 && *((_DWORD *)a1 + 101) == GetCurrentThreadId() )
      Zone_UnlockAfterWriteEx((__int64)a1, 1, (__int64)"ds\\dns\\server\\server\\zone.c", 64);
    goto LABEL_15;
  }
  v17 = *((_QWORD *)a1 + 39);
  *((_DWORD *)a1 + 99) |= 0x1000u;
  v41 = -1;
  if ( (unsigned int)acquireWrite(v17, 0x493E0u, &v41) == -1 )
  {
    if ( *((_DWORD *)a1 + 93) != 1 || (v9 = 9622, (*((_BYTE *)a1 + 1040) & 1) == 0) )
      v9 = 9607;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x10) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      v18 = (const wchar_t **)*((_QWORD *)a1 + 25);
      if ( v18 )
        v11 = *v18;
      WPP_SF_sSD(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x22u,
        (__int64)&WPP_e9a0d5dea449334d7c383477da81f939_Traceguids,
        *((const char **)a1 + 2),
        (__int64)v11);
    }
    goto LABEL_63;
  }
  v40 = 1;
  if ( *((char *)a1 + 428) >= 0 || *((_DWORD *)a1 + 101) != GetCurrentThreadId() )
  {
    if ( (unsigned int)Zone_LockForWriteEx((__int64)a1, 2, 0xDBBA0u, (__int64)"ds\\dns\\server\\server\\zone.c", 118) )
    {
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x10) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        v19 = (const wchar_t **)*((_QWORD *)a1 + 25);
        if ( v19 )
          v11 = *v19;
        WPP_SF_sS(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0x23u,
          (__int64)&WPP_e9a0d5dea449334d7c383477da81f939_Traceguids,
          *((const char **)a1 + 2),
          (__int64)v11);
      }
LABEL_48:
      v9 = 9607;
LABEL_63:
      _InterlockedDecrement((volatile signed __int32 *)a1 + 108);
      *((_DWORD *)a1 + 99) &= ~0x1000u;
      Zone_ListInsertZone((__int64)a1);
      goto LABEL_140;
    }
    v45 = 1;
  }
  v20 = *((_QWORD *)a1 + 21);
  v42 = -1;
  if ( (unsigned int)acquireWrite(v20, 0x2710u, &v42) == -1 )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x10) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
    {
      v21 = (const wchar_t **)*((_QWORD *)a1 + 25);
      if ( v21 )
        v11 = *v21;
      WPP_SF_SS(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x24u,
        (__int64)&WPP_e9a0d5dea449334d7c383477da81f939_Traceguids,
        *((const unsigned __int16 **)a1 + 3),
        (__int64)v11);
    }
    goto LABEL_48;
  }
  v46 = 1;
  if ( *((_QWORD *)a1 + 23) )
  {
    v9 = ZoneScopes_LockAll((__int64)a1, 0, 60000, 0i64, &v43);
    if ( v9 )
    {
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x10) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
      {
        WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x25u, (__int64)&WPP_e9a0d5dea449334d7c383477da81f939_Traceguids);
      }
      goto LABEL_63;
    }
    for ( i = v43; i; i = (__int64 *)i[1] )
      ZoneScope_Delete((__int64)a1, *i, 0, v22);
  }
  Free_PolicyMap((__int64 *)a1 + 27, (char *)a1 + 256, (__int64)a1);
  Lock_TransferWrite(*((_QWORD *)a1 + 21));
  *((_BYTE *)a1 + 176) = 1;
  if ( a3 )
  {
    if ( v14 )
      RpcUtil_SwitchSecurityContext(1);
    DnsOls_CleanupForZoneDeletion(a1, a4);
    if ( v14 )
      RpcUtil_SwitchSecurityContext(0);
  }
  if ( (*((_BYTE *)a1 + 392) & 3) != 0 )
  {
    _InterlockedDecrement(&g_NumZonesAllowSecureUpdate);
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      v24 = (const wchar_t **)*((_QWORD *)a1 + 25);
      if ( v24 )
        v25 = *v24;
      else
        v25 = L".";
      WPP_SF_sSD(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x26u,
        (__int64)&WPP_e9a0d5dea449334d7c383477da81f939_Traceguids,
        *((const char **)a1 + 2),
        (__int64)v25);
    }
  }
  if ( a1 == (struct _zone_info *)g_pTrustAnchorsZone )
  {
    g_pTrustAnchorsZone = 0i64;
    EnterCriticalSection(&g_csRFC5011_Trust_Points);
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x100000) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 3u )
    {
      WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x56u, (__int64)&WPP_4831604f5a2431d08120905ab66c1365_Traceguids);
    }
    for ( j = *(__int64 **)qword_1401B9288;
          j != (__int64 *)qword_1401B9288;
          j = (__int64 *)*removeTrustPointFromGlobalList(v44, j, 0i64) )
    {
      ;
    }
    DNSSEC_Write5011State();
    LeaveCriticalSection(&g_csRFC5011_Trust_Points);
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x10) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x27u, (__int64)&WPP_e9a0d5dea449334d7c383477da81f939_Traceguids);
    }
  }
  Zone_TransferWriteLockEx((__int64)a1);
  Lock_TransferWrite(*((_QWORD *)a1 + 39));
  v27 = *((_QWORD *)a1 + 25);
  v28 = (_BYTE *)*((_QWORD *)a1 + 2);
  *((_BYTE *)a1 + 320) = 1;
  v30 = Lookup_ZoneTreeNodeFromDottedNameEx(v28, 0, 0x2000000, v27);
  if ( v30 )
  {
    v32 = 0i64;
    if ( *(struct _zone_info **)(g_Database + 56) == a1 )
      v32 = a1;
    Dbase_LockEx(0i64, 2, (__int64)"ds\\dns\\server\\server\\zone.c", 73);
    v33 = *(_DWORD *)(v30 + 92) & 0xFFFFFEFF;
    *(_DWORD *)(v30 + 92) = v33;
    if ( !v32 )
      *(_DWORD *)(v30 + 92) = v33 & 0xFFFFFFEF;
    *(_QWORD *)(v30 + 56) = 0i64;
    Dbase_UnlockEx(0i64, 2, (__int64)"ds\\dns\\server\\server\\zone.c", 80);
    if ( v32 )
    {
      if ( !*((_QWORD *)a1 + 25) )
      {
        RootHints = Zone_LoadRootHints();
        if ( RootHints )
        {
          if ( RootHints == 9607 || RootHints == 9622 )
          {
            if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
              && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x10) != 0
              && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
            {
              WPP_SF_(
                *((_QWORD *)WPP_GLOBAL_Control + 7),
                0x29u,
                (__int64)&WPP_e9a0d5dea449334d7c383477da81f939_Traceguids);
            }
          }
          else
          {
            if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
              && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x10) != 0
              && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
            {
              WPP_SF_(
                *((_QWORD *)WPP_GLOBAL_Control + 7),
                0x2Au,
                (__int64)&WPP_e9a0d5dea449334d7c383477da81f939_Traceguids);
            }
            v35 = *((_QWORD *)a1 + 18);
            v36 = *((_DWORD *)a1 + 93);
            *((_DWORD *)a1 + 93) = 0;
            *((_QWORD *)a1 + 18) = L"cache.dns";
            if ( (unsigned int)File_WriteZoneToFile((__int64)a1, 0i64, a2) )
            {
              if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x10) != 0
                && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
              {
                WPP_SF_(
                  *((_QWORD *)WPP_GLOBAL_Control + 7),
                  0x2Bu,
                  (__int64)&WPP_e9a0d5dea449334d7c383477da81f939_Traceguids);
              }
              Zone_LoadRootHints();
            }
            else if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                   && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x10) != 0
                   && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
            {
              WPP_SF_(
                *((_QWORD *)WPP_GLOBAL_Control + 7),
                0x2Cu,
                (__int64)&WPP_e9a0d5dea449334d7c383477da81f939_Traceguids);
            }
            *((_QWORD *)a1 + 18) = v35;
            *((_DWORD *)a1 + 93) = v36;
          }
        }
      }
    }
  }
  else if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
         && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x10) != 0
         && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    v31 = (const wchar_t **)*((_QWORD *)a1 + 25);
    if ( v31 )
      v11 = *v31;
    WPP_SF_sS(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x28u,
      (__int64)&WPP_e9a0d5dea449334d7c383477da81f939_Traceguids,
      *((const char **)a1 + 2),
      (__int64)v11);
  }
  v37 = (const WCHAR **)*((_QWORD *)a1 + 25);
  if ( v37 )
    v38 = *v37;
  else
    v38 = 0i64;
  Reg_DeleteZone(v38, v29, *((const unsigned __int16 **)a1 + 3));
  if ( *((_DWORD *)a1 + 93) == 1 )
  {
    v39 = (void *)*((_QWORD *)a1 + 122);
    if ( v39 )
    {
      CloseHandle(v39);
      *((_QWORD *)a1 + 122) = 0i64;
    }
    if ( *((_DWORD *)a1 + 93) == 1 && (*((_BYTE *)a1 + 1040) & 4) != 0 )
      SetEvent(g_hOlsKeyRolloverEvent);
  }
  Ds_SetZoneDp((__int64)a1, 0i64, 0);
  *((_DWORD *)a1 + 402) |= 0x10000000u;
  Up_FreeUpdatesInUpdateList((__int64)a1 + 1568);
  Zone_DeleteZoneNodes((__int64)a1);
  Timeout_FreeWithFunctionEx((__int64)a1, (__int64)Zone_Free, (__int64)"ds\\dns\\server\\server\\zone.c", 2264);
  if ( !a5 )
    goto LABEL_15;
  if ( v14 )
    RpcUtil_SwitchSecurityContext(1);
  Config_UpdateBootInfo();
  if ( v14 )
  {
    RpcUtil_SwitchSecurityContext(0);
LABEL_140:
    if ( v9 )
    {
      if ( v46 )
        Lock_ReleaseWrite(*((_QWORD *)a1 + 21));
      if ( v45 )
        Zone_UnlockAfterWriteEx((__int64)a1, 2, (__int64)"ds\\dns\\server\\server\\zone.c", 244);
      if ( v40 )
        Lock_ReleaseWrite(*((_QWORD *)a1 + 39));
    }
    goto LABEL_15;
  }
  return v9;
}
// 1400C0DA7: variable 'v22' is possibly undefined
// 1400C1190: variable 'v29' is possibly undefined
// 1401B8C48: using guessed type __int64 g_pTrustAnchorsZone;
// 1401B90C0: using guessed type int g_NumZonesAllowSecureUpdate;
// 1401B9288: using guessed type __int64 qword_1401B9288;
// 1401EC600: using guessed type __int64 g_Database;
// 1400C09AC: using guessed type __int64 var_40[8];
