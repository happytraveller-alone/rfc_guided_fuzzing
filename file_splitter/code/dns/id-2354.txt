//----- (0000000140121970) ----------------------------------------------------
__int64 __fastcall Nsec3FileRead(__int64 a1, unsigned int a2, __int64 a3, __int64 a4)
{
  unsigned int v4; // r13d
  unsigned __int16 *v8; // r12
  unsigned __int16 v9; // r15
  unsigned int v10; // ebx
  _QWORD *v11; // r13
  __int64 v12; // rbx
  unsigned int v13; // esi
  _BYTE *v14; // rax
  unsigned int v15; // ebx
  void *v16; // rax
  unsigned int v18; // esi
  __int64 v19; // rdi
  unsigned int v20; // ebx
  unsigned __int16 v21; // cx
  int v22; // edx
  __int64 v23; // rbx
  unsigned __int16 v24; // cx
  _BYTE *v25; // rax
  _BYTE *v26; // rsi
  u_short v27; // cx
  u_short v28; // ax
  size_t v29; // r8
  __int64 v30; // rdi
  void *v31; // rdx
  unsigned int v32; // [rsp+30h] [rbp-30h] BYREF
  unsigned int Size; // [rsp+34h] [rbp-2Ch] BYREF
  int Size_4; // [rsp+38h] [rbp-28h]
  unsigned int v35; // [rsp+3Ch] [rbp-24h]
  unsigned int v36; // [rsp+40h] [rbp-20h]
  unsigned int v37; // [rsp+44h] [rbp-1Ch]
  void *Src; // [rsp+48h] [rbp-18h]
  void *v39; // [rsp+50h] [rbp-10h]
  unsigned __int16 v40; // [rsp+98h] [rbp+38h] BYREF

  v4 = 0;
  Src = 0i64;
  v39 = 0i64;
  Size_4 = 0;
  v8 = 0i64;
  v40 = 0;
  v9 = 0;
  if ( a2 < 5 )
  {
    v10 = -1072573181;
LABEL_3:
    v11 = 0i64;
    goto LABEL_22;
  }
  if ( !(unsigned int)File_ParseDwordToken(&v32, a3, a4)
    || (v35 = v32, v32 > 0xFF)
    || !(unsigned int)File_ParseDwordToken(&v32, a3 + 16, a4)
    || (v36 = v32, v32 > 0xFF)
    || !(unsigned int)File_ParseDwordToken(&v32, a3 + 32, a4)
    || v32 > 0xFFFF
    || (v12 = *(unsigned int *)(a3 + 56), v13 = a2 - 3, (unsigned int)v12 > 0x1FE) )
  {
    v10 = -1072573183;
    goto LABEL_3;
  }
  Size = *(_DWORD *)(a3 + 56);
  if ( (_DWORD)v12 != 1 || **(_BYTE **)(a3 + 48) != 45 )
  {
    v14 = Mem_Alloc(v12, 0i64, "ds\\dns\\server\\dnscore\\rrfile.c", 3738);
    Src = v14;
    if ( !v14 )
    {
      v10 = 14;
      v11 = 0i64;
      goto LABEL_22;
    }
    v10 = buildByteBufferFromHexStringTokens(v14, &Size, 1, a3 + 48, (unsigned __int64)&v14[v12]);
    if ( v10 )
      goto LABEL_21;
    v4 = Size;
  }
  v15 = *(_DWORD *)(a3 + 72);
  if ( (v15 & 7) != 0 || v15 > 0x198 )
    goto LABEL_26;
  Size = *(_DWORD *)(a3 + 72);
  v16 = Mem_Alloc(v15, 0i64, "ds\\dns\\server\\dnscore\\rrfile.c", 3785);
  v39 = v16;
  if ( !v16 )
  {
LABEL_20:
    v10 = 14;
LABEL_21:
    v11 = Src;
    goto LABEL_22;
  }
  if ( !(unsigned int)Dns_Base32HexToBinary(*(_QWORD *)(a3 + 64), v15, (__int64)v16, &Size) )
  {
LABEL_26:
    v10 = -1072573183;
    goto LABEL_21;
  }
  v18 = v13 - 2;
  v19 = a3 + 80;
  v20 = v18;
  v37 = v18;
  if ( v18 )
  {
    v8 = (unsigned __int16 *)Mem_Alloc(2 * v18, 0i64, "ds\\dns\\server\\dnscore\\rrfile.c", 3815);
    if ( !v8 )
      goto LABEL_20;
    while ( 1 )
    {
      v21 = Dns_RecordTypeForNameA(*(_BYTE **)v19, *(_DWORD *)(v19 + 8));
      if ( !v21 )
      {
        v21 = DnsRecordTypeForUnknownRecords(*(const char **)v19, *(_DWORD *)(v19 + 8));
        if ( !v21 )
          goto LABEL_26;
      }
      v22 = Size_4;
      v19 += 16i64;
      v8[Size_4] = v21;
      Size_4 = v22 + 1;
      if ( !--v18 )
      {
        if ( (unsigned int)Dns_GenerateNsecTypeBitMaps(v8, v20, 0i64, 0, &v40) != 234 )
          goto LABEL_33;
        v9 = v40;
        break;
      }
    }
  }
  v23 = Size;
  v24 = v9 + Size + v4 + 6;
  if ( v24 < 6u )
  {
LABEL_33:
    v10 = 13;
    goto LABEL_21;
  }
  v25 = RR_AllocateEx(v24, 0, 0);
  v26 = v25;
  if ( !v25 )
    goto LABEL_20;
  v27 = v32;
  *(_QWORD *)(a4 + 800) = v25;
  v25[56] = v35;
  v25[57] = v36;
  v28 = htons(v27);
  v29 = v4;
  v26[60] = v4;
  v30 = v4;
  v11 = Src;
  v31 = Src;
  *((_WORD *)v26 + 29) = v28;
  v26[61] = v23;
  memcpy_0(v26 + 62, v31, v29);
  memcpy_0(&v26[v30 + 62], v39, (unsigned int)v23);
  v10 = Dns_GenerateNsecTypeBitMaps(v8, v37, &v26[v30 + 62 + v23], v9, &v40);
  if ( v10 )
  {
    Mem_Free(v26, 0i64, 0i64, (__int64)"ds\\dns\\server\\dnscore\\rrfile.c", 3909);
    *(_QWORD *)(a4 + 800) = 0i64;
  }
LABEL_22:
  Mem_Free(v8, 0i64, 0i64, (__int64)"ds\\dns\\server\\dnscore\\rrfile.c", 3920);
  Mem_Free(v39, 0i64, 0i64, (__int64)"ds\\dns\\server\\dnscore\\rrfile.c", 3921);
  Mem_Free(v11, 0i64, 0i64, (__int64)"ds\\dns\\server\\dnscore\\rrfile.c", 3922);
  if ( v10 == -1072573183 )
    *(_DWORD *)(a4 + 1596) = -1072573180;
  return v10;
}
