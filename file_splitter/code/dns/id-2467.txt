//----- (000000014012B130) ----------------------------------------------------
__int64 __fastcall std::basic_stringbuf<unsigned short>::str(__int64 a1, __int64 a2)
{
  unsigned __int64 *v3; // rax
  unsigned __int64 v4; // r8
  char *v5; // rdx
  __int64 v6; // r8
  __int64 v7; // r8
  char *v8; // rdx
  void *Src[2]; // [rsp+30h] [rbp-30h] BYREF
  __int64 v11; // [rsp+40h] [rbp-20h]
  unsigned __int64 v12; // [rsp+48h] [rbp-18h]

  if ( (*(_BYTE *)(a1 + 120) & 2) != 0 || (v3 = *(unsigned __int64 **)(a1 + 72), !*v3) )
  {
    if ( (*(_BYTE *)(a1 + 120) & 4) != 0 || (v6 = **(_QWORD **)(a1 + 64)) == 0 )
    {
      v12 = 7i64;
      v11 = 0i64;
      LOWORD(Src[0]) = 0;
      *(_QWORD *)(a2 + 24) = 7i64;
      *(_QWORD *)(a2 + 16) = 0i64;
      *(_WORD *)a2 = 0;
      std::wstring::assign((void **)a2, Src);
    }
    else
    {
      v7 = v6 + 2i64 * **(int **)(a1 + 88);
      v8 = **(char ***)(a1 + 32);
      v12 = 7i64;
      v11 = 0i64;
      LOWORD(Src[0]) = 0;
      std::wstring::assign((char *)Src, v8, (v7 - (__int64)v8) >> 1);
      *(_QWORD *)(a2 + 24) = 7i64;
      *(_QWORD *)(a2 + 16) = 0i64;
      *(_WORD *)a2 = 0;
      std::wstring::assign((void **)a2, Src);
    }
  }
  else
  {
    v4 = *(_QWORD *)(a1 + 112);
    if ( v4 < *v3 )
      v4 = *v3;
    v5 = **(char ***)(a1 + 40);
    v12 = 7i64;
    v11 = 0i64;
    LOWORD(Src[0]) = 0;
    std::wstring::assign((char *)Src, v5, (__int64)(v4 - (_QWORD)v5) >> 1);
    *(_QWORD *)(a2 + 24) = 7i64;
    *(_QWORD *)(a2 + 16) = 0i64;
    *(_WORD *)a2 = 0;
    std::wstring::assign((void **)a2, Src);
  }
  if ( v12 >= 8 )
    operator delete(Src[0]);
  return a2;
}
// 140184CA8: using guessed type void __stdcall operator delete(void *);
