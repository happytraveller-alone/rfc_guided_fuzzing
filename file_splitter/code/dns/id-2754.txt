//----- (0000000140145150) ----------------------------------------------------
__int64 __fastcall CDNSPolicyCriteriaQueryType::DeleteCriteria(CDNSPolicyCriteriaQueryType *this)
{
  const void *v1; // rbx
  const void *v3; // rdx
  const void *v4; // rbx
  const void *v5; // rdx
  const void *v6; // rbx
  const void *v7; // rdx
  __int64 result; // rax
  _QWORD *v9; // rsi
  bool v10; // cf

  v1 = (const void *)*((_QWORD *)this + 9);
  v3 = (const void *)*((_QWORD *)this + 10);
  if ( v1 != v3 )
  {
    memmove(*((void **)this + 9), v3, 0i64);
    *((_QWORD *)this + 10) = v1;
  }
  v4 = (const void *)*((_QWORD *)this + 13);
  v5 = (const void *)*((_QWORD *)this + 14);
  if ( v4 != v5 )
  {
    memmove(*((void **)this + 13), v5, 0i64);
    *((_QWORD *)this + 14) = v4;
  }
  v6 = (const void *)*((_QWORD *)this + 17);
  v7 = (const void *)*((_QWORD *)this + 18);
  if ( v6 != v7 )
  {
    memmove(*((void **)this + 17), v7, 0i64);
    *((_QWORD *)this + 18) = v6;
  }
  result = 0i64;
  *((_QWORD *)this + 2) = 0i64;
  v9 = (_QWORD *)((char *)this + 24);
  v10 = v9[3] < 8ui64;
  v9[2] = 0i64;
  if ( !v10 )
    v9 = (_QWORD *)*v9;
  *(_WORD *)v9 = 0;
  return result;
}
