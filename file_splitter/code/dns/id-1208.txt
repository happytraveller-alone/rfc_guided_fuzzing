//----- (000000014009C26C) ----------------------------------------------------
__int64 __fastcall Send_AddNsecRecordsToResponse(
        __int64 a1,
        __int64 a2,
        __int64 *a3,
        __int64 *a4,
        __int64 *a5,
        int a6,
        __int16 a7,
        unsigned __int16 a8)
{
  unsigned int v11; // edi
  unsigned int v12; // ebx
  unsigned int v13; // eax
  __int16 v14; // r13
  int v15; // eax
  __int64 *NsecNodeCoveringDbaseName; // rcx
  __int64 v17; // rax
  __int64 *v18; // rax
  __int64 *v19; // rcx
  __int64 v20; // rax
  __int64 **v21; // rsi
  unsigned int i; // edi
  int v23; // ecx
  __int64 *v24; // r14
  void *v25; // rax
  int v27[68]; // [rsp+40h] [rbp-C0h] BYREF
  unsigned __int8 v28[272]; // [rsp+150h] [rbp+50h] BYREF
  unsigned __int8 v29[272]; // [rsp+260h] [rbp+160h] BYREF
  __int64 *v30[3]; // [rsp+370h] [rbp+270h] BYREF

  v11 = 0;
  v12 = 1;
  if ( !a2 )
    return v12;
  v13 = *(_DWORD *)(a2 + 396);
  if ( (v13 & 0x10) == 0 )
    return v12;
  v14 = 0;
  v15 = (v13 >> 5) & 1;
  if ( !v15 )
    v14 = a7;
  if ( (*(_BYTE *)(a1 + 6307) & 0xF) != 0 || !a3 )
  {
    if ( a4 )
    {
      Name_NodeToCountName(v29, a4, 0);
      v27[0] = 704708867;
      Name_AppendCountName((unsigned __int8 *)v27, v29);
      if ( (*(_BYTE *)(a2 + 396) & 0x20) != 0 )
      {
        v30[0] = Lookup_FindNsecNodeMatchingDbaseName(a2, 0i64, v29);
        v11 = 1;
      }
      if ( !(unsigned int)Name_ConvertLookupNameToCountName(v28, *(unsigned __int16 **)(a1 + 1400)) )
      {
        Name_TruncateCountName(v28, v28[1] - BYTE1(v27[0]));
        NsecNodeCoveringDbaseName = Lookup_FindNsecNodeCoveringDbaseName(a2, *(__int64 **)(a1 + 248), v28);
        v17 = v11++;
        v30[v17] = NsecNodeCoveringDbaseName;
        if ( !NsecNodeCoveringDbaseName )
          return 0;
      }
      v18 = (*(_BYTE *)(a1 + 6307) & 0xF) != 0
          ? Lookup_FindNsecNodeCoveringDbaseName(a2, a5, (unsigned __int8 *)v27)
          : Lookup_FindNsecNodeMatchingDbaseName(a2, a5, (unsigned __int8 *)v27);
      v19 = v18;
      v20 = v11++;
      v30[v20] = v19;
      if ( v11 >= 3 )
        goto LABEL_33;
    }
  }
  else if ( v15 )
  {
    Name_NodeToCountName((unsigned __int8 *)v27, a3, 0);
    v30[0] = Lookup_FindNsecNodeMatchingDbaseName(a2, 0i64, (unsigned __int8 *)v27);
    if ( v30[0] )
    {
      v11 = 1;
    }
    else if ( *(_WORD *)(a1 + 480) == 43 || a6 )
    {
      while ( 1 )
      {
        Name_CopyCountName(v28, (unsigned __int8 *)v27);
        if ( (unsigned int)Name_TruncateCountName((unsigned __int8 *)v27, 1u) || !BYTE1(v27[0]) )
          break;
        v30[0] = Lookup_FindNsecNodeMatchingDbaseName(a2, 0i64, (unsigned __int8 *)v27);
        if ( v30[0] )
        {
          v30[1] = Lookup_FindNsecNodeCoveringDbaseName(a2, 0i64, v28);
          v11 = 2;
          break;
        }
      }
    }
  }
  else
  {
    if ( RR_FindNextRecordEx((__int64)a3, 0, 0x2Fu, 0i64, *(_DWORD *)(a1 + 568), 0) )
    {
      v30[0] = a3;
    }
    else
    {
      v30[0] = 0i64;
      NTree_FindBestNSECNode(v30, (__int64)a3, *a3, 0);
    }
    v11 = 1;
  }
  memset_0(&v30[v11], 0, 8i64 * (3 - v11));
LABEL_33:
  v21 = v30;
  for ( i = 0; i < 3; ++i )
  {
    v23 = 0;
    if ( i )
    {
      while ( v30[v23] != *v21 )
      {
        if ( ++v23 >= i )
          goto LABEL_39;
      }
      *v21 = 0i64;
    }
LABEL_39:
    v24 = *v21;
    if ( *v21 )
    {
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x100000) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
      {
        v25 = FormatLabelA(*((unsigned __int8 *)v24 + 101), (char *)v24 + 102);
        WPP_SF_Dsq(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0x35u,
          (__int64)&WPP_398a615c07233f5235cf23860937c5e7_Traceguids,
          i,
          (__int64)v25);
      }
      Wire_WriteRecordsAtNodeToMessage(a1, (__int64)v24, 0xFFF1u, 0i64, v14, a8, 0i64);
    }
    ++v21;
  }
  return v12;
}
