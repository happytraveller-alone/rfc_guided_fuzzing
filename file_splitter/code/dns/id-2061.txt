//----- (0000000140101C80) ----------------------------------------------------
__int64 __fastcall Rpc_ValidateZoneSigningParameters(
        __int64 a1,
        __int64 a2,
        __int64 a3,
        __int64 a4,
        int a5,
        int a6,
        _DWORD *a7,
        __int64 *a8)
{
  __int64 v8; // rbx
  CDnsClientSubnetRecordsTrie *v10; // rcx
  const char *v11; // r9
  __int64 *v12; // r14
  unsigned int v13; // esi
  int v14; // eax
  unsigned __int16 v15; // dx
  __int64 v16; // r9
  unsigned int v17; // eax
  unsigned int v18; // edx
  __int64 v19; // rcx
  __int64 v21; // [rsp+60h] [rbp+18h] BYREF

  v8 = 0i64;
  v21 = 0i64;
  v10 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    if ( a3 )
      v11 = *(const char **)(a3 + 16);
    else
      v11 = 0i64;
    WPP_SF_s(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x62u, (__int64)&WPP_fcf90f505e41335ad1a88e0d5ede2d0c_Traceguids, v11);
    v10 = WPP_GLOBAL_Control;
  }
  v12 = a8;
  if ( !a3 )
  {
    v13 = 87;
    goto LABEL_38;
  }
  v14 = RpcUtil_SwitchSecurityContext(0);
  v13 = v14;
  if ( !v14 )
  {
    v13 = Zone_LockForRPCSeqEx(a3, 0x2710u);
    if ( v13 )
    {
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x10) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        WPP_SF_s(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0x64u,
          (__int64)&WPP_fcf90f505e41335ad1a88e0d5ede2d0c_Traceguids,
          *(const char **)(a3 + 16));
      }
    }
    else
    {
      v13 = Zone_LockForWriteEx(a3, 1, 0x2710u, (__int64)"ds\\dns\\server\\server\\olsrpc.cpp", 83);
      if ( !v13 )
      {
        v13 = ZoneScopes_LockAll(a3, 1, 10000, 0i64, 0i64);
        if ( v13 )
        {
          if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
            && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
          {
            WPP_SF_(
              *((_QWORD *)WPP_GLOBAL_Control + 7),
              0x65u,
              (__int64)&WPP_fcf90f505e41335ad1a88e0d5ede2d0c_Traceguids);
          }
        }
        else
        {
          v17 = DnsOls_ValidateZoneSigningParameters(a3, 0, (__int64)&v21, v16);
          v19 = v21;
          v13 = v17;
          if ( v21 )
          {
            *a7 = 48;
            *v12 = v19;
          }
          ZoneScopes_UnLockAll(a3, v18, 0i64);
        }
        Zone_UnlockAfterWriteEx(a3, 1, (__int64)"ds\\dns\\server\\server\\olsrpc.cpp", 129);
      }
      Lock_ReleaseWrite(*(_QWORD *)(a3 + 312));
    }
    v14 = RpcUtil_SwitchSecurityContext(1);
    if ( !v14 )
      goto LABEL_37;
    v10 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control )
      return v13;
    if ( (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) == 0 || *((_BYTE *)WPP_GLOBAL_Control + 65) < 2u )
      goto LABEL_38;
    v15 = 102;
LABEL_36:
    WPP_SF_D(*((_QWORD *)v10 + 7), v15, (__int64)&WPP_fcf90f505e41335ad1a88e0d5ede2d0c_Traceguids, v14);
LABEL_37:
    v10 = WPP_GLOBAL_Control;
    goto LABEL_38;
  }
  v10 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control )
    return v13;
  if ( (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0 && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
  {
    v15 = 99;
    goto LABEL_36;
  }
LABEL_38:
  if ( v10 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)v10 + 68) & 4) != 0
    && *((_BYTE *)v10 + 65) >= 4u )
  {
    if ( a3 )
      v8 = *(_QWORD *)(a3 + 16);
    WPP_SF_Dsq(*((_QWORD *)v10 + 7), 0x67u, (__int64)&WPP_fcf90f505e41335ad1a88e0d5ede2d0c_Traceguids, v13, v8);
  }
  return v13;
}
// 140101E0F: variable 'v16' is possibly undefined
// 140101E37: variable 'v18' is possibly undefined
