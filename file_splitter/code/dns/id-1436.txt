//----- (00000001400B3CDC) ----------------------------------------------------
CDnsClientSubnetRecordsTrie *__fastcall NTree_CutNode(__int64 a1)
{
  CDnsClientSubnetRecordsTrie *v2; // rax
  __int64 v3; // rdx
  __int64 v4; // r9
  _QWORD *v5; // rdi
  CDnsClientSubnetRecordsTrie *result; // rax
  _QWORD *v7; // rbx
  _QWORD *v8; // rcx
  __int64 v9; // rcx
  __int64 v10; // r8
  _QWORD *v11; // rcx
  _BYTE *v12; // rax
  __int64 v13; // rcx

  v2 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control )
  {
    if ( (*((_BYTE *)WPP_GLOBAL_Control + 68) & 8) == 0 )
      goto LABEL_8;
    if ( *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_s(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x3Cu,
        (__int64)&WPP_800d841ceeab39a775299d72a602aebb_Traceguids,
        (const char *)(a1 + 102));
      v2 = WPP_GLOBAL_Control;
    }
  }
  if ( (*((_BYTE *)v2 + 68) & 8) != 0 && *((_BYTE *)v2 + 65) >= 6u )
    Dbg_SiblingList("Cutting node.  Node's subtree:", (_BYTE *)a1);
LABEL_8:
  NTree_VerifyNodeInSiblingList((_QWORD *)a1);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD **)(a1 + 8);
  result = *(CDnsClientSubnetRecordsTrie **)(a1 + 24);
  if ( v3 )
  {
    v11 = *(_QWORD **)(v3 + 24);
    v7 = *(_QWORD **)(a1 + 16);
    while ( v11 )
    {
      v7 = v11;
      v11 = (_QWORD *)v11[3];
    }
    v9 = v7[1];
    if ( v9 == a1 )
    {
      v7[1] = v5;
      if ( !result )
        goto LABEL_30;
      v7[3] = result;
      goto LABEL_29;
    }
    v10 = v7[2];
    *(_QWORD *)(v9 + 24) = v10;
  }
  else
  {
    if ( !result )
    {
      v7 = 0i64;
      goto LABEL_30;
    }
    v8 = (_QWORD *)*((_QWORD *)result + 2);
    v7 = *(_QWORD **)(a1 + 24);
    while ( v8 )
    {
      v7 = v8;
      v8 = (_QWORD *)v8[2];
    }
    v9 = v7[1];
    if ( v9 == a1 )
    {
      v7[1] = v5;
      goto LABEL_30;
    }
    v10 = v7[3];
    *(_QWORD *)(v9 + 16) = v10;
  }
  if ( v10 )
    *(_QWORD *)(v10 + 8) = v9;
  v7[1] = v5;
  v7[2] = v3;
  v7[3] = result;
  if ( v3 )
    *(_QWORD *)(v3 + 8) = v7;
  if ( result )
LABEL_29:
    *((_QWORD *)result + 1) = v7;
LABEL_30:
  if ( v5 )
  {
    if ( *(_BYTE *)v5 != 0xFF )
    {
      if ( v5[2] == a1 )
        v5[2] = v7;
      else
        v5[3] = v7;
    }
  }
  else
  {
    if ( (*(_DWORD *)(a1 + 92) & 0x4000000) != 0 && !v4 )
      return result;
    *(_QWORD *)(v4 + 32) = v7;
  }
  --*(_DWORD *)(v4 + 84);
  v12 = *(_BYTE **)(v4 + 32);
  if ( v12 && *v12 == 0xFF )
  {
    v13 = (__int64)v5;
    if ( *(_BYTE *)v5 == 0xFF )
      v5 = 0i64;
    NTree_DeleteNodeInHashBucket(v13, a1);
  }
  result = WPP_GLOBAL_Control;
  if ( (*((_BYTE *)WPP_GLOBAL_Control + 68) & 8) != 0 && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 6u )
    result = Dbg_SiblingList("Full sibling list after cut", *(_BYTE **)(*(_QWORD *)a1 + 32i64));
  if ( v7 )
    result = (CDnsClientSubnetRecordsTrie *)NTree_VerifyNodeInSiblingList(v7);
  if ( v5 )
  {
    if ( *(_BYTE *)v5 != 0xFF )
      return (CDnsClientSubnetRecordsTrie *)NTree_VerifyNodeInSiblingList(v5);
  }
  return result;
}
