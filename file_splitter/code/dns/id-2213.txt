//----- (0000000140117528) ----------------------------------------------------
char *__fastcall Dbg_CountName(unsigned __int8 *a1)
{
  __int64 v2; // r9
  __int64 v3; // rax
  char *v4; // r14
  char *v5; // rsi
  __int64 v6; // rdi
  STRSAFE_LPSTR v7; // rax
  unsigned __int8 *v8; // rbx
  unsigned __int8 *v9; // r15
  char *v10; // rbx
  const char *v11; // rax
  unsigned int v12; // ebp
  void *v13; // rax
  STRSAFE_LPSTR v14; // rax

  v2 = *(_QWORD *)NtCurrentTeb()->ThreadLocalStoragePointer;
  v3 = v2 + 510i64 * (_InterlockedIncrement((volatile signed __int32 *)(v2 + 16)) % 5);
  v4 = (char *)(v3 + 3904);
  v5 = (char *)(v3 + 3904);
  v6 = v3 + 4414;
  if ( a1 )
  {
    v7 = sprintfSafeA(v4, v6 - (_QWORD)v4, "CountName[%d][%d]", *a1, a1[1]);
    v8 = a1 + 2;
    v9 = &a1[*a1 + 2];
    v5 = v7;
    while ( 1 )
    {
      v12 = *v8;
      if ( !*v8 )
        goto LABEL_12;
      v10 = (char *)(v8 + 1);
      if ( v12 > 0x3F )
        break;
      v11 = (const char *)FormatLabelA(v12, v10);
      v5 = sprintfSafeA(v5, v6 - (_QWORD)v5, "(%d)%s", v12, v11);
      if ( !v5 )
        goto LABEL_13;
      v8 = (unsigned __int8 *)&v10[v12];
      if ( v8 >= v9 )
      {
        v13 = FormatLabelA(v12, v8);
        v14 = sprintfSafeA(v5, v6 - (_QWORD)v5, "[ERROR: count name extends beyond length]", v12, v13);
LABEL_9:
        v5 = v14;
        goto LABEL_12;
      }
    }
    v14 = sprintfSafeA(v5, v6 - (_QWORD)v5, "[ERROR: bad label length = %d]", v12);
    goto LABEL_9;
  }
  sprintfSafeA((char *)(v3 + 3904), v6 - (_QWORD)v4, "[NULL count name]");
LABEL_12:
  if ( !v5 )
LABEL_13:
    sprintfSafeA(v4, 0x1FEui64, "[ERROR: invalid count name]");
  return v4;
}
