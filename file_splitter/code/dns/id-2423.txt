//----- (0000000140126F14) ----------------------------------------------------
_BYTE *__fastcall DnsSign::CreateNsecRecord(unsigned __int8 *a1, __int64 a2, u_long a3)
{
  int v6; // eax
  int v7; // ebx
  unsigned int v8; // r9d
  _BYTE *v9; // rax
  _BYTE *v10; // rdi
  int v11; // eax
  int v12; // ebx
  unsigned __int16 v14; // [rsp+30h] [rbp-89h] BYREF
  __int64 v15; // [rsp+38h] [rbp-81h]
  _BYTE *v16; // [rsp+40h] [rbp-79h]
  char v17[24]; // [rsp+48h] [rbp-71h] BYREF
  char v18[56]; // [rsp+60h] [rbp-59h] BYREF
  char pExceptionObject[56]; // [rsp+98h] [rbp-21h] BYREF

  v15 = -2i64;
  v14 = 0;
  v6 = Dns_GenerateNsecTypeBitMaps(
         *(unsigned __int16 **)a2,
         (__int64)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 1,
         0i64,
         0,
         &v14);
  v7 = v6;
  if ( v6 != 234 )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 7) & 0x100000) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 25) >= 4u )
    {
      WPP_SF_D(
        *((_QWORD *)WPP_GLOBAL_Control + 2),
        0x10u,
        (__int64)&WPP_4fe44c5dae9434a57cc4518b160fb14c_Traceguids,
        v6);
    }
    DnsSign::CRunTimeException::CRunTimeException((DnsSign::CRunTimeException *)v18, v7);
    DnsSign::CException::AppendErrorMessageByID((DnsSign::CException *)v18, 0xD6DB6u);
    DnsSign::CRunTimeException::CRunTimeException(
      (DnsSign::CRunTimeException *)pExceptionObject,
      (const struct DnsSign::CRunTimeException *)v18);
    CxxThrowException_0(pExceptionObject, (_ThrowInfo *)&TI2_AVCRunTimeException_DnsSign__);
  }
  v8 = *a1 + 2;
  if ( v8 > 0xFFFF || (unsigned __int16)(v14 + v8) < (unsigned __int16)v8 )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 7) & 0x100000) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 25) >= 4u )
    {
      WPP_SF_Dd(
        *((_QWORD *)WPP_GLOBAL_Control + 2),
        0x11u,
        (__int64)&WPP_4fe44c5dae9434a57cc4518b160fb14c_Traceguids,
        v8);
    }
    DnsSign::CRunTimeException::CRunTimeException((DnsSign::CRunTimeException *)v18, 13);
    DnsSign::CException::AppendErrorMessageByID((DnsSign::CException *)v18, 0xD6DB7u);
    DnsSign::CRunTimeException::CRunTimeException(
      (DnsSign::CRunTimeException *)pExceptionObject,
      (const struct DnsSign::CRunTimeException *)v18);
    CxxThrowException_0(pExceptionObject, (_ThrowInfo *)&TI2_AVCRunTimeException_DnsSign__);
  }
  v9 = RR_AllocateEx(v14 + (unsigned __int16)v8, 0, 0);
  v10 = v9;
  if ( !v9 )
  {
    std::bad_alloc::bad_alloc((std::bad_alloc *)v17);
    CxxThrowException_0(v17, (_ThrowInfo *)&TI2_AVbad_alloc_std__);
  }
  v16 = v9;
  Name_CopyCountName(v9 + 56, a1);
  v11 = Dns_GenerateNsecTypeBitMaps(
          *(unsigned __int16 **)a2,
          (__int64)(*(_QWORD *)(a2 + 8) - *(_QWORD *)a2) >> 1,
          &v10[(unsigned __int8)v10[56] + 58],
          v14,
          &v14);
  v12 = v11;
  if ( v11 )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 7) & 0x100000) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 25) >= 4u )
    {
      WPP_SF_D(
        *((_QWORD *)WPP_GLOBAL_Control + 2),
        0x12u,
        (__int64)&WPP_4fe44c5dae9434a57cc4518b160fb14c_Traceguids,
        v11);
    }
    DnsSign::CRunTimeException::CRunTimeException((DnsSign::CRunTimeException *)v18, v12);
    DnsSign::CException::AppendErrorMessageByID((DnsSign::CException *)v18, 0xD6DB6u);
    DnsSign::CRunTimeException::CRunTimeException(
      (DnsSign::CRunTimeException *)pExceptionObject,
      (const struct DnsSign::CRunTimeException *)v18);
    CxxThrowException_0(pExceptionObject, (_ThrowInfo *)&TI2_AVCRunTimeException_DnsSign__);
  }
  *((_WORD *)v10 + 6) = 47;
  *((_DWORD *)v10 + 5) = htonl(a3);
  Mem_Free(0i64, 0i64, 0i64, (__int64)"ds\\dns\\server\\dnssign\\zone.cpp", 239);
  return v10;
}
