//----- (000000014015DAAC) ----------------------------------------------------
int __fastcall DnsPrint_DnsAddr(__int64 a1, __int64 a2, __int64 a3, __int64 a4, __int64 a5)
{
  int result; // eax
  __int64 v6; // rdx
  __int64 v7; // rcx
  __int64 v8; // r9
  __int64 v9; // rdx
  __int64 v10; // rcx
  __int64 v11; // [rsp+20h] [rbp-48h]
  __int64 v12; // [rsp+28h] [rbp-40h]

  result = DnsPrint_Lock();
  if ( result )
  {
    if ( a5 )
    {
      DnsPrint_Sockaddr(v7, v6, "sendto() failed sockaddr\n", v8, (unsigned __int16 *)a5, *(_DWORD *)(a5 + 32));
      if ( (byte_1401BA001 & 4) != 0 )
      {
        LODWORD(v12) = *(_DWORD *)(a5 + 36);
        WPP_SF_sdsdsDsdsd(
          v10,
          v9,
          "",
          *(_DWORD *)(a5 + 32),
          "",
          v12,
          "",
          *(_DWORD *)(a5 + 40),
          "",
          *(_DWORD *)(a5 + 44),
          "",
          *(_DWORD *)(a5 + 48));
      }
    }
    else if ( (byte_1401BA001 & 4) != 0 )
    {
      WPP_SF_ss(
        35i64,
        (unsigned __int16)&WPP_7f900513327334733b8f3a4951ec5607_Traceguids,
        (__int64)"",
        "sendto() failed sockaddr\n",
        v11);
    }
    return DnsPrint_Unlock();
  }
  return result;
}
// 14015DAF1: variable 'v11' is possibly undefined
// 14015DB0B: variable 'v7' is possibly undefined
// 14015DB0B: variable 'v6' is possibly undefined
// 14015DB0B: variable 'v8' is possibly undefined
// 14015DB54: variable 'v10' is possibly undefined
// 14015DB54: variable 'v9' is possibly undefined
// 14015DB54: variable 'v12' is possibly undefined
// 1401BA001: using guessed type char byte_1401BA001;
