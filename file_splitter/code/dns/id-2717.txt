//----- (0000000140142854) ----------------------------------------------------
CDNSClientSubnetRecord *__fastcall CDNSClientSubnetRecord::CDNSClientSubnetRecord(
        CDNSClientSubnetRecord *this,
        char *a2)
{
  char *v4; // rdi
  _QWORD *v5; // rax
  char *v6; // rdi
  _QWORD *v7; // rax
  unsigned __int64 v8; // r8
  char pExceptionObject[24]; // [rsp+28h] [rbp-50h] BYREF
  char v11[32]; // [rsp+40h] [rbp-38h] BYREF

  *((_QWORD *)this + 4) = 7i64;
  *((_QWORD *)this + 3) = 0i64;
  *((_WORD *)this + 4) = 0;
  v4 = (char *)this + 48;
  *((_QWORD *)this + 7) = 0i64;
  v5 = operator new(0x18ui64);
  if ( !v5 )
  {
    std::bad_alloc::bad_alloc((std::bad_alloc *)v11, 0i64);
    CxxThrowException_0(v11, (_ThrowInfo *)&TI2_AVbad_alloc_std__);
  }
  *(_QWORD *)v4 = v5;
  *v5 = v5;
  *(_QWORD *)(*(_QWORD *)v4 + 8i64) = *(_QWORD *)v4;
  v6 = (char *)this + 72;
  *((_QWORD *)this + 10) = 0i64;
  v7 = operator new(0x18ui64);
  if ( !v7 )
  {
    std::bad_alloc::bad_alloc((std::bad_alloc *)pExceptionObject, 0i64);
    CxxThrowException_0(pExceptionObject, (_ThrowInfo *)&TI2_AVbad_alloc_std__);
  }
  *(_QWORD *)v6 = v7;
  *v7 = v7;
  *(_QWORD *)(*(_QWORD *)v6 + 8i64) = *(_QWORD *)v6;
  v8 = -1i64;
  do
    ++v8;
  while ( *(_WORD *)&a2[2 * v8] );
  std::wstring::assign((char *)this + 8, a2, v8);
  *(_DWORD *)this = 0;
  return this;
}
