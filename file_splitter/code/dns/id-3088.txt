//----- (0000000140161A20) ----------------------------------------------------
BOOL __fastcall TxtRecordPrint(void (*a1)(__int64, const char *, ...), __int64 a2, __int64 a3)
{
  int v3; // esi
  WCHAR **v4; // r14
  int v8; // r9d
  unsigned int v9; // edi
  const wchar_t *v10; // r9
  WCHAR *v11; // r9
  __int64 v13; // [rsp+20h] [rbp-248h]
  __int16 v14[256]; // [rsp+30h] [rbp-238h] BYREF

  v3 = *(_DWORD *)(a3 + 32);
  v4 = (WCHAR **)(a3 + 40);
  DnsPrint_Lock();
  if ( a1 )
    a1(a2, "\tStringCount    = %d\r\n", (unsigned int)v3);
  if ( (byte_1401BA001 & 4) != 0 )
    WPP_SF_D(17i64, (unsigned __int16)&WPP_cb270f16dde935b5e1552b160c3fa946_Traceguids, (unsigned int)v3, v8);
  v9 = 1;
  if ( v3 >= 1 )
  {
    do
    {
      if ( a1 )
      {
        v10 = *v4;
        if ( (*(_DWORD *)(a3 + 20) & 0x18) != 8 )
          v10 = recordStringWide(a3, *v4, v14);
        a1(a2, "\tString[%d]      = %ls\r\n", v9, v10);
      }
      if ( (byte_1401BA001 & 4) != 0 )
      {
        v11 = *v4;
        if ( (*(_DWORD *)(a3 + 20) & 0x18) != 8 )
          LODWORD(v11) = (unsigned int)recordStringWide(a3, *v4, v14);
        WPP_SF_DS(18i64, (unsigned __int16)&WPP_cb270f16dde935b5e1552b160c3fa946_Traceguids, v9, (int)v11, v13);
      }
      ++v4;
      ++v9;
    }
    while ( (int)v9 <= v3 );
  }
  return DnsPrint_Unlock();
}
// 140161A8E: variable 'v8' is possibly undefined
// 140161B11: variable 'v13' is possibly undefined
// 140185140: using guessed type __int64 (__fastcall *_guard_dispatch_icall_fptr)(_QWORD, _QWORD);
// 1401BA001: using guessed type char byte_1401BA001;
// 140161A20: using guessed type _WORD var_238[256];
