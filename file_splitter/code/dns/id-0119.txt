//----- (000000014000F440) ----------------------------------------------------
__int64 __fastcall Boot_FromRegistry(const wchar_t **a1)
{
  DWORD v2; // r14d
  BOOL v3; // esi
  const unsigned __int16 *v4; // r9
  struct _RTL_CRITICAL_SECTION *v5; // rdi
  const WCHAR *v6; // rcx
  int v7; // eax
  const unsigned __int16 *v8; // r9
  __int64 v9; // rax
  __int64 v10; // rcx
  int v11; // eax
  int v12; // eax
  const unsigned __int16 *v13; // r9
  const unsigned __int16 **i; // rdi
  int v16; // [rsp+30h] [rbp-D0h] BYREF
  HKEY hKey; // [rsp+38h] [rbp-C8h] BYREF
  HKEY v18; // [rsp+40h] [rbp-C0h] BYREF
  LPCRITICAL_SECTION lpCriticalSection; // [rsp+48h] [rbp-B8h]
  __int16 SubKey[256]; // [rsp+50h] [rbp-B0h] BYREF

  hKey = 0i64;
  v2 = 0;
  v16 = 0;
  v3 = 0;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    if ( a1 )
      v4 = *a1;
    else
      v4 = L".";
    WPP_SF_S(*((_QWORD *)WPP_GLOBAL_Control + 7), 0xAu, (__int64)&WPP_7130a3a4d89e343b55addd3e43accbbd_Traceguids, v4);
  }
  v5 = &csZoneList;
  if ( a1 )
    v5 = (struct _RTL_CRITICAL_SECTION *)(a1 + 8);
  lpCriticalSection = v5;
  EnterCriticalSection(v5);
  g_bRegistryWriteBack = 0;
  if ( !a1 )
  {
    LoadAndInitRRL();
    LoadGlobalPolicies();
  }
  while ( 1 )
  {
    while ( 1 )
    {
      Service_LoadCheckpoint();
      v6 = a1 ? *a1 : 0i64;
      v7 = Reg_EnumZones(v6, &hKey, v2++, &v18, (LPWSTR)SubKey);
      if ( v7 )
        break;
      v9 = -1i64;
      do
        ++v9;
      while ( SubKey[v9] );
      if ( (unsigned int)v9 > 1 )
      {
        v10 = (unsigned int)(v9 - 1);
        v11 = g_bRegistryWriteBack;
        if ( SubKey[v10] == 46 )
          v11 = 1;
        g_bRegistryWriteBack = v11;
      }
      if ( !a1 && !v3 )
        v3 = wcsicmp_ThatWorks((PCNZWCH)SubKey, L"..Cache") == 0;
      v12 = setupZoneFromRegistry(v18, (unsigned __int16 *)SubKey, (__int64)&v16, a1);
      if ( v16 )
        --v2;
      if ( v12 )
      {
LABEL_45:
        g_bRegistryWriteBack = 0;
      }
      else if ( g_bRegistryWriteBack )
      {
        if ( RegDeleteKeyW(hKey, (LPCWSTR)SubKey)
          && WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
        {
          if ( a1 )
            v13 = *a1;
          else
            v13 = L".";
          WPP_SF_S(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            0xCu,
            (__int64)&WPP_7130a3a4d89e343b55addd3e43accbbd_Traceguids,
            v13);
        }
        goto LABEL_45;
      }
    }
    if ( v7 == 259 )
      break;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      if ( a1 )
        v8 = *a1;
      else
        v8 = L".";
      WPP_SF_S(*((_QWORD *)WPP_GLOBAL_Control + 7), 0xBu, (__int64)&WPP_7130a3a4d89e343b55addd3e43accbbd_Traceguids, v8);
    }
  }
  LeaveCriticalSection(lpCriticalSection);
  g_bRegistryWriteBack = 1;
  if ( hKey )
    RegCloseKey(hKey);
  for ( i = Zone_ListGetNextZoneEx(a1, 0i64, 0); i; i = Zone_ListGetNextZoneEx(a1, (__int64 *)i, 0) )
  {
    if ( *((_DWORD *)i + 93) || v3 )
    {
      Boot_ZoneScopeFromRegistry((__int64)i);
      if ( !a1 )
        LoadZonePolicies((struct _zone_info *)i);
    }
  }
  return 0i64;
}
// 1400111B4: using guessed type __int64 __fastcall LoadZonePolicies(struct _zone_info *a1);
// 1401B805C: using guessed type int g_bRegistryWriteBack;
// 14000F440: using guessed type WCHAR SubKey[256];
