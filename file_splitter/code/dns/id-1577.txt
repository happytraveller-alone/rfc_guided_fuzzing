//----- (00000001400C7C7C) ----------------------------------------------------
const unsigned __int16 **__fastcall Zone_UpdateOwnRecords(const unsigned __int16 **a1)
{
  __int64 v2; // rax
  int v3; // edx
  __int64 v4; // rcx
  __int64 *i; // rdx
  const unsigned __int16 **result; // rax
  int v7; // edx
  const unsigned __int16 **v8; // rbx

  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 1) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0xBCu, (__int64)&WPP_e9a0d5dea449334d7c383477da81f939_Traceguids);
  }
  v2 = Lookup_ZoneTreeNodeFromDottedNameEx(Str, 0, 0, (__int64)a1);
  if ( v2 )
  {
    v4 = *(_QWORD *)(v2 + 56);
    if ( v4 )
    {
      if ( ((*(_BYTE *)(v4 + 388) & 1) == 0 || !dword_1401B9750 && !g_fDsReadOnlyDcMode)
        && (*(_BYTE *)(v4 + 1160) & 0x40) == 0 )
      {
        zoneUpdateOwnRecords(v4, v3);
      }
    }
  }
  for ( i = 0i64; ; i = (__int64 *)v8 )
  {
    result = Zone_ListGetNextZoneEx(a1, i, 0);
    v8 = result;
    if ( !result )
      break;
    if ( ((*((_BYTE *)result + 388) & 1) != 0 && (dword_1401B9750 || g_fDsReadOnlyDcMode)
       || ((_BYTE)result[145] & 0x40) != 0)
      && *((_DWORD *)result + 93) == 1 )
    {
      zoneUpdateOwnRecords((__int64)result, v7);
    }
  }
  return result;
}
// 1400C7D03: variable 'v3' is possibly undefined
// 1400C7D3C: variable 'v7' is possibly undefined
// 1401B8C94: using guessed type int g_fDsReadOnlyDcMode;
// 1401B9750: using guessed type int dword_1401B9750;
