//----- (0000000140012378) ----------------------------------------------------
__int64 __fastcall SetupRRLFromRegistry(HKEY a1, __int64 a2)
{
  unsigned int DwordValue; // eax
  unsigned int v5; // ebx
  unsigned int v6; // eax
  unsigned int v7; // eax
  unsigned int v8; // eax
  unsigned int v9; // eax
  unsigned int v10; // eax
  unsigned int v11; // eax
  unsigned int v12; // eax
  unsigned int v13; // eax
  CDnsClientSubnetRecordsTrie *v15; // rcx
  unsigned __int16 v16; // dx
  const char *v17; // r9

  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x46u, (__int64)&WPP_7130a3a4d89e343b55addd3e43accbbd_Traceguids);
  }
  DwordValue = Reg_ReadDwordValue(a1, 0i64, (const unsigned __int16 *)"ResponsesPerSecond", 0, (_BYTE *)a2);
  v5 = DwordValue;
  if ( DwordValue == 2 )
  {
    *(_DWORD *)a2 = 5;
  }
  else if ( DwordValue )
  {
    v15 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      || (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) == 0
      || *((_BYTE *)WPP_GLOBAL_Control + 65) < 2u )
    {
      return v5;
    }
    v16 = 71;
    goto LABEL_30;
  }
  v6 = Reg_ReadDwordValue(a1, 0i64, (const unsigned __int16 *)"ErrorsPerSecond", 0, (_BYTE *)(a2 + 4));
  v5 = v6;
  if ( v6 == 2 )
  {
    *(_DWORD *)(a2 + 4) = 5;
    goto LABEL_9;
  }
  if ( v6 )
  {
    v15 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      || (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) == 0
      || *((_BYTE *)WPP_GLOBAL_Control + 65) < 2u )
    {
      return v5;
    }
    v16 = 72;
LABEL_30:
    v17 = "ResponsesPerSecond";
    goto LABEL_31;
  }
LABEL_9:
  v7 = Reg_ReadDwordValue(a1, 0i64, (const unsigned __int16 *)"WindowSize", 0, (_BYTE *)(a2 + 20));
  v5 = v7;
  if ( v7 == 2 )
  {
    *(_DWORD *)(a2 + 20) = 5;
  }
  else if ( v7 )
  {
    v15 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      || (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) == 0
      || *((_BYTE *)WPP_GLOBAL_Control + 65) < 2u )
    {
      return v5;
    }
    v16 = 73;
    v17 = "WindowSize";
LABEL_31:
    WPP_SF_s(*((_QWORD *)v15 + 7), v16, (__int64)&WPP_7130a3a4d89e343b55addd3e43accbbd_Traceguids, v17);
    return v5;
  }
  v8 = Reg_ReadDwordValue(a1, 0i64, (const unsigned __int16 *)"TotalResponsesInWindow", 0, (_BYTE *)(a2 + 16));
  v5 = v8;
  if ( v8 == 2 )
  {
    *(_DWORD *)(a2 + 16) = 1024;
    goto LABEL_13;
  }
  if ( v8 )
  {
    v15 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      || (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) == 0
      || *((_BYTE *)WPP_GLOBAL_Control + 65) < 2u )
    {
      return v5;
    }
    v16 = 74;
    v17 = "TotalResponsesInWindow";
    goto LABEL_31;
  }
LABEL_13:
  v9 = Reg_ReadDwordValue(a1, 0i64, (const unsigned __int16 *)"LeakRate", 0, (_BYTE *)(a2 + 8));
  v5 = v9;
  if ( v9 == 2 )
  {
    *(_DWORD *)(a2 + 8) = 3;
    goto LABEL_15;
  }
  if ( v9 )
  {
    v15 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      || (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) == 0
      || *((_BYTE *)WPP_GLOBAL_Control + 65) < 2u )
    {
      return v5;
    }
    v16 = 75;
    v17 = "LeakRate";
    goto LABEL_31;
  }
LABEL_15:
  v10 = Reg_ReadDwordValue(a1, 0i64, (const unsigned __int16 *)"TCRate", 0, (_BYTE *)(a2 + 12));
  v5 = v10;
  if ( v10 == 2 )
  {
    *(_DWORD *)(a2 + 12) = 2;
    goto LABEL_17;
  }
  if ( v10 )
  {
    v15 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      || (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) == 0
      || *((_BYTE *)WPP_GLOBAL_Control + 65) < 2u )
    {
      return v5;
    }
    v16 = 76;
    v17 = "TCRate";
    goto LABEL_31;
  }
LABEL_17:
  v11 = Reg_ReadDwordValue(a1, 0i64, (const unsigned __int16 *)"IPv4PrefixLength", 0, (_BYTE *)(a2 + 24));
  v5 = v11;
  if ( v11 == 2 )
  {
    *(_DWORD *)(a2 + 24) = 24;
    goto LABEL_19;
  }
  if ( v11 )
  {
    v15 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      || (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) == 0
      || *((_BYTE *)WPP_GLOBAL_Control + 65) < 2u )
    {
      return v5;
    }
    v16 = 77;
    v17 = "IPv4PrefixLength";
    goto LABEL_31;
  }
LABEL_19:
  v12 = Reg_ReadDwordValue(a1, 0i64, (const unsigned __int16 *)"IPv6PrefixLength", 0, (_BYTE *)(a2 + 28));
  v5 = v12;
  if ( v12 == 2 )
  {
    *(_DWORD *)(a2 + 28) = 56;
    goto LABEL_21;
  }
  if ( v12 )
  {
    v15 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      || (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) == 0
      || *((_BYTE *)WPP_GLOBAL_Control + 65) < 2u )
    {
      return v5;
    }
    v16 = 78;
    v17 = "IPv6PrefixLength";
    goto LABEL_31;
  }
LABEL_21:
  v13 = Reg_ReadDwordValue(a1, 0i64, (const unsigned __int16 *)"Mode", 0, (_BYTE *)(a2 + 32));
  v5 = v13;
  if ( v13 == 2 )
  {
    *(_DWORD *)(a2 + 32) = 2;
LABEL_23:
    v5 = 0;
    *(_DWORD *)(a2 + 36) = -1;
    return v5;
  }
  if ( !v13 )
    goto LABEL_23;
  v15 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
  {
    v16 = 79;
    v17 = "Mode";
    goto LABEL_31;
  }
  return v5;
}
