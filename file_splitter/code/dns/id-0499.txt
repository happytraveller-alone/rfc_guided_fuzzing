//----- (000000014004364C) ----------------------------------------------------
__int64 __fastcall Ds_WriteNonSecureUpdateToDs(__int64 a1, __int64 a2, __int64 a3)
{
  unsigned int v5; // esi
  __int64 i; // rbx
  __int64 v8; // [rsp+20h] [rbp-18h]

  v5 = 0;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_s(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x155u,
      (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
      *(const char **)(a3 + 16));
  }
  if ( !*(_QWORD *)(a3 + 840) )
    return 9604i64;
  _InterlockedIncrement(&dword_1401C7CC8);
  for ( i = *(_QWORD *)(a2 + 16); i; i = *(_QWORD *)(i + 24) )
  {
    _InterlockedIncrement(&dword_1401C7CCC);
    if ( *(_DWORD *)(i + 84) == -2004353023 )
    {
      v5 = Ds_WriteNodeToDs(0i64, i, 0xFFu, 2, a3, *(_DWORD *)(a2 + 40));
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
      {
        LODWORD(v8) = *(_DWORD *)(i + 92);
        WPP_SF_qd(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0x157u,
          (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
          i,
          v8);
      }
    }
    else
    {
      _InterlockedIncrement(&dword_1401C7D18);
      _InterlockedIncrement(&dword_1401C7CD0);
    }
  }
  *(_DWORD *)(a3 + 524) = 0;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_sd(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x158u,
      (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
      *(const char **)(a3 + 16));
  }
  return v5;
}
// 140043744: variable 'v8' is possibly undefined
// 1401C7CC8: using guessed type int dword_1401C7CC8;
// 1401C7CCC: using guessed type int dword_1401C7CCC;
// 1401C7CD0: using guessed type int dword_1401C7CD0;
// 1401C7D18: using guessed type int dword_1401C7D18;
