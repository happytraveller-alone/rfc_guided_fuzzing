//----- (000000014012A6B0) ----------------------------------------------------
_OWORD *__fastcall std::num_put<unsigned short,std::ostreambuf_iterator<unsigned short>>::do_put(
        __int64 a1,
        _OWORD *a2,
        _OWORD *a3,
        __int64 a4,
        __int16 a5,
        double a6)
{
  __int64 v6; // rbx
  int v11; // r8d
  double v12; // xmm1_8
  int v13; // r9d
  unsigned __int64 v14; // rbp
  unsigned __int64 v15; // rsi
  __int64 v16; // rbx
  char *v17; // rdx
  int v18; // r8d
  char v19; // al
  char v20; // cl
  char v21; // al
  int v22; // eax
  int v24[4]; // [rsp+50h] [rbp-D8h] BYREF
  char Format; // [rsp+60h] [rbp-C8h] BYREF
  char v26; // [rsp+61h] [rbp-C7h] BYREF
  char v27; // [rsp+62h] [rbp-C6h] BYREF
  char Buffer[112]; // [rsp+70h] [rbp-B8h] BYREF

  v6 = *(_QWORD *)(a4 + 32);
  if ( v6 <= 0 && (*(_DWORD *)(a4 + 24) & 0x2000) == 0 )
    v6 = 6i64;
  v11 = *(_DWORD *)(a4 + 24);
  v12 = a6;
  v13 = v6;
  if ( v6 > 36 )
    v13 = 36;
  v14 = 0i64;
  v15 = 0i64;
  v16 = v6 - v13;
  if ( (v11 & 0x3000) == 0x2000 )
  {
    if ( a6 < 0.0 )
      *(_QWORD *)&v12 = *(_QWORD *)&a6 ^ _xmm;
    while ( v12 >= 1.0e35 && v14 < 0x1388 )
    {
      v12 = v12 / 1.0e10;
      v14 += 10i64;
    }
    if ( v12 > 0.0 && v16 >= 10 )
    {
      do
      {
        if ( v12 > 1.0e-35 )
          break;
        if ( v15 >= 0x1388 )
          break;
        v16 -= 10i64;
        v12 = v12 * 1.0e10;
        v15 += 10i64;
      }
      while ( v16 >= 10 );
    }
  }
  Format = 37;
  v17 = &v26;
  *(_OWORD *)v24 = *a3;
  if ( (v11 & 0x20) != 0 )
  {
    v26 = 43;
    v17 = &v27;
  }
  if ( (v11 & 0x10) != 0 )
    *v17++ = 35;
  v18 = v11 & 0x3000;
  *(_WORD *)v17 = 10798;
  v17[2] = 76;
  v19 = 103;
  if ( v18 == 4096 )
    v19 = 101;
  v20 = v19;
  if ( v18 == 12288 )
    v20 = 97;
  v21 = v20;
  if ( v18 == 0x2000 )
    v21 = 102;
  v17[3] = v21;
  v17[4] = 0;
  v22 = sprintf_s(Buffer, 0x6Cui64, &Format);
  std::num_put<unsigned short,std::ostreambuf_iterator<unsigned short>>::_Fput(
    a1,
    a2,
    (__int128 *)v24,
    a4,
    a5,
    (char **)Buffer,
    v14,
    v15,
    v16,
    v22);
  return a2;
}
// 140199BE0: using guessed type __int64 _xmm;
