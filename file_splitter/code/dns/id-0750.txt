//----- (0000000140068CCC) ----------------------------------------------------
__int64 __fastcall copySKD(__int64 a1, __int64 a2, int a3)
{
  void **v6; // r14
  void **v7; // r15
  void **v8; // rbp
  __int64 v9; // rcx
  __int64 v10; // rcx
  __int64 v11; // rax

  RR_ListFree(*(_QWORD **)(a1 + 128));
  RR_ListFree(*(_QWORD **)(a1 + 136));
  v6 = (void **)(a1 + 144);
  DnsOls_DeleteSkdKeyPairObject(a1 + 144);
  v7 = (void **)(a1 + 168);
  DnsOls_DeleteSkdKeyPairObject(a1 + 168);
  v8 = (void **)(a1 + 192);
  DnsOls_DeleteSkdKeyPairObject(a1 + 192);
  Mem_Free(*(_QWORD **)(a1 + 144), 0i64, 0i64, (__int64)"ds\\dns\\server\\server\\olskeyrollover.c", 3080);
  Mem_Free(*(_QWORD **)(a1 + 168), 0i64, 0i64, (__int64)"ds\\dns\\server\\server\\olskeyrollover.c", 3081);
  Mem_Free(*(_QWORD **)(a1 + 192), 0i64, 0i64, (__int64)"ds\\dns\\server\\server\\olskeyrollover.c", 3082);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 152) = 0i64;
  *(_QWORD *)(a1 + 176) = 0i64;
  *(_QWORD *)(a1 + 200) = 0i64;
  if ( a3 )
  {
    *v6 = Dns_StringCopyAllocate(*(char **)(a2 + 144), 0, 1i64, 1);
    *v7 = Dns_StringCopyAllocate(*(char **)(a2 + 168), 0, 1i64, 1);
    *v8 = Dns_StringCopyAllocate(*(char **)(a2 + 192), 0, 1i64, 1);
    *(_QWORD *)(a1 + 128) = RR_ListCopy(v9, *(unsigned __int16 **)(a2 + 128), 0);
    v11 = RR_ListCopy(v10, *(unsigned __int16 **)(a2 + 136), 0);
    *(_QWORD *)(a1 + 136) = v11;
    if ( *(_QWORD *)(a2 + 144) && !*v6
      || *(_QWORD *)(a2 + 168) && !*v7
      || *(_QWORD *)(a2 + 192) && !*v8
      || *(_QWORD *)(a2 + 128) && !*(_QWORD *)(a1 + 128)
      || *(_QWORD *)(a2 + 136) && !v11 )
    {
      return 0i64;
    }
  }
  else
  {
    *(_QWORD *)(a2 + 144) = 0i64;
    *(_QWORD *)(a2 + 168) = 0i64;
    *(_QWORD *)(a2 + 192) = 0i64;
    *(_QWORD *)(a2 + 128) = 0i64;
    *(_QWORD *)(a2 + 136) = 0i64;
  }
  return 1i64;
}
// 140068E73: variable 'v9' is possibly undefined
// 140068E89: variable 'v10' is possibly undefined
