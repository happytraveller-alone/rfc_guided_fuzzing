//----- (00000001400E7D54) ----------------------------------------------------
struct std::locale::facet *__fastcall std::use_facet<std::codecvt<char,char,int>>(__int64 *a1)
{
  char v2; // bp
  __int64 v3; // rsi
  unsigned __int64 v4; // rdi
  __int64 v5; // rcx
  struct std::locale::facet *v6; // rbx
  struct std::locale::_Locimp *v7; // rax
  char *v8; // rdx
  __int64 v9; // rcx
  char v11[72]; // [rsp+28h] [rbp-60h] BYREF
  struct std::locale::facet *v12; // [rsp+90h] [rbp+8h] BYREF
  char v13; // [rsp+98h] [rbp+10h] BYREF

  v2 = 0;
  LODWORD(v12) = 0;
  std::_Lockit::_Lockit((std::_Lockit *)&v13, 0);
  v3 = std::_Facetptr<std::codecvt<char,char,int>>::_Psave;
  v4 = std::codecvt<char,char,int>::id;
  if ( !std::codecvt<char,char,int>::id )
  {
    std::_Lockit::_Lockit((std::_Lockit *)&v12, 0);
    if ( !std::codecvt<char,char,int>::id )
      std::codecvt<char,char,int>::id = ++std::locale::id::_Id_cnt;
    std::_Lockit::~_Lockit((std::_Lockit *)&v12);
    v4 = std::codecvt<char,char,int>::id;
  }
  v5 = *a1;
  if ( v4 >= *(_QWORD *)(*a1 + 24) )
    v6 = 0i64;
  else
    v6 = *(struct std::locale::facet **)(*(_QWORD *)(v5 + 16) + 8 * v4);
  if ( !v6 )
  {
    if ( *(_BYTE *)(v5 + 36) )
    {
      v7 = std::locale::_Getgloballocale();
      if ( v4 >= *((_QWORD *)v7 + 3) )
        v6 = 0i64;
      else
        v6 = *(struct std::locale::facet **)(*((_QWORD *)v7 + 2) + 8 * v4);
    }
    if ( !v6 )
    {
      if ( v3 )
      {
        v6 = (struct std::locale::facet *)v3;
      }
      else
      {
        v6 = (struct std::locale::facet *)operator new(0x10ui64);
        v12 = v6;
        if ( v6 )
        {
          v8 = *(char **)(*a1 + 40);
          if ( !v8 )
            v8 = (char *)(*a1 + 48);
          std::_Locinfo::_Locinfo((std::_Locinfo *)v11, v8);
          v2 = 1;
          *((_QWORD *)v6 + 1) = 0i64;
          *(_QWORD *)v6 = &std::codecvt<char,char,int>::`vftable';
        }
        else
        {
          v6 = 0i64;
        }
        if ( (v2 & 1) != 0 )
          std::_Locinfo::~_Locinfo((std::_Locinfo *)v11);
        std::_Facetptr<std::codecvt<char,char,int>>::_Psave = (__int64)v6;
        std::_Lockit::_Lockit((std::_Lockit *)&v12, 0);
        v9 = *((_QWORD *)v6 + 1);
        if ( v9 != -1 )
          *((_QWORD *)v6 + 1) = v9 + 1;
        std::_Lockit::~_Lockit((std::_Lockit *)&v12);
        std::locale::facet::_Facet_Register(v6);
      }
    }
  }
  std::_Lockit::~_Lockit((std::_Lockit *)&v13);
  return v6;
}
// 140171568: using guessed type void *std::codecvt<char,char,int>::`vftable';
// 1401B85A8: using guessed type int std::locale::id::_Id_cnt;
// 1401B9150: using guessed type __int64 std::_Facetptr<std::codecvt<char,char,int>>::_Psave;
// 1401B9FA8: using guessed type __int64 std::codecvt<char,char,int>::id;
