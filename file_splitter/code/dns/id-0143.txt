//----- (0000000140013130) ----------------------------------------------------
__int64 __fastcall createSecondaryZone(int a1, __int64 a2, __int64 a3, __int64 a4)
{
  __int64 v4; // r15
  unsigned int v7; // edi
  __int64 v9; // rsi
  _DWORD *v10; // rax
  _DWORD *v11; // r14
  unsigned int v12; // ebx
  unsigned int v13; // r9d
  char *v14; // r8
  __int64 v15; // rbx
  unsigned int v16; // r9d
  char *v17; // r8
  __int64 v18; // rax
  unsigned int v19; // ebx
  __int64 v20; // r15
  int v21; // edi
  __int128 v22; // [rsp+70h] [rbp-90h] BYREF
  char v23[256]; // [rsp+80h] [rbp-80h] BYREF
  char v24[272]; // [rsp+180h] [rbp+80h] BYREF

  v4 = 0i64;
  LODWORD(v22) = a1;
  if ( (unsigned int)a2 < 2 )
    return 3222394115i64;
  v7 = a2 - 1;
  v9 = a3 + 16;
  v10 = DnsAddrArray_Create((int)a2 - 1, a2, a3, a4);
  v11 = v10;
  if ( !v10 )
    return 14i64;
  if ( !(unsigned int)Mem_VerifyHeapBlock((__int64)v10, 0xFu, 0) )
    Dbg_HardAssert(
      "ds\\dns\\server\\server\\bootfile.c",
      0x17Du,
      "Mem_VerifyHeapBlock( arrayMasters, MEMTAG_DNSLIB, 0 )");
  v12 = 0;
  if ( !v7 )
    goto LABEL_10;
  while ( (unsigned int)File_ParseIpAddress((struct in_addr *)&v11[16 * (unsigned __int64)v12 + 8], v9, 0i64) )
  {
    ++v11[1];
    v9 += 16i64;
    if ( ++v12 >= v7 )
      goto LABEL_10;
  }
  if ( v12 == v7 - 1 && v12 )
  {
    v4 = v9;
    v11[1] = v12;
LABEL_10:
    v13 = *(_DWORD *)(a3 + 8);
    v14 = *(char **)a3;
    v23[0] = 0;
    File_CopyFileTextData(v23, 0x100u, v14, v13, 0);
    v15 = -1i64;
    if ( v4 )
    {
      v16 = *(_DWORD *)(v4 + 8);
      v17 = *(char **)v4;
      v24[0] = 0;
      File_CopyFileTextData(v24, 0x105u, v17, v16, 0);
      v18 = -1i64;
      do
        ++v18;
      while ( v24[v18] );
    }
    else
    {
      LODWORD(v18) = 0;
    }
    v20 = -v4;
    do
      ++v15;
    while ( v23[v15] );
    v21 = v22;
    v19 = Zone_CreateEx(
            (__int64 *)&v22,
            (unsigned int)v22,
            v23,
            v15,
            0,
            v11,
            0,
            0i64,
            (char *)((unsigned __int64)v24 & -(__int64)(v20 != 0)),
            v18,
            0i64,
            0i64,
            0i64);
    if ( v19 )
    {
      v22 = DNS_EVENT_ZONE_CREATION_FAILED;
      File_LogFileParsingError(&v22, a4, v9);
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        WPP_SF_D(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0xFu,
          (__int64)&WPP_60a4112be8d5305b8c36a81144862647_Traceguids,
          v21);
      }
    }
    goto LABEL_26;
  }
  v22 = DNS_EVENT_INVALID_IP_ADDRESS_STRING;
  File_LogFileParsingError(&v22, a4, v9);
  v19 = -1072573183;
LABEL_26:
  Mem_Free(v11, 0i64, 0i64, (__int64)"ds\\dns\\server\\server\\bootfile.c", 470);
  return v19;
}
// 140187260: using guessed type __int128 DNS_EVENT_ZONE_CREATION_FAILED;
// 140187B70: using guessed type __int128 DNS_EVENT_INVALID_IP_ADDRESS_STRING;
// 140013130: using guessed type char var_260[256];
// 140013130: using guessed type char var_160[272];
