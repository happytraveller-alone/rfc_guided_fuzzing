//----- (000000014012A050) ----------------------------------------------------
__int64 __fastcall std::basic_stringbuf<unsigned short>::overflow(__int64 a1, unsigned __int16 a2)
{
  unsigned __int64 *v4; // r9
  unsigned __int64 v5; // rdx
  unsigned __int64 v6; // r8
  __int64 v7; // rcx
  __int64 result; // rax
  unsigned __int64 v9; // rdx
  int *v10; // r8
  __int64 v11; // r9
  unsigned __int64 v12; // rsi
  unsigned __int64 v13; // rax
  unsigned __int64 v14; // r14
  __int64 v15; // rdi
  const void **v16; // rax
  void *v17; // r15
  __int64 *v18; // rax
  bool v19; // zf
  __int64 *v20; // rax
  __int64 v21; // rdx
  __int64 v22; // r8
  __int64 v23; // rcx
  __int64 v24; // rdx
  _DWORD *v25; // rax
  _WORD **v26; // rcx
  unsigned __int16 *v27; // rdx
  char pExceptionObject[56]; // [rsp+20h] [rbp-38h] BYREF

  if ( (*(_BYTE *)(a1 + 120) & 8) != 0 )
  {
    v4 = *(unsigned __int64 **)(a1 + 72);
    v5 = *v4;
    if ( *v4 )
    {
      v6 = *(_QWORD *)(a1 + 112);
      if ( v5 < v6 )
      {
        v7 = **(int **)(a1 + 96);
        *v4 = v6;
        **(_DWORD **)(a1 + 96) = (__int64)(v5 + 2 * v7 - v6) >> 1;
      }
    }
  }
  if ( a2 == 0xFFFF )
    return 0i64;
  v9 = **(_QWORD **)(a1 + 72);
  if ( !v9 || (v10 = *(int **)(a1 + 96), v11 = *v10, v9 >= v9 + 2 * v11) )
  {
    if ( (*(_BYTE *)(a1 + 120) & 2) != 0 )
      return 0xFFFFi64;
    if ( v9 )
      v12 = (__int64)(v9 + 2i64 * **(int **)(a1 + 96) - **(_QWORD **)(a1 + 32)) >> 1;
    else
      v12 = 0i64;
    v13 = 32i64;
    if ( v12 >> 1 < 0x20 || (v13 = v12 >> 1) != 0 )
    {
      do
      {
        if ( 0x7FFFFFFF - v13 >= v12 )
          break;
        v13 >>= 1;
      }
      while ( v13 );
    }
    if ( !v13 )
      return 0xFFFFi64;
    v14 = v13 + v12;
    v15 = 0i64;
    if ( v13 + v12 )
    {
      if ( v14 > 0x7FFFFFFFFFFFFFFFi64 || (v15 = (__int64)operator new(2 * v14)) == 0 )
      {
        std::bad_alloc::bad_alloc((std::bad_alloc *)pExceptionObject, 0i64);
        CxxThrowException_0(pExceptionObject, (_ThrowInfo *)&TI2_AVbad_alloc_std__);
      }
    }
    v16 = *(const void ***)(a1 + 32);
    v17 = (void *)*v16;
    if ( v12 )
    {
      memcpy_0((void *)v15, *v16, 2 * v12);
      *(_QWORD *)(a1 + 112) = v15 + 2 * ((__int64)(*(_QWORD *)(a1 + 112) - (_QWORD)v17) >> 1);
      v21 = v15 + 2 * ((__int64)(**(_QWORD **)(a1 + 72) - (_QWORD)v17) >> 1);
      **(_QWORD **)(a1 + 40) = v15 + 2 * ((__int64)(**(_QWORD **)(a1 + 40) - (_QWORD)v17) >> 1);
      **(_QWORD **)(a1 + 72) = v21;
      **(_DWORD **)(a1 + 96) = (__int64)(v15 + 2 * v14 - v21) >> 1;
      if ( (*(_BYTE *)(a1 + 120) & 4) == 0 )
      {
        v22 = **(_QWORD **)(a1 + 72);
        v23 = (__int64)(**(_QWORD **)(a1 + 64) - (_QWORD)v17) >> 1;
        **(_QWORD **)(a1 + 32) = v15;
        v24 = v15 + 2 * v23;
        **(_QWORD **)(a1 + 64) = v24;
        **(_DWORD **)(a1 + 88) = (v22 - v24 + 2) >> 1;
        goto LABEL_31;
      }
      **(_QWORD **)(a1 + 32) = v15;
      v20 = *(__int64 **)(a1 + 64);
    }
    else
    {
      v18 = *(__int64 **)(a1 + 40);
      *(_QWORD *)(a1 + 112) = v15;
      *v18 = v15;
      **(_QWORD **)(a1 + 72) = v15;
      **(_DWORD **)(a1 + 96) = (__int64)(2 * v14) >> 1;
      v19 = (*(_BYTE *)(a1 + 120) & 4) == 0;
      **(_QWORD **)(a1 + 32) = v15;
      v20 = *(__int64 **)(a1 + 64);
      if ( v19 )
      {
        *v20 = v15;
        **(_DWORD **)(a1 + 88) = 1;
LABEL_31:
        if ( (*(_BYTE *)(a1 + 120) & 1) != 0 )
          operator delete(v17);
        v25 = *(_DWORD **)(a1 + 96);
        *(_DWORD *)(a1 + 120) |= 1u;
        --*v25;
        goto LABEL_34;
      }
    }
    *v20 = 0i64;
    **(_DWORD **)(a1 + 88) = v15 >> 1;
    goto LABEL_31;
  }
  *v10 = v11 - 1;
LABEL_34:
  v26 = *(_WORD ***)(a1 + 72);
  v27 = (*v26)++;
  result = a2;
  *v27 = a2;
  return result;
}
// 14012A19C: conditional instruction was optimized away because rsi.8!=0
// 140184CA8: using guessed type void __stdcall operator delete(void *);
