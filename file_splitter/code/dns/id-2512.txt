//----- (000000014012DA64) ----------------------------------------------------
__int64 __fastcall std::basic_ostream<unsigned short>::sentry::sentry(__int64 a1, __int64 a2)
{
  __int64 v4; // rcx
  __int64 v5; // rdi
  __int64 v6; // rdi
  int v7; // ebp
  __int64 v8; // rcx
  __int64 v9; // rcx
  int v10; // edx

  *(_QWORD *)a1 = a2;
  v4 = *(_QWORD *)(*(int *)(*(_QWORD *)a2 + 4i64) + a2 + 72);
  if ( v4 )
    (*(void (__fastcall **)(__int64))(*(_QWORD *)v4 + 8i64))(v4);
  v5 = *(int *)(*(_QWORD *)a2 + 4i64);
  if ( !*(_DWORD *)(v5 + a2 + 16) )
  {
    v6 = *(_QWORD *)(v5 + a2 + 80);
    if ( v6 )
    {
      v7 = 0;
      v8 = *(int *)(*(_QWORD *)v6 + 4i64);
      if ( (*(_BYTE *)(v8 + v6 + 16) & 6) == 0
        && (*(unsigned int (__fastcall **)(_QWORD))(**(_QWORD **)(v8 + v6 + 72) + 104i64))(*(_QWORD *)(v8 + v6 + 72)) == -1 )
      {
        v7 = 4;
      }
      v9 = v6 + *(int *)(*(_QWORD *)v6 + 4i64);
      if ( v7 )
      {
        v10 = v7 | *(_DWORD *)(v9 + 16);
        if ( !*(_QWORD *)(v9 + 72) )
          LOBYTE(v10) = v10 | 4;
        std::ios_base::clear((std::ios_base *)v9, v10, 0);
      }
    }
  }
  *(_BYTE *)(a1 + 8) = *(_DWORD *)(*(int *)(*(_QWORD *)a2 + 4i64) + a2 + 16) == 0;
  return a1;
}
// 140185140: using guessed type __int64 (__fastcall *_guard_dispatch_icall_fptr)(_QWORD, _QWORD);
