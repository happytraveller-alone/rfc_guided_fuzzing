//----- (0000000140065FFC) ----------------------------------------------------
__int64 Nbstat_Initialize()
{
  __int64 v1; // rdx
  int v2; // eax
  __int64 v3; // rdx
  HANDLE *v4; // rax
  CDnsClientSubnetRecordsTrie *v5; // rcx
  unsigned __int16 v6; // dx
  __int64 v7; // rbx
  bool v8; // zf
  void *v9; // rcx
  HANDLE EventW; // rax
  __int128 v11; // [rsp+40h] [rbp-18h] BYREF

  if ( g_bNbstatInitialized )
    return 1i64;
  cNbtInterfaceCount = 0;
  dwInterfaceBitmask = 0;
  dwNbtBufferLength = 0;
  if ( !(unsigned int)openNbt() )
    goto LABEL_16;
  v2 = 0;
  dwInterfaceBitmask = 0;
  if ( cNbtInterfaceCount )
  {
    v3 = (unsigned int)cNbtInterfaceCount;
    do
    {
      v2 = 2 * v2 + 1;
      --v3;
    }
    while ( v3 );
    dwInterfaceBitmask = v2;
  }
  dwNbtBufferLength = 2096 * cNbtInterfaceCount;
  pNbstatQueue = (__int64)PQ_CreatePacketQueue("Nbstat", 6, 3, 0, 0);
  if ( !pNbstatQueue )
    goto LABEL_16;
  pNbstatPrivateQueue = (__int64)PQ_CreatePacketQueue("NbstatPrivate", 7, 0, 0, 0);
  if ( !pNbstatPrivateQueue )
    goto LABEL_16;
  cEventArrayCount = cNbtInterfaceCount + 2;
  v4 = (HANDLE *)Mem_Alloc(8 * (cNbtInterfaceCount + 2), 14i64, "ds\\dns\\server\\server\\nbstat.c", 1937);
  phWaitEventArray = v4;
  v1 = (__int64)v4;
  if ( v4 )
  {
    v7 = 0i64;
    v8 = cNbtInterfaceCount == 0;
    v9 = *(void **)(pNbstatQueue + 72);
    v4[1] = hDnsShutdownEvent;
    phNbstatEventArray = (__int64)(v4 + 2);
    *v4 = v9;
    if ( v8 )
    {
LABEL_25:
      if ( Thread_Create("Nbstat Thread", (__int64 (__fastcall *)(__int64))NbstatThread, 0i64, 0) )
      {
        g_bNbstatInitialized = 1;
        return 1i64;
      }
      goto LABEL_16;
    }
    while ( 1 )
    {
      EventW = CreateEventW(0i64, 1, 1, 0i64);
      if ( !EventW )
        break;
      *(_QWORD *)(phNbstatEventArray + 8 * v7) = EventW;
      v7 = (unsigned int)(v7 + 1);
      if ( (unsigned int)v7 >= cNbtInterfaceCount )
        goto LABEL_25;
    }
    v5 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control )
      goto LABEL_21;
    if ( (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x10000) == 0 || *((_BYTE *)WPP_GLOBAL_Control + 65) < 4u )
      goto LABEL_17;
    v6 = 58;
LABEL_15:
    WPP_SF_(*((_QWORD *)v5 + 7), v6, (__int64)&WPP_fc3a6397bf853e2fe940ea821e43295b_Traceguids);
LABEL_16:
    v5 = WPP_GLOBAL_Control;
    goto LABEL_17;
  }
  v5 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control )
  {
    if ( (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x10000) == 0 || *((_BYTE *)WPP_GLOBAL_Control + 65) < 4u )
    {
LABEL_17:
      if ( v5 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)v5 + 17) & 0x10000) != 0
        && *((_BYTE *)v5 + 65) >= 4u )
      {
        WPP_SF_(*((_QWORD *)v5 + 7), 0x3Bu, (__int64)&WPP_fc3a6397bf853e2fe940ea821e43295b_Traceguids);
      }
      goto LABEL_21;
    }
    v6 = 57;
    goto LABEL_15;
  }
LABEL_21:
  v11 = DNS_EVENT_NBSTAT_INIT_FAILED;
  Eventlog_LogEvent((__int64)&v11, v1, 0, 0i64, 0i64, 0, 0, 0i64);
  closeNbt();
  return 0i64;
}
// 14006618F: variable 'v1' is possibly undefined
// 140187160: using guessed type __int128 DNS_EVENT_NBSTAT_INIT_FAILED;
// 1401CBDC8: using guessed type int cNbtInterfaceCount;
// 1401CBDD8: using guessed type int dwInterfaceBitmask;
// 1401CBDDC: using guessed type int dwNbtBufferLength;
// 1401CBDF0: using guessed type __int64 phNbstatEventArray;
// 1401CBDF8: using guessed type int g_bNbstatInitialized;
// 1401CBE00: using guessed type __int64 pNbstatQueue;
// 1401CBE08: using guessed type __int64 pNbstatPrivateQueue;
// 140065FFC: using guessed type __int128 var_18;
