//----- (000000014011A2EC) ----------------------------------------------------
__int64 __fastcall Name_CompareLookupNames(_WORD *a1, _WORD *a2)
{
  __int64 result; // rax
  __int64 v5; // rdi
  __int64 v6; // rbx
  __int64 v7; // r14
  bool v8; // zf
  __int64 v9; // r15
  unsigned __int8 **v10; // r12
  unsigned __int8 **v11; // r13
  int v12; // r9d

  result = 0i64;
  if ( a1 == a2 )
    return result;
  v5 = (unsigned __int16)*a1;
  v6 = (unsigned __int16)*a2;
  if ( !*a1 )
    return (unsigned int)-((_DWORD)v6 != 0);
  if ( !*a2 )
    return 1i64;
  v7 = (unsigned __int16)*a1;
  v8 = (_DWORD)v5 == 0;
  if ( !*a1 )
    goto LABEL_11;
  v9 = (unsigned __int16)*a2;
  v10 = (unsigned __int8 **)&a1[4 * v5 + 4];
  v11 = (unsigned __int8 **)&a2[4 * v6 + 4];
  do
  {
    if ( v9 <= 0 )
      break;
    if ( (_DWORD)result )
      return result;
    v12 = *((unsigned __int8 *)a2 + v9 + 327);
    --v7;
    --v10;
    --v9;
    --v11;
    LODWORD(v5) = v5 - 1;
    LODWORD(v6) = v6 - 1;
    result = Name_CaseInsensitiveLabelCompare(*v10, *((unsigned __int8 *)a1 + v7 + 328), *v11, v12);
  }
  while ( v7 > 0 );
  if ( !(_DWORD)result )
  {
    v8 = (_DWORD)v5 == 0;
LABEL_11:
    if ( !v8 || (_DWORD)v6 )
    {
      result = 1i64;
      if ( (int)v6 > 0 )
        return 0xFFFFFFFFi64;
    }
  }
  return result;
}
