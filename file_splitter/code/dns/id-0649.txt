//----- (000000014005A750) ----------------------------------------------------
wchar_t *__fastcall GetPolicyCriteriaString(__int64 a1)
{
  unsigned int v2; // r12d
  const wchar_t *v3; // rbx
  __int64 v4; // r8
  _DWORD **v5; // rdx
  _DWORD *v6; // rcx
  const wchar_t *v7; // rax
  __int64 v8; // rcx
  __int64 v9; // rax
  __int64 v10; // rcx
  wchar_t *v11; // rdi
  STRSAFE_LPWSTR *v12; // r9
  CDnsClientSubnetRecordsTrie *v13; // rcx
  unsigned __int16 v14; // dx
  unsigned int v15; // ebp
  int v16; // ecx
  const wchar_t *v17; // rax
  STRSAFE_LPWSTR *v18; // r9
  STRSAFE_LPWSTR *v19; // r9
  size_t *v21; // [rsp+20h] [rbp-38h]
  size_t *v22; // [rsp+20h] [rbp-38h]
  size_t *v23; // [rsp+20h] [rbp-38h]
  DWORD v24; // [rsp+28h] [rbp-30h]
  DWORD v25; // [rsp+28h] [rbp-30h]
  DWORD v26; // [rsp+28h] [rbp-30h]

  v2 = 0;
  v3 = 0i64;
  if ( *(_DWORD *)(a1 + 56) )
  {
    v4 = *(unsigned int *)(a1 + 56);
    v5 = (_DWORD **)(a1 + 64);
    do
    {
      v6 = *v5;
      if ( **v5 )
      {
        switch ( *v6 )
        {
          case 1:
            v3 = L"TransportProtocol";
            break;
          case 2:
            v3 = L"NetworkProtocol";
            break;
          case 3:
            v3 = L"InterfaceIP";
            break;
          case 4:
            v3 = L"FQDN";
            break;
          case 5:
            v3 = L"QType";
            break;
          default:
            v7 = L"TimeOfDay";
            if ( *v6 != 6 )
              v7 = v3;
            v3 = v7;
            break;
        }
      }
      else
      {
        v3 = L"ClientSubnet";
      }
      v8 = *((_QWORD *)v6 + 1);
      v9 = -1i64;
      do
        ++v9;
      while ( *(_WORD *)(v8 + 2 * v9) );
      v10 = -1i64;
      do
        ++v10;
      while ( v3[v10] );
      ++v5;
      v2 += v9 + v10 + 2;
      --v4;
    }
    while ( v4 );
  }
  v11 = (wchar_t *)Mem_AllocZero(2 * v2 + 2, 0i64, "ds\\dns\\server\\server\\log.c", 3992);
  if ( v11 )
  {
    v15 = 0;
    if ( !*(_DWORD *)(a1 + 56) )
      return v11;
    while ( 1 )
    {
      if ( v15 && StringCchCatExW(v11, v2, L";", v12, v21, v24) < 0 )
      {
        v13 = WPP_GLOBAL_Control;
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400000) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
        {
          v14 = 34;
          goto LABEL_59;
        }
        return 0i64;
      }
      v16 = **(_DWORD **)(a1 + 8i64 * v15 + 64);
      if ( v16 )
      {
        switch ( v16 )
        {
          case 1:
            v3 = L"TransportProtocol";
            break;
          case 2:
            v3 = L"NetworkProtocol";
            break;
          case 3:
            v3 = L"InterfaceIP";
            break;
          case 4:
            v3 = L"FQDN";
            break;
          case 5:
            v3 = L"QType";
            break;
          default:
            v17 = L"TimeOfDay";
            if ( v16 != 6 )
              v17 = v3;
            v3 = v17;
            break;
        }
      }
      else
      {
        v3 = L"ClientSubnet";
      }
      if ( StringCchCatExW(v11, v2, v3, v12, v21, v24) < 0
        || StringCchCatExW(v11, v2, L"=", v18, v22, v25) < 0
        || StringCchCatExW(v11, v2, *(STRSAFE_LPCWSTR *)(*(_QWORD *)(a1 + 8i64 * v15 + 64) + 8i64), v19, v23, v26) < 0 )
      {
        break;
      }
      if ( ++v15 >= *(_DWORD *)(a1 + 56) )
        return v11;
    }
    v13 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400000) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      v14 = 35;
      goto LABEL_59;
    }
  }
  else
  {
    v13 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400000) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      v14 = 33;
LABEL_59:
      WPP_SF_(*((_QWORD *)v13 + 7), v14, (__int64)&WPP_7aabcfb4077e3de7a2cc491a12601782_Traceguids);
    }
  }
  return 0i64;
}
// 14005A8A4: variable 'v12' is possibly undefined
// 14005A8A4: variable 'v21' is possibly undefined
// 14005A8A4: variable 'v24' is possibly undefined
// 14005A944: variable 'v18' is possibly undefined
// 14005A944: variable 'v22' is possibly undefined
// 14005A944: variable 'v25' is possibly undefined
// 14005A95B: variable 'v19' is possibly undefined
// 14005A95B: variable 'v23' is possibly undefined
// 14005A95B: variable 'v26' is possibly undefined
// 1401882F8: using guessed type wchar_t aTransportproto[18];
// 140188320: using guessed type wchar_t aNetworkprotoco[16];
// 140188340: using guessed type wchar_t aInterfaceip[12];
// 140188358: using guessed type wchar_t aFqdn[5];
// 140188368: using guessed type wchar_t aQtype[6];
// 140188378: using guessed type wchar_t aTimeofday[10];
