//----- (000000014006E44C) ----------------------------------------------------
__int64 __fastcall Plugin_DnsQueryScope(__int64 a1, __int64 a2, __int64 *a3)
{
  unsigned int v4; // ebx
  char v6; // r13
  char *v7; // rax
  CDnsClientSubnetRecordsTrie *v8; // r10
  int LastError; // eax
  const char *v10; // rbx
  const char *v11; // rax
  unsigned int v12; // eax
  __int64 v13; // r8
  unsigned __int64 v14; // rcx
  double v15; // xmm1_8
  const char *v16; // rcx
  char v17; // al
  const wchar_t *v18; // rax
  __int64 v19; // r9
  const unsigned __int16 *v20; // r9
  int v21; // eax
  int v22; // ecx
  __int64 v23; // rdx
  __int64 v24; // r8
  BOOL v26; // [rsp+60h] [rbp-A0h]
  int v27; // [rsp+60h] [rbp-A0h]
  __int64 v28; // [rsp+68h] [rbp-98h] BYREF
  ULONGLONG TickCount64; // [rsp+70h] [rbp-90h]
  LARGE_INTEGER v30; // [rsp+78h] [rbp-88h] BYREF
  LARGE_INTEGER PerformanceCount; // [rsp+80h] [rbp-80h] BYREF
  unsigned __int64 v32; // [rsp+88h] [rbp-78h]
  unsigned __int16 v33[256]; // [rsp+90h] [rbp-70h] BYREF
  char v34[512]; // [rsp+290h] [rbp+190h] BYREF

  v28 = a2;
  v4 = 0;
  memset_0(v33, 0, 0x170ui64);
  PerformanceCount.QuadPart = 0i64;
  v30.QuadPart = 0i64;
  TickCount64 = 0i64;
  v32 = 0i64;
  if ( !g_pfnPluginDnsQuery4 )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x40000) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x3Eu, (__int64)&WPP_2c132243eb273534b128a6dd6bc8e6e2_Traceguids);
    }
    return 632i64;
  }
  if ( !a1 )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x40000) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x3Fu, (__int64)&WPP_2c132243eb273534b128a6dd6bc8e6e2_Traceguids);
    }
    return 87i64;
  }
  v6 = 1;
  if ( v28 )
  {
    if ( !(unsigned int)Name_ConvertPacketNameToLookupNameEx(a1, (unsigned __int8 *)(a1 + 6316), v33, 1) )
      return 9002i64;
  }
  else
  {
    Name_WriteLookupNameForNode(a3, v33);
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x40000) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      v7 = Dbg_LookupName(v33);
      WPP_SF_s(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x40u,
        (__int64)&WPP_2c132243eb273534b128a6dd6bc8e6e2_Traceguids,
        v7);
    }
  }
  if ( !(unsigned int)Name_ConvertLookupNameToDottedName(v34, v33) )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x40000) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x41u, (__int64)&WPP_2c132243eb273534b128a6dd6bc8e6e2_Traceguids);
    }
    return 9002i64;
  }
  v8 = WPP_GLOBAL_Control;
  if ( (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x40000) == 0 && (qword_1401B9780 & 0x100000) == 0 )
    goto LABEL_37;
  LODWORD(v28) = 0;
  if ( g_fQPCounterAvailable )
  {
    if ( QueryPerformanceCounter(&PerformanceCount) )
    {
LABEL_36:
      v8 = WPP_GLOBAL_Control;
      goto LABEL_37;
    }
    LastError = GetLastError();
  }
  else
  {
    TickCount64 = GetTickCount64();
    LastError = v28;
  }
  if ( !LastError )
    goto LABEL_36;
  v8 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x40000) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_D(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x42u,
      (__int64)&WPP_2c132243eb273534b128a6dd6bc8e6e2_Traceguids,
      LastError);
    goto LABEL_36;
  }
LABEL_37:
  if ( !g_pfnPluginDnsQuery4 )
    goto LABEL_128;
  LODWORD(v28) = 0;
  memset_0(v33, 0, sizeof(v33));
  *(_DWORD *)(a1 + 6288) &= ~1u;
  v26 = *(_BYTE *)(a1 + 1413) != 0;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x40000) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    v10 = DnsAddr_Ntoa((struct in_addr *)(a1 + 128));
    v11 = DnsAddr_Ntoa((struct in_addr *)(a1 + 64));
    WPP_SF_sdssd(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x43u, v26, v34, *(_WORD *)(a1 + 440), (__int64)v11, (__int64)v10);
  }
  v12 = ((__int64 (__fastcall *)(char *, _QWORD, __int64, __int64, _QWORD, __int64, _QWORD, unsigned __int16 *, __int64, BOOL, __int64 *))g_pfnPluginDnsQuery4)(
          v34,
          *(unsigned __int16 *)(a1 + 440),
          a1 + 6304,
          a1 + 64,
          *(unsigned int *)(a1 + 96),
          a1 + 128,
          *(unsigned int *)(a1 + 160),
          v33,
          256i64,
          v26,
          &v28);
  v8 = WPP_GLOBAL_Control;
  v4 = v12;
  if ( (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x40000) == 0 && (qword_1401B9780 & 0x100000) == 0 )
    goto LABEL_58;
  v27 = 0;
  if ( g_fQPCounterAvailable )
  {
    if ( !QueryPerformanceCounter(&v30) )
      v27 = GetLastError();
    v14 = 0i64;
    v15 = 1000000.0 / (double)(int)g_lQCFrequency.LowPart * (double)(v30.LowPart - PerformanceCount.LowPart);
    if ( v15 >= 9.223372036854776e18 )
    {
      v15 = v15 - 9.223372036854776e18;
      if ( v15 < 9.223372036854776e18 )
        v14 = 0x8000000000000000ui64;
    }
    v32 = v14 + (unsigned int)(int)v15;
  }
  else
  {
    TickCount64 = GetTickCount64() - TickCount64;
  }
  if ( !v27 )
    goto LABEL_57;
  v8 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control )
    goto LABEL_64;
  if ( (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x40000) != 0 && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
  {
    WPP_SF_D(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x44u, (__int64)&WPP_2c132243eb273534b128a6dd6bc8e6e2_Traceguids, v27);
LABEL_57:
    v8 = WPP_GLOBAL_Control;
  }
LABEL_58:
  if ( v8 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)v8 + 17) & 0x40000) != 0
    && *((_BYTE *)v8 + 65) >= 4u )
  {
    v16 = "milli-seconds";
    v17 = TickCount64;
    if ( g_fQPCounterAvailable )
    {
      v17 = v32;
      v16 = "micro-seconds";
    }
    WPP_SF_dDSIsds(
      *((_QWORD *)v8 + 7),
      0x45u,
      *(unsigned __int16 *)(a1 + 480),
      v4,
      v28,
      (__int64)v33,
      v17,
      (__int64)v16,
      *(_WORD *)(a1 + 480),
      (__int64)v34);
    v8 = WPP_GLOBAL_Control;
  }
LABEL_64:
  if ( !v4 || v4 == -6 )
  {
    if ( dword_1401B991C )
      *(_BYTE *)(a1 + 1417) = 1;
    if ( !v33[0] || v33[0] == Source[0] && v33[1] == Source[1] )
    {
      *(_DWORD *)(a1 + 6288) |= 1u;
      *(_QWORD *)(a1 + 3664) = 0i64;
      v8 = WPP_GLOBAL_Control;
      if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        || (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x40000) == 0
        || *((_BYTE *)WPP_GLOBAL_Control + 65) < 4u )
      {
        goto LABEL_119;
      }
      WPP_SF_sd(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x49u,
        (__int64)&WPP_2c132243eb273534b128a6dd6bc8e6e2_Traceguids,
        v34);
    }
    else
    {
      if ( (unsigned int)LookUp_ServerScopeMap(
                           gServerScopeMap,
                           qword_1401C91E8,
                           v13,
                           0xFFFFFFFF,
                           v33,
                           (_QWORD *)(a1 + 3664)) )
      {
        v8 = WPP_GLOBAL_Control;
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x40000) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
        {
          WPP_SF_Ssd(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            0x48u,
            (__int64)&WPP_2c132243eb273534b128a6dd6bc8e6e2_Traceguids,
            v33,
            (__int64)v34);
          v8 = WPP_GLOBAL_Control;
        }
        v4 = 9002;
        goto LABEL_119;
      }
      if ( !*(_QWORD *)(a1 + 3664) )
      {
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x40000) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
        {
          WPP_SF_Ss(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            0x47u,
            (__int64)&WPP_2c132243eb273534b128a6dd6bc8e6e2_Traceguids,
            v33,
            (__int64)v34);
        }
        *(_DWORD *)(a1 + 6288) |= 0x20u;
        return 9002i64;
      }
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x40000) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        WPP_SF_Ss(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0x46u,
          (__int64)&WPP_2c132243eb273534b128a6dd6bc8e6e2_Traceguids,
          v33,
          (__int64)v34);
      }
      *(_DWORD *)(a1 + 6288) |= 1u;
      v21 = dword_1401B991C;
      v22 = *(_DWORD *)(a1 + 6288);
      if ( !dword_1401B991C )
      {
        if ( !*(_DWORD *)(*(_QWORD *)(a1 + 3664) + 296i64) || (*(_BYTE *)(a1 + 6306) & 1) == 0 )
          v6 = 0;
        *(_BYTE *)(a1 + 1417) = v6;
        v21 = dword_1401B991C;
      }
      v23 = *(_QWORD *)(a1 + 3664);
      v24 = *(_QWORD *)(v23 + 256);
      if ( (!v24 || !*(_DWORD *)(v24 + 4)) && !*(_DWORD *)(v23 + 296) && v21 )
        *(_BYTE *)(a1 + 1417) = 0;
      if ( (v22 & 0x100) == 0 )
      {
        *(_QWORD *)(a1 + 3688) = v23;
        *(_DWORD *)(a1 + 6288) = v22 | 0x100;
      }
    }
    v8 = WPP_GLOBAL_Control;
LABEL_119:
    if ( v4 != -5
      && v4 != 9002
      && v4 != 14
      && (v4 != -4 || *(_WORD *)(a1 + 6312) || *(_WORD *)(a1 + 6314) || *(_WORD *)(a1 + 6310)) )
    {
      goto LABEL_128;
    }
    *(_DWORD *)(a1 + 6288) |= 8u;
    goto LABEL_127;
  }
  if ( v4 != -3 )
    goto LABEL_119;
  *(_DWORD *)(a1 + 6288) &= ~1u;
  *(_QWORD *)(a1 + 3664) = 0i64;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x40000) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    if ( !g_pCacheZone || (v18 = *(const wchar_t **)(g_pCacheZone + 192)) == 0i64 )
      v18 = L"Default";
    v19 = *(_QWORD *)(a1 + 6280);
    if ( !v19 || (v20 = *(const unsigned __int16 **)(v19 + 192)) == 0i64 )
      v20 = L"Default";
    WPP_SF_SS(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x4Au,
      (__int64)&WPP_2c132243eb273534b128a6dd6bc8e6e2_Traceguids,
      v20,
      (__int64)v18);
  }
  *(_QWORD *)(a1 + 6280) = g_pCacheZone;
  if ( !dword_1401B97F8 || (*(_BYTE *)(a1 + 6306) & 1) == 0 )
    v6 = 0;
  *(_BYTE *)(a1 + 1417) = v6;
LABEL_127:
  v8 = WPP_GLOBAL_Control;
LABEL_128:
  if ( v8 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)v8 + 17) & 0x40000) != 0
    && *((_BYTE *)v8 + 65) >= 4u )
  {
    WPP_SF_Dq(*((_QWORD *)v8 + 7), 0x4Bu, (__int64)&WPP_2c132243eb273534b128a6dd6bc8e6e2_Traceguids, v4);
  }
  return v4;
}
// 14006EA43: variable 'v13' is possibly undefined
// 140185140: using guessed type __int64 (__fastcall *_guard_dispatch_icall_fptr)(_QWORD, _QWORD);
// 140188260: using guessed type wchar_t aDefault_1[8];
// 1401B8FC8: using guessed type __int64 g_pfnPluginDnsQuery4;
// 1401B8FE8: using guessed type int g_fQPCounterAvailable;
// 1401B9780: using guessed type __int64 qword_1401B9780;
// 1401B97F8: using guessed type int dword_1401B97F8;
// 1401B991C: using guessed type int dword_1401B991C;
// 1401C91E0: using guessed type __int64 gServerScopeMap;
// 1401C91E8: using guessed type __int64 qword_1401C91E8;
// 1401EC628: using guessed type __int64 g_pCacheZone;
