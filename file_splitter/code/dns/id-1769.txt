//----- (00000001400DF0F0) ----------------------------------------------------
TrustAnchor *__fastcall TrustAnchor::TrustAnchor(TrustAnchor *this, const struct TrustAnchor *a2)
{
  __int64 v4; // rcx
  struct _Dbase_Record *v5; // rax
  __int64 v6; // rax
  __int64 v7; // rcx
  __int64 v8; // rbx
  __int128 v10; // [rsp+28h] [rbp-20h] BYREF

  *(_QWORD *)this = 0i64;
  *((_QWORD *)this + 1) = 0i64;
  v4 = *(_QWORD *)a2;
  if ( *(_QWORD *)a2 )
  {
    if ( *(_WORD *)(v4 + 14) )
    {
      v5 = TrustAnchor::CopyResourceRecord((struct _Dbase_Record *)v4);
      v10 = 0i64;
      std::tr1::shared_ptr<_Dbase_Record>::_Resetp<_Dbase_Record>(&v10, (__int64)v5);
      v6 = *((_QWORD *)&v10 + 1);
      *((_QWORD *)&v10 + 1) = *((_QWORD *)this + 1);
      v7 = *((_QWORD *)&v10 + 1);
      *((_QWORD *)this + 1) = v6;
      *(_QWORD *)this = v10;
      if ( v7 )
      {
        if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v7 + 8), 0xFFFFFFFF) == 1 )
        {
          v8 = *((_QWORD *)&v10 + 1);
          (***((void (__fastcall ****)(_QWORD))&v10 + 1))(*((_QWORD *)&v10 + 1));
          if ( _InterlockedExchangeAdd((volatile signed __int32 *)(v8 + 12), 0xFFFFFFFF) == 1 )
            (*(void (__fastcall **)(_QWORD))(**((_QWORD **)&v10 + 1) + 8i64))(*((_QWORD *)&v10 + 1));
        }
      }
    }
  }
  *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
  *((_WORD *)this + 10) = *((_WORD *)a2 + 10);
  *((_BYTE *)this + 22) = *((_BYTE *)a2 + 22);
  *((_QWORD *)this + 3) = *((_QWORD *)a2 + 3);
  *((_QWORD *)this + 4) = *((_QWORD *)a2 + 4);
  return this;
}
// 140185140: using guessed type __int64 (__fastcall *_guard_dispatch_icall_fptr)(_QWORD, _QWORD);
