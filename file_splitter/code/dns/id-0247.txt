//----- (00000001400208A0) ----------------------------------------------------
__int64 __fastcall writeDelegation(_QWORD *a1, __int64 a2, __int64 *a3)
{
  unsigned __int8 v3; // di
  int v4; // r13d
  int v5; // r12d
  char *v9; // rax
  __int64 v10; // rbx
  __int64 v11; // rsi
  __int16 v12; // ax
  unsigned __int8 v13; // r9
  __int64 v14; // r10
  bool v15; // zf
  __int64 *GlueNodeForDbaseName; // rax
  __int64 *v17; // rsi
  __int64 v18; // rdi
  unsigned __int8 v19; // cl
  unsigned __int8 v20; // al
  unsigned int v22; // [rsp+78h] [rbp+10h] BYREF
  unsigned __int8 v23; // [rsp+80h] [rbp+18h]
  unsigned __int8 v24; // [rsp+88h] [rbp+20h]

  v3 = 0;
  v4 = 0;
  v24 = 0;
  v5 = 0;
  v23 = 0;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x20) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
  {
    v9 = Dbg_NodeName((__int64)a3);
    WPP_SF_ss(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x1Cu,
      (__int64)&WPP_7a25c08cfd4c38e91e9430fcc1361a51_Traceguids,
      v9,
      *(_QWORD *)(a2 + 16));
  }
  if ( *(_DWORD *)(a2 + 372) )
  {
    if ( *(__int64 **)(a2 + 40) == a3 )
    {
      v4 = 1;
      FormattedWriteToFileBuffer((__int64)a1, "\r\n;\r\n;  Zone NS records\r\n;\r\n\r\n");
    }
    else
    {
      FormattedWriteToFileBuffer((__int64)a1, "\r\n;\r\n;  Delegated sub-zone:  ");
      writeNodeNameToBuffer((__int64)a1, a3, 0i64, "\r\n;\r\n");
    }
  }
  else
  {
    v5 = 1;
  }
  v22 = -1;
  acquireRead(DbaseLock, 0xFFFFFFFF, &v22);
  v10 = a3[8];
  LOBYTE(v22) = 0;
  if ( v10 )
  {
    v11 = v4;
    while ( 1 )
    {
      if ( *(char *)(v10 + 10) >= 0 )
      {
        v12 = *(_WORD *)(v10 + 12);
        if ( (v12 == 2 || !v11 && (v12 == 43 || (unsigned __int16)(v12 - 46) <= 1u))
          && !omitRecordFromSignedWinsZone(a2, v10) )
        {
          if ( !v14 )
            goto LABEL_60;
          v3 = *(_BYTE *)(v10 + 8);
          v24 = v3;
          if ( v3 < v13 )
            break;
          if ( (v3 & 1) == 0 || dword_1401B98A0 )
          {
LABEL_60:
            if ( (unsigned int)RR_WriteToFile(a1, a2, v10, a3, 0) )
            {
              v15 = *(_WORD *)(v10 + 12) == 2;
              LOBYTE(v22) = v3;
              if ( v15 && (!v11 || !dword_1401B98C4) )
              {
                GlueNodeForDbaseName = (__int64 *)Lookup_FindGlueNodeForDbaseName(a2, v10 + 56);
                v17 = GlueNodeForDbaseName;
                if ( GlueNodeForDbaseName )
                {
                  v18 = GlueNodeForDbaseName[8];
                  v19 = 0;
                  if ( v18 )
                  {
                    while ( *(_WORD *)(v18 + 12) <= 0x1Cu )
                    {
                      if ( *(char *)(v10 + 10) >= 0 && (*(_WORD *)(v18 + 12) == 1 || *(_WORD *)(v18 + 12) == 28) )
                      {
                        if ( !v5 )
                          goto LABEL_42;
                        v20 = *(_BYTE *)(v18 + 8);
                        v23 = v20;
                        if ( v20 < v19 )
                          goto LABEL_45;
                        if ( (v20 & 1) == 0 || dword_1401B98A0 )
                        {
LABEL_42:
                          if ( !(unsigned int)RR_WriteToFile(a1, a2, v18, v17, 0) )
                          {
                            if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                              && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x20) != 0
                              && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
                            {
                              WPP_SF_(
                                *((_QWORD *)WPP_GLOBAL_Control + 7),
                                0x1Eu,
                                (__int64)&WPP_7a25c08cfd4c38e91e9430fcc1361a51_Traceguids);
                            }
                            v22 = -1;
                            releaseRead(DbaseLock, &v22, 1);
                            return 0i64;
                          }
                          v19 = v23;
                        }
                      }
                      v18 = *(_QWORD *)v18;
                      if ( !v18 )
                      {
LABEL_45:
                        v11 = v4;
                        goto LABEL_27;
                      }
                    }
                  }
                  v11 = v4;
                }
                else
                {
                  v11 = v4;
                }
              }
            }
            else if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                   && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x20) != 0
                   && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
            {
              WPP_SF_(
                *((_QWORD *)WPP_GLOBAL_Control + 7),
                0x1Du,
                (__int64)&WPP_7a25c08cfd4c38e91e9430fcc1361a51_Traceguids);
            }
          }
        }
      }
LABEL_27:
      v10 = *(_QWORD *)v10;
      if ( !v10 )
        break;
      v3 = v24;
    }
  }
  v22 = -1;
  releaseRead(DbaseLock, &v22, 1);
  if ( !v4 && !v5 )
    FormattedWriteToFileBuffer((__int64)a1, ";  End delegation\r\n\r\n");
  return 1i64;
}
// 1400209F2: variable 'v14' is possibly undefined
// 140020A03: variable 'v13' is possibly undefined
// 1401B98A0: using guessed type int dword_1401B98A0;
// 1401B98C4: using guessed type int dword_1401B98C4;
// 1401EC5E8: using guessed type __int64 DbaseLock;
