//----- (000000014014F2E4) ----------------------------------------------------
__int64 __fastcall CDnsRRLManager::GetThreadLock(CDnsRRLManager *this, struct IDnsRRLStateInfo *a2)
{
  CDnsRRLManager *v2; // r15
  unsigned int v4; // edi
  struct CDnsRRLThreadLocks *v5; // rsi
  struct _RTL_CRITICAL_SECTION *v6; // rbp
  unsigned int v7; // edx
  __int64 v8; // r8
  __int64 v9; // rdx
  __int64 v10; // rbx

  v2 = g_DnsRRLManager;
  EnterCriticalSection((LPCRITICAL_SECTION)((char *)g_DnsRRLManager + 48));
  v4 = 0;
  if ( (*(__int64 (__fastcall **)(struct IDnsRRLStateInfo *))(*(_QWORD *)a2 + 104i64))(a2) )
    goto LABEL_14;
  v5 = g_DnsRRLThreadLock;
  v6 = (struct _RTL_CRITICAL_SECTION *)((char *)g_DnsRRLThreadLock + 16);
  EnterCriticalSection((LPCRITICAL_SECTION)((char *)g_DnsRRLThreadLock + 16));
  v7 = 0;
  if ( *(_DWORD *)v5 )
  {
    v8 = *((_QWORD *)v5 + 1);
    while ( **(_DWORD **)(v8 + 8i64 * v7) )
    {
      if ( ++v7 >= *(_DWORD *)v5 )
        goto LABEL_6;
    }
    v10 = v7;
    **(_DWORD **)(v8 + 8i64 * v7) = 1;
    LeaveCriticalSection(v6);
    v9 = *(_QWORD *)(*((_QWORD *)v5 + 1) + 8 * v10);
  }
  else
  {
LABEL_6:
    LeaveCriticalSection(v6);
    v9 = 0i64;
  }
  if ( v9 )
  {
    (*(void (__fastcall **)(struct IDnsRRLStateInfo *))(*(_QWORD *)a2 + 112i64))(a2);
LABEL_14:
    (*(void (__fastcall **)(struct IDnsRRLStateInfo *))(*(_QWORD *)a2 + 88i64))(a2);
    v4 = 1;
    goto LABEL_15;
  }
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x800000) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
  {
    WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x1Eu, (__int64)&WPP_9d24e83261bb323d145bf67b982c6afc_Traceguids);
  }
LABEL_15:
  LeaveCriticalSection((LPCRITICAL_SECTION)((char *)v2 + 48));
  return v4;
}
// 140185140: using guessed type __int64 (__fastcall *_guard_dispatch_icall_fptr)(_QWORD, _QWORD);
// 1401B9258: using guessed type struct CDnsRRLThreadLocks *g_DnsRRLThreadLock;
