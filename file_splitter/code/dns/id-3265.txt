//----- (000000014016FAD0) ----------------------------------------------------
__int64 WPP_SF_sdsdsDsdsd(__int64 a1, __int64 a2, const char *a3, int a4, const char *a5, ...)
{
  __int64 v5; // r9
  __int64 v7; // r11
  __int64 v8; // r11
  __int64 v9; // rbx
  __int64 v10; // rbx
  __int64 v11; // rdi
  __int64 v12; // rdi
  __int64 v13; // rsi
  __int64 v14; // rsi
  __int64 v15; // r9
  const char *v16; // r8
  const char *v17; // rax
  const char *v18; // rcx
  const char *v19; // rdx
  const char *v20; // r10
  int v22; // [rsp+F8h] [rbp+20h] BYREF
  __int64 v23; // [rsp+108h] [rbp+30h] BYREF
  va_list va; // [rsp+108h] [rbp+30h]
  const char *v25; // [rsp+110h] [rbp+38h]
  __int64 v26; // [rsp+118h] [rbp+40h] BYREF
  va_list va1; // [rsp+118h] [rbp+40h]
  const char *v28; // [rsp+120h] [rbp+48h]
  __int64 v29; // [rsp+128h] [rbp+50h] BYREF
  va_list va2; // [rsp+128h] [rbp+50h]
  const char *v31; // [rsp+130h] [rbp+58h]
  va_list va3; // [rsp+138h] [rbp+60h] BYREF

  va_start(va3, a5);
  va_start(va2, a5);
  va_start(va1, a5);
  va_start(va, a5);
  v23 = va_arg(va1, _QWORD);
  v25 = va_arg(va1, const char *);
  va_copy(va2, va1);
  v26 = va_arg(va2, _QWORD);
  v28 = va_arg(va2, const char *);
  va_copy(va3, va2);
  v29 = va_arg(va3, _QWORD);
  v31 = va_arg(va3, const char *);
  v22 = a4;
  v5 = -1i64;
  if ( v31 )
  {
    v7 = -1i64;
    do
      ++v7;
    while ( v31[v7] );
    v8 = v7 + 1;
  }
  else
  {
    v8 = 5i64;
  }
  if ( v28 )
  {
    v9 = -1i64;
    do
      ++v9;
    while ( v28[v9] );
    v10 = v9 + 1;
  }
  else
  {
    v10 = 5i64;
  }
  if ( v25 )
  {
    v11 = -1i64;
    do
      ++v11;
    while ( v25[v11] );
    v12 = v11 + 1;
  }
  else
  {
    v12 = 5i64;
  }
  if ( a5 )
  {
    v13 = -1i64;
    do
      ++v13;
    while ( a5[v13] );
    v14 = v13 + 1;
  }
  else
  {
    v14 = 5i64;
  }
  if ( a3 )
  {
    do
      ++v5;
    while ( a3[v5] );
    v15 = v5 + 1;
  }
  else
  {
    v15 = 5i64;
  }
  v16 = "NULL";
  v17 = "NULL";
  if ( v31 )
    v17 = v31;
  v18 = "NULL";
  if ( v28 )
    v18 = v28;
  v19 = "NULL";
  if ( v25 )
    v19 = v25;
  v20 = "NULL";
  if ( a5 )
    v20 = a5;
  if ( a3 )
    v16 = a3;
  return FastWppTraceMessage(
           (__int64)&WPP_7f900513327334733b8f3a4951ec5607_Traceguids,
           0x24u,
           v16,
           v15,
           &v22,
           4i64,
           v20,
           v14,
           va,
           4i64,
           v19,
           v12,
           va1,
           4i64,
           v18,
           v10,
           va2,
           4i64,
           v17,
           v8,
           va3,
           4i64,
           0i64);
}
