//----- (0000000140151EE4) ----------------------------------------------------
__int64 DnsVal_ValidateRRsetWithRRSIGandDNSKey(unsigned __int8 *a1, __int64 a2, __int64 a3, __int64 a4, u_long a5, ...)
{
  u_long v8; // ebx
  u_long v9; // r12d
  u_long v10; // r15d
  unsigned int v11; // ebp
  __int64 v12; // r14
  u_long v13; // eax
  bool v14; // cc
  unsigned int v15; // ebx
  int *v16; // r14
  __int64 result; // rax
  int v18; // ebx
  u_short v19; // cx
  unsigned __int16 v20; // ax
  int *v21; // [rsp+20h] [rbp-48h]
  unsigned int v22; // [rsp+70h] [rbp+8h] BYREF
  __int64 v23; // [rsp+88h] [rbp+20h]
  _QWORD *v24; // [rsp+98h] [rbp+30h] BYREF
  va_list va; // [rsp+98h] [rbp+30h]
  _DWORD *v26; // [rsp+A0h] [rbp+38h]
  int *v27; // [rsp+A8h] [rbp+40h]
  va_list va1; // [rsp+B0h] [rbp+48h] BYREF

  va_start(va1, a5);
  va_start(va, a5);
  v24 = va_arg(va1, _QWORD *);
  v26 = va_arg(va1, _DWORD *);
  v27 = va_arg(va1, int *);
  v23 = a4;
  v22 = 0;
  if ( a1[1] > *(_BYTE *)(a3 + 59) )
    *v26 = 1;
  v8 = ntohl(*(_DWORD *)(a3 + 64));
  v9 = ntohl(*(_DWORD *)(a3 + 60));
  if ( (*(_BYTE *)(a3 + 8) & 1) != 0 )
    v10 = *(_DWORD *)(a3 + 20);
  else
    v10 = ntohl(*(_DWORD *)(a3 + 20));
  v11 = -1;
  v12 = a2;
  while ( v12 )
  {
    if ( *(_WORD *)(v12 + 12) != *(_WORD *)(a2 + 12) )
      break;
    if ( (*(_BYTE *)(v12 + 8) & 1) != 0 )
      v13 = *(_DWORD *)(a2 + 20);
    else
      v13 = ntohl(*(_DWORD *)(a2 + 20));
    v12 = *(_QWORD *)v12;
    if ( v13 < v11 )
      v11 = v13;
  }
  if ( v9 < v10 )
    v10 = v9;
  if ( v10 < v11 )
    v11 = v10;
  v14 = a5 <= v8;
  if ( a5 < v8 )
  {
    if ( v8 - a5 <= 0x80000000 )
    {
LABEL_23:
      v15 = v8 - a5;
      goto LABEL_25;
    }
    v14 = a5 <= v8;
  }
  if ( !v14 && a5 - v8 > 0x80000000 )
    goto LABEL_23;
  v15 = 0;
LABEL_25:
  v16 = v27;
  v21 = v27;
  if ( v15 < v11 )
    v11 = v15;
  *(_DWORD *)v24 = v11;
  result = DnsVal_GetCanonicalRRsetForSigning(a1, a2, a3, (__int64 *)va, v21);
  if ( !(_DWORD)result )
  {
    v18 = DnsVal_CheckSignatureOnRRset(v23, a3, (__int64)v24, (__int64)&v22);
    Mem_Free(v24, 0i64, 0i64, (__int64)"ds\\dns\\server\\validator\\validator.c", 1680);
    if ( *(_WORD *)(a2 + 12) != 50 || !v22 )
      goto LABEL_40;
    v19 = ntohs(*(_WORD *)(a2 + 58));
    v20 = 150;
    if ( v22 <= 0x800 )
    {
      if ( v22 > 0x400 )
        v20 = 500;
    }
    else
    {
      v20 = 2500;
    }
    if ( v19 > v20 )
    {
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_BYTE *)WPP_GLOBAL_Control + 28) & 1) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 25) >= 2u )
      {
        WPP_SF_D(
          *((_QWORD *)WPP_GLOBAL_Control + 2),
          0x2Au,
          (__int64)&WPP_c53e2308f6cf3329db3757b8a77c9921_Traceguids,
          *(unsigned __int16 *)(a2 + 58));
      }
      return 7i64;
    }
    else
    {
LABEL_40:
      if ( v18 >= 0 )
      {
        return 0i64;
      }
      else
      {
        if ( v16 )
          *v16 = v18;
        return 1i64;
      }
    }
  }
  return result;
}
