//----- (0000000140126710) ----------------------------------------------------
const void **__fastcall DnsSign::CDnsKeyPair::SetZoneName(const void **a1, const void **a2, const unsigned __int16 *a3)
{
  _QWORD *v5; // rdi
  DnsSign *v6; // rdx
  DnsSign *v7; // rcx
  const void **v8; // rdx

  if ( DnsSign::g_pWarningProcessor && a1[10] )
  {
    v5 = a1 + 8;
    v6 = (unsigned __int64)a1[11] < 8 ? (DnsSign *)(a1 + 8) : (DnsSign *)*v5;
    v7 = (unsigned __int64)a2[3] < 8 ? (DnsSign *)a2 : (DnsSign *)*a2;
    if ( !DnsSign::AreZoneNamesEqual(v7, v6, a3) )
    {
      if ( (unsigned __int64)a2[3] < 8 )
        v8 = a2;
      else
        v8 = (const void **)*a2;
      if ( v5[3] >= 8ui64 )
        v5 = (_QWORD *)*v5;
      (**(void (__fastcall ***)(struct DnsSign::CWarningProcessor *, __int64, __int64, _QWORD *, const void **))DnsSign::g_pWarningProcessor)(
        DnsSign::g_pWarningProcessor,
        10001i64,
        880087i64,
        v5,
        v8);
    }
  }
  return std::wstring::assign(a1 + 8, a2, 0i64, 0xFFFFFFFFFFFFFFFFui64);
}
// 140185140: using guessed type __int64 (__fastcall *_guard_dispatch_icall_fptr)(_QWORD, _QWORD);
// 1401B9DA8: using guessed type struct DnsSign::CWarningProcessor *DnsSign::g_pWarningProcessor;
