//----- (000000014011C060) ----------------------------------------------------
__int64 __fastcall File_ParseLine(__int64 a1, int a2)
{
  int v2; // r14d
  _BYTE **v3; // rsi
  int v5; // r12d
  unsigned __int16 v6; // bp
  int v7; // eax
  const char *v8; // rdi
  unsigned int CountNameFromToken; // edi
  _BYTE *v11; // rcx
  CDnsClientSubnetRecordsTrie *v12; // rcx
  __int16 v13; // r15
  unsigned __int8 v14; // di
  const char *v15; // rdi
  u_long v16; // ecx
  void *v17; // rax
  int v18; // eax
  __int64 (__fastcall **v19)(); // rcx
  __int64 (__fastcall *v20)(_QWORD, _QWORD, _BYTE **, __int64, _DWORD); // rax
  unsigned int v21; // eax
  __int64 v22; // r11
  __int64 v23; // r11
  __int64 v24; // rcx
  _QWORD *v25; // rcx
  u_long hostlong; // [rsp+70h] [rbp+8h] BYREF
  int v27; // [rsp+78h] [rbp+10h] BYREF

  v27 = a2;
  v2 = *(_DWORD *)(a1 + 1684);
  v3 = (_BYTE **)(a1 + 1688);
  v27 = 0;
  v5 = 0;
  hostlong = 0;
  v6 = 0;
  v7 = *(_DWORD *)(a1 + 1676);
  *(_QWORD *)(a1 + 800) = 0i64;
  *(_DWORD *)a1 = 4;
  *(_DWORD *)(a1 + 1600) = 0;
  *(_DWORD *)(a1 + 272) = 0;
  v8 = *(const char **)(a1 + 1688);
  if ( v7 || *v8 != 36 )
  {
    *(_DWORD *)a1 = 2;
    if ( v7 )
    {
      v11 = (_BYTE *)(a1 + 280);
      if ( !*v11 )
        Name_CopyCountName(v11, (unsigned __int8 *)(a1 + 4));
    }
    else
    {
      CountNameFromToken = File_ReadCountNameFromToken(
                             (unsigned __int8 *)(a1 + 280),
                             (_OWORD *)(a1 + 538),
                             a1,
                             (const void **)v3,
                             0);
      if ( CountNameFromToken )
        goto LABEL_91;
      --v2;
      v3 += 2;
    }
    if ( !v2 )
    {
LABEL_74:
      CountNameFromToken = -1072573181;
LABEL_75:
      v12 = WPP_GLOBAL_Control;
LABEL_76:
      if ( v12 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_BYTE *)v12 + 28) & 0x20) != 0
        && *((_BYTE *)v12 + 25) >= 4u )
      {
        WPP_SF_Dd(*((_QWORD *)v12 + 2), 0x19u, (__int64)&WPP_e002fba1c5a3348727e1b5bc526e7b6c_Traceguids, v6);
      }
LABEL_80:
      if ( !*(_DWORD *)(a1 + 1600) )
      {
        if ( CountNameFromToken == -1072573182 )
        {
          v24 = (unsigned int)(*(_DWORD *)(a1 + 1684) - 1);
          *(_DWORD *)(a1 + 1600) = 1504;
          *(_QWORD *)(a1 + 1608) = 16 * v24 + a1 + 1688;
        }
        else
        {
          if ( CountNameFromToken == -1072573181 )
          {
            *(_DWORD *)(a1 + 1600) = 1505;
          }
          else
          {
            if ( v6 != 0xFF01 )
            {
              *(_QWORD *)(a1 + 1608) = 0i64;
              if ( v6 == 0xFF02 )
                *(_DWORD *)(a1 + 1600) = 1651;
              else
                *(_DWORD *)(a1 + 1600) = 1503;
              goto LABEL_91;
            }
            *(_DWORD *)(a1 + 1600) = 1650;
          }
          *(_QWORD *)(a1 + 1608) = 0i64;
        }
      }
LABEL_91:
      v25 = *(_QWORD **)(a1 + 800);
      if ( v25 )
        Mem_Free(v25, 0i64, 0i64, (__int64)"ds\\dns\\server\\dnscore\\dfread_core.c", 1645);
      return CountNameFromToken;
    }
    if ( **v3 == 91 && *((_DWORD *)v3 + 2) > 5u && !strncmp("[AGE:", *v3, 5ui64) )
    {
      *((_DWORD *)v3 + 2) -= 5;
      *v3 += 5;
      *(_BYTE *)(a1 + 1672) = 93;
      if ( !(unsigned int)File_ParseDwordToken(&v27, (__int64)v3, a1) )
      {
        v12 = WPP_GLOBAL_Control;
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_BYTE *)WPP_GLOBAL_Control + 28) & 1) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 25) >= 4u )
        {
          WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 2), 0x15u, (__int64)&WPP_e002fba1c5a3348727e1b5bc526e7b6c_Traceguids);
LABEL_26:
          v12 = WPP_GLOBAL_Control;
        }
        CountNameFromToken = -1072573183;
        goto LABEL_76;
      }
      v5 = v27;
      --v2;
      v3 += 2;
      *(_BYTE *)(a1 + 1672) = 0;
    }
    v13 = 0;
    while ( 1 )
    {
      if ( !v2 )
        goto LABEL_74;
      v14 = **v3;
      if ( isdigit(v14) || v14 == 45 )
      {
        if ( !(unsigned int)File_ParseDwordToken(&hostlong, (__int64)v3, a1) )
          goto LABEL_26;
        v16 = hostlong;
        *(_DWORD *)(a1 + 272) = 1;
        *(_DWORD *)(a1 + 276) = htonl(v16);
      }
      else
      {
        if ( v13 )
          goto LABEL_49;
        v15 = *v3;
        if ( !*v3 )
          goto LABEL_49;
        if ( (_strnicmp(*v3, "IN", 2ui64) || *((_DWORD *)v3 + 2) != 2)
          && (_strnicmp(v15, "CLASS1", 6ui64) || *((_DWORD *)v3 + 2) != 6) )
        {
          if ( (!_strnicmp(v15, "CH", 2ui64) || !_strnicmp(v15, "HS", 2ui64) || !_strnicmp(v15, "CS", 2ui64))
            && *((_DWORD *)v3 + 2) == 2
            || !_strnicmp(v15, "CLASS", 5ui64) )
          {
            *(_DWORD *)(a1 + 1600) = 1614;
            *(_QWORD *)(a1 + 1608) = v3;
            goto LABEL_26;
          }
LABEL_49:
          v6 = DnsRecordTypeForName(*v3, *((unsigned int *)v3 + 2));
          if ( !v6 )
          {
            v6 = DnsRecordTypeForUnknownRecords(*v3, *((_DWORD *)v3 + 2));
            if ( !v6 )
            {
              CountNameFromToken = -1072573183;
              goto LABEL_75;
            }
          }
          *(_WORD *)(a1 + 808) = v6;
          if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_BYTE *)WPP_GLOBAL_Control + 28) & 1) != 0
            && *((_BYTE *)WPP_GLOBAL_Control + 25) >= 5u )
          {
            v17 = FormatLabelA(*((unsigned int *)v3 + 2), *v3);
            WPP_SF_Ds(
              *((_QWORD *)WPP_GLOBAL_Control + 2),
              0x16u,
              (__int64)&WPP_e002fba1c5a3348727e1b5bc526e7b6c_Traceguids,
              v6,
              (__int64)v17);
          }
          v18 = _strnicmp(v3[2], "\\# ", 3ui64);
          v19 = RRUnknownFileReadTable;
          if ( v18 )
            v19 = (__int64 (__fastcall **)())&RRFileReadTable;
          v20 = (__int64 (__fastcall *)(_QWORD, _QWORD, _BYTE **, __int64, _DWORD))RR_DispatchFunctionForType(
                                                                                     (__int64)v19,
                                                                                     v6);
          if ( !v20 )
          {
            if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
              && (*((_BYTE *)WPP_GLOBAL_Control + 28) & 0x20) != 0
              && *((_BYTE *)WPP_GLOBAL_Control + 25) >= 4u )
            {
              WPP_SF_D(
                *((_QWORD *)WPP_GLOBAL_Control + 2),
                0x17u,
                (__int64)&WPP_e002fba1c5a3348727e1b5bc526e7b6c_Traceguids,
                v6);
            }
            *(_DWORD *)(a1 + 1600) = 1600;
            CountNameFromToken = -1072573180;
            *(_QWORD *)(a1 + 1608) = v3;
            goto LABEL_91;
          }
          v21 = v20(0i64, (unsigned int)(v2 - 1), v3 + 2, a1, 0);
          CountNameFromToken = v21;
          if ( v21 )
          {
            if ( v21 == 9753 )
              return 0i64;
            v12 = WPP_GLOBAL_Control;
            if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control )
            {
              if ( (*((_BYTE *)WPP_GLOBAL_Control + 28) & 0x20) != 0 && *((_BYTE *)WPP_GLOBAL_Control + 25) >= 4u )
              {
                WPP_SF_D(
                  *((_QWORD *)WPP_GLOBAL_Control + 2),
                  0x18u,
                  (__int64)&WPP_e002fba1c5a3348727e1b5bc526e7b6c_Traceguids,
                  v6);
                goto LABEL_75;
              }
              goto LABEL_76;
            }
            goto LABEL_80;
          }
          v22 = *(_QWORD *)(a1 + 800);
          if ( v22 )
          {
            *(_WORD *)(v22 + 12) = v6;
            Mem_ResetTag(v22, 0x1Bu);
            *(_DWORD *)(v23 + 24) = v5;
            return 0i64;
          }
          return 3222394113i64;
        }
        v13 = 256;
      }
      --v2;
      v3 += 2;
    }
  }
  if ( *(_DWORD *)(a1 + 1696) == 7 )
  {
    if ( !_strnicmp(*(const char **)(a1 + 1688), "$ORIGIN", 7ui64) )
      return parseOriginDirective(a1);
  }
  else if ( *(_DWORD *)(a1 + 1696) == 8 && !_strnicmp(*(const char **)(a1 + 1688), "$INCLUDE", 8ui64) )
  {
    return parseIncludeDirective(a1);
  }
  if ( _strnicmp(v8, "$TTL", 4ui64) )
  {
    *(_DWORD *)(a1 + 1600) = 1520;
    CountNameFromToken = -1072573183;
    *(_QWORD *)(a1 + 1608) = v3;
    goto LABEL_91;
  }
  return parseTtlDirective(a1);
}
// 14011C3B3: conditional instruction was optimized away because r14d.4!=0
// 14011C54B: variable 'v23' is possibly undefined
// 140183D50: using guessed type __int64 __fastcall DnsRecordTypeForName(_QWORD, _QWORD);
// 140185140: using guessed type __int64 (__fastcall *_guard_dispatch_icall_fptr)(_QWORD, _QWORD);
// 1401B6120: using guessed type __int64 (__fastcall *RRUnknownFileReadTable[10])();
