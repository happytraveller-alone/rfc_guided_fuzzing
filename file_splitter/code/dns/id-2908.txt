//----- (0000000140151AB8) ----------------------------------------------------
__int64 __fastcall Dns_MatchDSToDNSKEY(unsigned __int8 *a1, __int64 a2, __int64 *a3, int a4, __int64 **a5, int *a6)
{
  int Algorithm; // eax
  __int64 v10; // rdx
  __int64 v11; // r8
  CDnsClientSubnetRecordsTrie *v13; // rcx
  USHORT v14; // dx
  LPCWSTR *v15; // r13
  _QWORD *v16; // rbp
  __int64 *v17; // rdi
  bool i; // zf
  unsigned __int16 v19; // dx
  int v20; // r14d
  int v21; // eax
  __int64 v22; // rdx
  __int64 v23; // r8
  __int64 v24; // [rsp+20h] [rbp-98h]
  __int64 v25; // [rsp+28h] [rbp-90h]
  int v26; // [rsp+30h] [rbp-88h]
  __int16 v27; // [rsp+40h] [rbp-78h] BYREF
  unsigned __int8 *v28; // [rsp+48h] [rbp-70h] BYREF
  __int16 v29; // [rsp+70h] [rbp-48h]
  __int64 *v30; // [rsp+78h] [rbp-40h]
  LPCWSTR *v32; // [rsp+C8h] [rbp+10h] BYREF

  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 28) & 1) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 25) >= 4u )
  {
    WPP_SF_qdD(
      *((_QWORD *)WPP_GLOBAL_Control + 2),
      0x1Du,
      (__int64)&WPP_c53e2308f6cf3329db3757b8a77c9921_Traceguids,
      a2,
      *(unsigned __int16 *)(a2 + 12),
      *(unsigned __int8 *)(a2 + 59));
  }
  Algorithm = DnsVal_GetAlgorithm(*(_BYTE *)(a2 + 59), 0, &v32);
  if ( Algorithm < 0 )
  {
    if ( Algorithm == -1073741275 )
    {
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_BYTE *)WPP_GLOBAL_Control + 28) & 1) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 25) >= 4u )
      {
        WPP_SF_qqLD(*((_QWORD *)WPP_GLOBAL_Control + 2), v10, v11, a2, a3);
      }
      return 5i64;
    }
    if ( a6 )
      *a6 = Algorithm;
    v13 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      || (*((_BYTE *)WPP_GLOBAL_Control + 28) & 1) == 0
      || *((_BYTE *)WPP_GLOBAL_Control + 25) < 4u )
    {
      return 1i64;
    }
    v14 = 31;
    v26 = Algorithm;
LABEL_18:
    LODWORD(v25) = 1;
    WPP_SF_qqLL(*((_QWORD *)v13 + 2), v14, v11, a2, a3, v25, v26);
    return 1i64;
  }
  v15 = v32;
  if ( *((_DWORD *)v32 + 17) != *(unsigned __int16 *)(a2 + 14) - 4i64 )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 28) & 1) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 25) >= 4u )
    {
      LODWORD(v25) = 7;
      WPP_SF_qqLL(
        *((_QWORD *)WPP_GLOBAL_Control + 2),
        0x20u,
        (unsigned int)*(unsigned __int16 *)(a2 + 14) - 4,
        a2,
        a3,
        v25,
        *(unsigned __int16 *)(a2 + 14) - 4);
    }
    return 7i64;
  }
  v16 = Mem_Alloc(*((_DWORD *)v32 + 17), 0i64, "ds\\dns\\server\\validator\\validator.c", 987);
  if ( !v16 )
  {
    if ( a6 )
      *a6 = -1073741801;
    v13 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      || (*((_BYTE *)WPP_GLOBAL_Control + 28) & 1) == 0
      || *((_BYTE *)WPP_GLOBAL_Control + 25) < 4u )
    {
      return 1i64;
    }
    v14 = 33;
    v26 = -1073741801;
    goto LABEL_18;
  }
  v17 = a3;
  for ( i = a3 == 0i64; ; i = v17 == 0i64 )
  {
    if ( i )
    {
LABEL_63:
      Mem_Free(v16, 0i64, 0i64, (__int64)"ds\\dns\\server\\validator\\validator.c", 1126);
      return 6i64;
    }
    if ( *((_WORD *)v17 + 6) == 48
      && (ntohs(*((_WORD *)v17 + 28)) & 0x100) != 0
      && *((_BYTE *)v17 + 58) == 3
      && *((_BYTE *)v17 + 59) == *(_BYTE *)(a2 + 58) )
    {
      if ( *((_WORD *)v17 + 6) == 48 && (v19 = *((_WORD *)v17 + 7), v19 > 4u) )
        v20 = (unsigned __int16)RR_CalculateDnsKeyTagEx((unsigned __int8 *)v17 + 56, v19);
      else
        v20 = 0;
      if ( v20 == ntohs(*(_WORD *)(a2 + 56)) )
        break;
    }
LABEL_54:
    if ( a4 )
      goto LABEL_63;
    v17 = (__int64 *)*v17;
  }
  memset_0(&v28, 0, 0x38ui64);
  v30 = v17 + 7;
  v28 = a1 + 2;
  v27 = *a1;
  v29 = *((_WORD *)v17 + 7);
  v21 = ((__int64 (__fastcall *)(LPCWSTR, __int16 *, _QWORD *, _QWORD, _DWORD))v32[4])(
          v32[7],
          &v27,
          v16,
          *((unsigned int *)v15 + 17),
          *((_DWORD *)v32 + 16));
  if ( v21 < 0 )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 28) & 1) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 25) >= 4u )
    {
      LODWORD(v24) = v21;
      WPP_SF_qd(
        *((_QWORD *)WPP_GLOBAL_Control + 2),
        0x24u,
        (__int64)&WPP_c53e2308f6cf3329db3757b8a77c9921_Traceguids,
        v17,
        v24);
    }
    goto LABEL_54;
  }
  if ( memcmp_0(v16, (const void *)(a2 + 60), *(unsigned __int16 *)(a2 + 14) - 4i64) )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 28) & 1) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 25) >= 4u )
    {
      WPP_SF_q(
        *((_QWORD *)WPP_GLOBAL_Control + 2),
        0x23u,
        (__int64)&WPP_c53e2308f6cf3329db3757b8a77c9921_Traceguids,
        v17);
    }
    goto LABEL_54;
  }
  if ( a5 )
    *a5 = v17;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 28) & 1) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 25) >= 4u )
  {
    WPP_SF_qqLq(*((_QWORD *)WPP_GLOBAL_Control + 2), v22, v23, a2, a3);
  }
  Mem_Free(v16, 0i64, 0i64, (__int64)"ds\\dns\\server\\validator\\validator.c", 1057);
  return 0i64;
}
// 140151B7A: variable 'v10' is possibly undefined
// 140151B7A: variable 'v11' is possibly undefined
// 140151BC9: variable 'v25' is possibly undefined
// 140151E1D: variable 'v24' is possibly undefined
// 140151E7A: variable 'v22' is possibly undefined
// 140151E7A: variable 'v23' is possibly undefined
// 140185140: using guessed type __int64 (__fastcall *_guard_dispatch_icall_fptr)(_QWORD, _QWORD);
