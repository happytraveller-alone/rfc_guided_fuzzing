//----- (000000014011E590) ----------------------------------------------------
STRSAFE_LPSTR __fastcall RrsigFileWrite(__int64 a1, char *a2, unsigned __int64 a3)
{
  u_short v4; // cx
  u_short v7; // ax
  char *v8; // r15
  u_short v9; // ax
  char *v10; // r10
  int v11; // esi
  unsigned int v12; // eax
  char *v13; // rdi
  unsigned int v14; // eax
  char *v15; // rbx
  char *v16; // rax
  char *v17; // rax
  char *v18; // rax
  int v20; // [rsp+20h] [rbp-D8h]
  int v21; // [rsp+28h] [rbp-D0h]
  u_long v22; // [rsp+30h] [rbp-C8h]
  int v23; // [rsp+50h] [rbp-A8h]
  char v24; // [rsp+60h] [rbp-98h] BYREF
  __int64 v25; // [rsp+61h] [rbp-97h]
  __int16 v26; // [rsp+69h] [rbp-8Fh]
  char v27[32]; // [rsp+70h] [rbp-88h] BYREF
  char v28[32]; // [rsp+90h] [rbp-68h] BYREF

  v24 = 0;
  v25 = 0i64;
  v4 = *(_WORD *)(a1 + 56);
  v26 = 0;
  v7 = ntohs(v4);
  v8 = Dns_RecordStringForAllTypes(v7, &v24);
  if ( *v8 )
  {
    v11 = ntohs(*(_WORD *)(a1 + 72));
    v12 = ntohl(*(_DWORD *)(a1 + 68));
    v13 = Dns_SigTimeString(v12, v27);
    v14 = ntohl(*(_DWORD *)(a1 + 64));
    v15 = Dns_SigTimeString(v14, v28);
    v23 = v11;
    v22 = ntohl(*(_DWORD *)(a1 + 60));
    v21 = *(unsigned __int8 *)(a1 + 59);
    v20 = *(unsigned __int8 *)(a1 + 58);
    v16 = sprintfSafeA(
            a2,
            a3 - (_QWORD)a2,
            "%s %d %d %d %s (\r\n%s\t\t%s %d ",
            v8,
            v20,
            v21,
            v22,
            v15,
            "                        ",
            v13,
            v23);
    v10 = v16;
    if ( v16 )
    {
      v17 = File_WriteRawNameToFileBuffer(v16, a3, (char *)(a1 + 76));
      v10 = v17;
      if ( v17 )
      {
        v10 = sprintfSafeA(v17, a3 - (_QWORD)v17, "\r\n");
        if ( v10 )
        {
          v18 = multilineBase64Encoding(
                  (unsigned __int8 *)(*(unsigned __int8 *)(a1 + 74) + a1 + 76),
                  *(unsigned __int16 *)(a1 + 14) - (unsigned int)*(unsigned __int8 *)(a1 + 74) - 20,
                  v10,
                  a3);
          v10 = v18;
          if ( v18 )
            return sprintfSafeA(v18, a3 - (_QWORD)v18, "%s\t\t)\r\n", "                        ");
        }
      }
    }
  }
  else
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 28) & 8) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 25) >= 4u )
    {
      v9 = ntohs(*(_WORD *)(a1 + 56));
      WPP_SF_D(*((_QWORD *)WPP_GLOBAL_Control + 2), 0xFu, (__int64)&WPP_ab615269c76f3f4d2c78c36a7027be85_Traceguids, v9);
    }
    return 0i64;
  }
  return v10;
}
// 14011E590: using guessed type char var_88[32];
// 14011E590: using guessed type char var_68[32];
