//----- (000000014005E7B4) ----------------------------------------------------
ULONG __fastcall Template_csszsqqzzz(
        __int64 a1,
        __int64 a2,
        char a3,
        const char *a4,
        const char *a5,
        const unsigned __int16 *a6,
        const char *a7,
        char a8,
        char a9,
        const unsigned __int16 *a10,
        const unsigned __int16 *a11,
        const unsigned __int16 *a12)
{
  __int64 v12; // rdx
  __int64 v13; // rcx
  int v14; // ecx
  const char *v15; // r10
  const char *v16; // rax
  __int64 v17; // rcx
  int v18; // ecx
  const char *v19; // rax
  __int64 v20; // rax
  int v21; // r8d
  const wchar_t *v22; // r9
  const wchar_t *v23; // rax
  __int64 v24; // rax
  int v25; // eax
  __int64 v26; // rax
  int v27; // ecx
  const wchar_t *v28; // rax
  __int64 v29; // rax
  int v30; // r8d
  const wchar_t *v31; // rax
  int v32; // ecx
  struct _EVENT_DATA_DESCRIPTOR UserData; // [rsp+20h] [rbp-99h] BYREF
  const char *v35; // [rsp+30h] [rbp-89h]
  int v36; // [rsp+38h] [rbp-81h]
  int v37; // [rsp+3Ch] [rbp-7Dh]
  const char *v38; // [rsp+40h] [rbp-79h]
  int v39; // [rsp+48h] [rbp-71h]
  int v40; // [rsp+4Ch] [rbp-6Dh]
  const wchar_t *v41; // [rsp+50h] [rbp-69h]
  int v42; // [rsp+58h] [rbp-61h]
  int v43; // [rsp+5Ch] [rbp-5Dh]
  const char *v44; // [rsp+60h] [rbp-59h]
  int v45; // [rsp+68h] [rbp-51h]
  int v46; // [rsp+6Ch] [rbp-4Dh]
  char *v47; // [rsp+70h] [rbp-49h]
  __int64 v48; // [rsp+78h] [rbp-41h]
  char *v49; // [rsp+80h] [rbp-39h]
  __int64 v50; // [rsp+88h] [rbp-31h]
  const wchar_t *v51; // [rsp+90h] [rbp-29h]
  int v52; // [rsp+98h] [rbp-21h]
  int v53; // [rsp+9Ch] [rbp-1Dh]
  const wchar_t *v54; // [rsp+A0h] [rbp-19h]
  int v55; // [rsp+A8h] [rbp-11h]
  int v56; // [rsp+ACh] [rbp-Dh]
  const wchar_t *v57; // [rsp+B0h] [rbp-9h]
  int v58; // [rsp+B8h] [rbp-1h]
  int v59; // [rsp+BCh] [rbp+3h]
  char v60; // [rsp+F0h] [rbp+37h] BYREF

  v60 = a3;
  *(_QWORD *)&UserData.Size = 1i64;
  v12 = -1i64;
  UserData.Ptr = (ULONGLONG)&v60;
  if ( a4 )
  {
    v13 = -1i64;
    do
      ++v13;
    while ( a4[v13] );
    v14 = v13 + 1;
  }
  else
  {
    v14 = 5;
  }
  v15 = "NULL";
  v36 = v14;
  v16 = "NULL";
  v37 = 0;
  if ( a4 )
    v16 = a4;
  v35 = v16;
  if ( a5 )
  {
    v17 = -1i64;
    do
      ++v17;
    while ( a5[v17] );
    v18 = v17 + 1;
  }
  else
  {
    v18 = 5;
  }
  v39 = v18;
  v19 = "NULL";
  if ( a5 )
    v19 = a5;
  v40 = 0;
  v38 = v19;
  if ( a6 )
  {
    v20 = -1i64;
    do
      ++v20;
    while ( a6[v20] );
    v21 = 2 * v20 + 2;
  }
  else
  {
    v21 = 10;
  }
  v42 = v21;
  v22 = L"NULL";
  v43 = 0;
  v23 = L"NULL";
  if ( a6 )
    v23 = a6;
  v41 = v23;
  if ( a7 )
  {
    v24 = -1i64;
    do
      ++v24;
    while ( a7[v24] );
    v25 = v24 + 1;
  }
  else
  {
    v25 = 5;
  }
  v45 = v25;
  if ( a7 )
    v15 = a7;
  v47 = &a8;
  v44 = v15;
  v49 = &a9;
  v46 = 0;
  v48 = 4i64;
  v50 = 4i64;
  if ( a10 )
  {
    v26 = -1i64;
    do
      ++v26;
    while ( a10[v26] );
    v27 = 2 * v26 + 2;
  }
  else
  {
    v27 = 10;
  }
  v52 = v27;
  v28 = L"NULL";
  if ( a10 )
    v28 = a10;
  v53 = 0;
  v51 = v28;
  if ( a11 )
  {
    v29 = -1i64;
    do
      ++v29;
    while ( a11[v29] );
    v30 = 2 * v29 + 2;
  }
  else
  {
    v30 = 10;
  }
  v55 = v30;
  v31 = L"NULL";
  v56 = 0;
  if ( a11 )
    v31 = a11;
  v54 = v31;
  if ( a12 )
  {
    do
      ++v12;
    while ( a12[v12] );
    v32 = 2 * v12 + 2;
  }
  else
  {
    v32 = 10;
  }
  v58 = v32;
  if ( a12 )
    v22 = a12;
  v59 = 0;
  v57 = v22;
  return EventWrite(Microsoft_Windows_DNSServerHandle, &DNS_EVENT_IGNORED_QUERY, 0xAu, &UserData);
}
