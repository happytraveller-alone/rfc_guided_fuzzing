//----- (0000000140076298) ----------------------------------------------------
LPBYTE __fastcall Reg_GetValueAllocate(HKEY hKey, __int64 a2, const char *a3, int a4, DWORD *a5)
{
  LPBYTE v10; // rdi
  BYTE *v11; // rsi
  __int64 v12; // rbx
  unsigned int v13; // r9d
  unsigned int v14; // edx
  _WORD *v15; // rcx
  __int64 v16; // rax
  unsigned int v17; // r15d
  unsigned __int64 v18; // rax
  char *v19; // r12
  void *v20; // rax
  unsigned int v21; // r9d
  __int64 v22; // rax
  BYTE *v23; // rbx
  DWORD v24; // [rsp+30h] [rbp-38h] BYREF
  unsigned int v25; // [rsp+34h] [rbp-34h]
  BYTE *i; // [rsp+38h] [rbp-30h]
  LPBYTE v27; // [rsp+40h] [rbp-28h]

  v24 = 0;
  if ( (unsigned int)Reg_GetValue(hKey, a2, (const unsigned __int16 *)a3, a4, 0i64, &v24) )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_s(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x2Cu,
        (__int64)&WPP_6ba06e9d807b3b6640892c588bf1aced_Traceguids,
        a3);
    }
    return 0i64;
  }
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_Ds(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x2Du,
      (__int64)&WPP_6ba06e9d807b3b6640892c588bf1aced_Traceguids,
      v24,
      (__int64)a3);
  }
  v27 = (LPBYTE)Mem_Alloc(v24, 19i64, "ds\\dns\\server\\server\\registry.c", 2107);
  v10 = v27;
  if ( !v27 )
    return 0i64;
  if ( (unsigned int)Reg_GetValue(hKey, a2, (const unsigned __int16 *)a3, a4, v27, &v24) )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_s(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x2Eu,
        (__int64)&WPP_6ba06e9d807b3b6640892c588bf1aced_Traceguids,
        a3);
    }
    Mem_Free(v10, 0i64, 0i64, (__int64)"ds\\dns\\server\\server\\registry.c", 2131);
    return 0i64;
  }
  if ( a4 != -16777215 )
  {
    if ( a4 != -16777209 )
    {
      if ( a4 == -268435453 )
      {
        v23 = (BYTE *)Reg_StringToBinaryBlob((CHAR *)v10, &v24);
        Mem_Free(v10, 0i64, 0i64, (__int64)"ds\\dns\\server\\server\\registry.c", 2256);
        v10 = v23;
      }
      goto LABEL_55;
    }
    v25 = 0;
    v13 = 0;
    v14 = 0;
    v15 = v10;
    for ( i = 0i64; *v15; v15 += v16 + 1 )
    {
      if ( v15 >= (_WORD *)&v10[v24] )
        break;
      ++v14;
      v16 = -1i64;
      do
        ++v16;
      while ( v15[v16] );
    }
    v17 = v14 + 1;
    if ( v14 + 1 < v14 )
    {
      v17 = -1;
    }
    else
    {
      v18 = 8i64 * v17;
      if ( v18 <= 0xFFFFFFFF )
      {
        v17 = v14;
LABEL_39:
        if ( (_DWORD)v18 )
        {
          i = (BYTE *)Mem_AllocZero((unsigned int)v18, 19i64, "ds\\dns\\server\\server\\registry.c", 2209);
          v13 = 0;
        }
        v19 = (char *)v10;
        if ( *(_WORD *)v10 )
        {
          do
          {
            if ( v13 >= v17 )
              break;
            v20 = Dns_StringCopyAllocate(v19, 0, 1i64, 2);
            v21 = v25;
            *(_QWORD *)&i[8 * v25] = v20;
            if ( !v20 )
              break;
            if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
              && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0
              && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
            {
              WPP_SF_DSs(
                *((_QWORD *)WPP_GLOBAL_Control + 7),
                0x30u,
                (__int64)&WPP_6ba06e9d807b3b6640892c588bf1aced_Traceguids,
                v21 + 1,
                (__int64)a3,
                (__int64)v20);
              v21 = v25;
            }
            v22 = -1i64;
            do
              ++v22;
            while ( *(_WORD *)&v19[2 * v22] );
            v13 = v21 + 1;
            v19 += 2 * v22 + 2;
            v25 = v13;
          }
          while ( *(_WORD *)v19 );
          v10 = v27;
        }
        Mem_Free(v10, 0i64, 0i64, (__int64)"ds\\dns\\server\\server\\registry.c", 2246);
        v10 = i;
        v24 = 0;
        goto LABEL_55;
      }
    }
    LODWORD(v18) = 0;
    goto LABEL_39;
  }
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_S(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x2Fu,
      (__int64)&WPP_6ba06e9d807b3b6640892c588bf1aced_Traceguids,
      (const unsigned __int16 *)v10);
  }
  v11 = (BYTE *)Dns_StringCopyAllocate((char *)v10, 0, 1i64, 2);
  Mem_Free(v10, 0i64, 0i64, (__int64)"ds\\dns\\server\\server\\registry.c", 2153);
  v10 = v11;
  if ( !v11 )
    return 0i64;
  if ( a5 )
  {
    v12 = -1i64;
    do
      ++v12;
    while ( v11[v12] );
    v24 = v12 + 1;
LABEL_55:
    if ( a5 )
      *a5 = v24;
  }
  if ( !(unsigned int)Mem_VerifyHeapBlock((__int64)v10, 0, 0) )
    Dbg_HardAssert("ds\\dns\\server\\server\\registry.c", 0x8D9u, "Mem_VerifyHeapBlock( pdata, 0, 0 )");
  return v10;
}
