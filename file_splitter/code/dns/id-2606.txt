//----- (00000001401341F4) ----------------------------------------------------
CDnsPolicy_TimeofDayCriteriaTree *__fastcall CDnsPolicy_TimeofDayCriteriaTree::CDnsPolicy_TimeofDayCriteriaTree(
        CDnsPolicy_TimeofDayCriteriaTree *this)
{
  unsigned __int16 v2; // si
  _QWORD *v3; // rax
  _QWORD *v4; // rbx
  __int64 v5; // rdx
  __int64 v6; // r8

  *(_QWORD *)this = &CDnsPolicy_TimeofDayCriteriaTree::`vftable';
  v2 = 15;
  if ( dword_1401B9A3C )
    v2 = dword_1401B9A3C;
  v3 = operator new(0x20ui64);
  v4 = v3;
  if ( v3 )
  {
    *v3 = 0i64;
    v3[1] = 0i64;
    v3[2] = 0i64;
    std::vector<CDnsPolicy_CriteriaNode *>::resize((__int64)v3, 1440 / v2);
  }
  else
  {
    v4 = 0i64;
  }
  *((_QWORD *)this + 1) = v4;
  if ( 1440 / v2 )
  {
    v5 = 0i64;
    v6 = 1440 / v2;
    do
    {
      *(_QWORD *)(v5 + **((_QWORD **)this + 1)) = 0i64;
      v5 += 8i64;
      --v6;
    }
    while ( v6 );
  }
  return this;
}
// 140171B78: using guessed type void *CDnsPolicy_TimeofDayCriteriaTree::`vftable';
// 1401B9A3C: using guessed type int dword_1401B9A3C;
