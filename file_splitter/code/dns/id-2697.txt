//----- (0000000140140860) ----------------------------------------------------
const void ***__fastcall std::_Tree<std::_Tmap_traits<std::wstring,CDnsPolicy *,CDnsCompareName,std::allocator<std::pair<std::wstring const,CDnsPolicy *>>,0>>::_Eqrange(
        __int64 a1,
        const void ***a2,
        const void **a3)
{
  const void ***v4; // r14
  const void **v6; // rsi
  const void **v7; // rbx
  const void **v8; // rdi
  __int64 v9; // rcx
  __int64 v10; // rcx
  const void **v11; // rbx
  __int64 v12; // rcx
  const void *v14[2]; // [rsp+28h] [rbp-58h] BYREF
  __int64 v15; // [rsp+38h] [rbp-48h]
  __int64 v16; // [rsp+40h] [rbp-40h]
  const void *v17[2]; // [rsp+50h] [rbp-30h] BYREF
  __int64 v18; // [rsp+60h] [rbp-20h]
  __int64 v19; // [rsp+68h] [rbp-18h]

  v4 = a2;
  v6 = *(const void ***)(a1 + 8);
  v7 = (const void **)v6[1];
  v8 = v6;
  if ( !*((_BYTE *)v7 + 73) )
  {
    do
    {
      v16 = 7i64;
      v15 = 0i64;
      LOWORD(v14[0]) = 0;
      std::wstring::assign(v14, a3, 0i64, 0xFFFFFFFFFFFFFFFFui64);
      v19 = 7i64;
      v18 = 0i64;
      LOWORD(v17[0]) = 0;
      std::wstring::assign(v17, v7 + 3, 0i64, 0xFFFFFFFFFFFFFFFFui64);
      if ( CDnsCompareName::operator()(v9, (__int64)v17, (__int64)v14) )
      {
        v7 = (const void **)v7[2];
      }
      else
      {
        if ( *((_BYTE *)v8 + 73) )
        {
          v19 = 7i64;
          v18 = 0i64;
          LOWORD(v17[0]) = 0;
          std::wstring::assign(v17, v7 + 3, 0i64, 0xFFFFFFFFFFFFFFFFui64);
          v16 = 7i64;
          v15 = 0i64;
          LOWORD(v14[0]) = 0;
          std::wstring::assign(v14, a3, 0i64, 0xFFFFFFFFFFFFFFFFui64);
          if ( CDnsCompareName::operator()(v10, (__int64)v14, (__int64)v17) )
            v8 = v7;
        }
        v6 = v7;
        v7 = (const void **)*v7;
      }
    }
    while ( !*((_BYTE *)v7 + 73) );
    v4 = a2;
  }
  if ( *((_BYTE *)v8 + 73) )
    v11 = *(const void ***)(*(_QWORD *)(a1 + 8) + 8i64);
  else
    v11 = (const void **)*v8;
  while ( !*((_BYTE *)v11 + 73) )
  {
    v19 = 7i64;
    v18 = 0i64;
    LOWORD(v17[0]) = 0;
    std::wstring::assign(v17, v11 + 3, 0i64, 0xFFFFFFFFFFFFFFFFui64);
    v16 = 7i64;
    v15 = 0i64;
    LOWORD(v14[0]) = 0;
    std::wstring::assign(v14, a3, 0i64, 0xFFFFFFFFFFFFFFFFui64);
    if ( CDnsCompareName::operator()(v12, (__int64)v14, (__int64)v17) )
    {
      v8 = v11;
      v11 = (const void **)*v11;
    }
    else
    {
      v11 = (const void **)v11[2];
    }
  }
  *v4 = v6;
  v4[1] = v8;
  return v4;
}
// 140140907: variable 'v9' is possibly undefined
// 140140974: variable 'v10' is possibly undefined
// 140140A06: variable 'v12' is possibly undefined
