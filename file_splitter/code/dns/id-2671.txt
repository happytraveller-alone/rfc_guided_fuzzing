//----- (000000014013E364) ----------------------------------------------------
__int64 __fastcall Enumerate_Policy(__int64 a1, char a2, struct _DnsRpcEnumPolicyList **a3)
{
  int v4; // r15d
  unsigned int v5; // r13d
  __int64 v6; // rdi
  unsigned int v7; // edx
  _QWORD *v8; // r8
  int v9; // eax
  __int64 v10; // r8
  int v11; // eax
  struct _DnsRpcEnumPolicyList *zero; // rax
  struct _DnsRpcEnumPolicyList *v13; // r12
  __int64 v15; // rdi
  const void *****v16; // r15
  int v17; // eax
  int v18; // [rsp+30h] [rbp-38h]
  unsigned int v21; // [rsp+88h] [rbp+20h] BYREF

  v4 = a2 & 1;
  v5 = 0;
  v6 = 0i64;
  v18 = v4;
  v7 = 0;
  if ( a1 )
  {
    v10 = a1 + 256;
    do
    {
      if ( v4 && !v7
        || (a2 & 2) != 0 && v7 == 1
        || (a2 & 4) != 0 && v7 == 2
        || (a2 & 8) != 0 && v7 == 3
        || (a2 & 0x10) != 0 && v7 == 4 )
      {
        v11 = 0;
        if ( (__int64)(*(_QWORD *)(*(_QWORD *)v10 + 8i64) - **(_QWORD **)v10) >> 3 )
          v11 = (__int64)(*(_QWORD *)(*(_QWORD *)v10 + 8i64) - **(_QWORD **)v10) >> 3;
        v6 = (unsigned int)(v11 + v6);
      }
      ++v7;
      v10 += 8i64;
    }
    while ( v7 < 5 );
  }
  else
  {
    v8 = &g_PolicyOrder;
    do
    {
      if ( v4 && !v7
        || (a2 & 2) != 0 && v7 == 1
        || (a2 & 4) != 0 && v7 == 2
        || (a2 & 8) != 0 && v7 == 3
        || (a2 & 0x10) != 0 && v7 == 4 )
      {
        v9 = 0;
        if ( (__int64)(v8[1] - *v8) >> 3 )
          v9 = (__int64)(v8[1] - *v8) >> 3;
        v6 = (unsigned int)(v9 + v6);
      }
      ++v7;
      v8 += 9;
    }
    while ( v7 < 5 );
  }
  zero = (struct _DnsRpcEnumPolicyList *)MIDL_user_allocate_zero(8 * v6 + 16);
  v13 = zero;
  if ( !zero )
  {
    v5 = 14;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
    {
      WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x39u, (__int64)&WPP_7bc0de5581043365e853c04d44d2eaeb_Traceguids);
    }
    return v5;
  }
  if ( !(_DWORD)v6 )
    return 0i64;
  v21 = 0;
  *(_DWORD *)zero = v6;
  v15 = 0i64;
  if ( a1 )
  {
    v16 = (const void *****)(a1 + 256);
    v17 = v18;
    while ( 1 )
    {
      if ( v17 && !(_DWORD)v15
        || (a2 & 2) != 0 && (_DWORD)v15 == 1
        || (a2 & 4) != 0 && (_DWORD)v15 == 2
        || (a2 & 8) != 0 && (_DWORD)v15 == 3
        || (a2 & 0x10) != 0 && (_DWORD)v15 == 4 )
      {
        v5 = CDnsPolicyOrder::EnumeratePolicy(*v16, &v21, v13);
        if ( v5 )
        {
          if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
            && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
          {
            WPP_SF_Dds(
              *((_QWORD *)WPP_GLOBAL_Control + 7),
              0x3Bu,
              (__int64)&WPP_7bc0de5581043365e853c04d44d2eaeb_Traceguids,
              1,
              v5,
              *(_QWORD *)(a1 + 16));
          }
          return v5;
        }
        v17 = v18;
      }
      LODWORD(v15) = v15 + 1;
      ++v16;
      if ( (unsigned int)v15 >= 5 )
      {
LABEL_53:
        *a3 = v13;
        return v5;
      }
    }
  }
  while ( 1 )
  {
    if ( v4 && !(_DWORD)v15
      || (a2 & 2) != 0 && (_DWORD)v15 == 1
      || (a2 & 4) != 0 && (_DWORD)v15 == 2
      || (a2 & 8) != 0 && (_DWORD)v15 == 3
      || (a2 & 0x10) != 0 && (_DWORD)v15 == 4 )
    {
      v5 = CDnsPolicyOrder::EnumeratePolicy((const void ****)&g_PolicyOrder + 9 * v15, &v21, v13);
      if ( v5 )
        break;
    }
    v15 = (unsigned int)(v15 + 1);
    if ( (unsigned int)v15 >= 5 )
      goto LABEL_53;
  }
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
  {
    WPP_SF_Dd(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x3Au, (__int64)&WPP_7bc0de5581043365e853c04d44d2eaeb_Traceguids, 0);
  }
  return v5;
}
