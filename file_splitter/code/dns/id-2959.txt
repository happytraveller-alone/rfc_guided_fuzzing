//----- (00000001401564B8) ----------------------------------------------------
__int64 __fastcall DnsAddrArray_Diff(_DWORD *Src, _DWORD *a2, int a3, _QWORD *a4, _QWORD *a5, _QWORD *a6)
{
  void *v6; // rsi
  void *v7; // rdi
  void *v8; // rbx
  _DWORD *v12; // rax
  _DWORD *v13; // rax
  _DWORD *v14; // rax
  unsigned int v16; // ebp
  _WORD *v17; // r14
  __int64 v18; // rcx

  v6 = 0i64;
  v7 = 0i64;
  v8 = 0i64;
  if ( !a6 )
    goto LABEL_4;
  v12 = DnsAddrArray_CopyAndExpand(Src, 0i64, 0i64, (int)a4);
  v6 = v12;
  if ( v12 )
  {
    *a6 = v12;
LABEL_4:
    if ( a4 )
    {
      v13 = DnsAddrArray_CopyAndExpand(Src, 0i64, 0i64, (int)a4);
      v7 = v13;
      if ( !v13 )
      {
LABEL_9:
        if ( v6 )
          Dns_Free(v6);
        if ( v7 )
          Dns_Free(v7);
        if ( v8 )
          Dns_Free(v8);
        goto LABEL_15;
      }
      *a4 = v13;
    }
    if ( a5 )
    {
      v14 = DnsAddrArray_CopyAndExpand(a2, 0i64, 0i64, (int)a4);
      v8 = v14;
      if ( !v14 )
        goto LABEL_9;
      *a5 = v14;
    }
    v16 = 0;
    if ( !Src[1] )
      return 0i64;
    while ( 1 )
    {
      v17 = &Src[16 * (unsigned __int64)v16 + 8];
      if ( (unsigned int)DnsAddrArray_ContainsAddr((__int64)a2, v17, a3) )
        break;
      if ( v6 )
      {
        v18 = (__int64)v6;
LABEL_31:
        DnsAddrArray_DeleteAddr(v18, v17, a3);
      }
LABEL_32:
      if ( ++v16 >= Src[1] )
        return 0i64;
    }
    if ( v7 )
      DnsAddrArray_DeleteAddr((__int64)v7, v17, a3);
    if ( !v8 )
      goto LABEL_32;
    v18 = (__int64)v8;
    goto LABEL_31;
  }
LABEL_15:
  if ( a6 )
    *a6 = 0i64;
  if ( a4 )
    *a4 = 0i64;
  if ( a5 )
    *a5 = 0i64;
  return 14i64;
}
// 140156519: variable 'a4' is possibly undefined
