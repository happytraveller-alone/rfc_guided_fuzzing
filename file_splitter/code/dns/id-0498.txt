//----- (0000000140042F34) ----------------------------------------------------
__int64 __fastcall Ds_WriteUpdateToDs(__int64 a1, __int64 a2, __int64 a3)
{
  unsigned int updated; // edi
  int v4; // r12d
  HANDLE CurrentThread; // rax
  int LastError; // eax
  unsigned int v11; // ebx
  __int64 i; // rbx
  int v13; // r14d
  CDnsClientSubnetRecordsTrie *v14; // rcx
  int IsProxyClient; // eax
  __int64 v16; // r8
  __int64 v17; // r9
  int v18; // edi
  CDnsClientSubnetRecordsTrie *v19; // rcx
  CDnsClientSubnetRecordsTrie **v20; // rdx
  __int64 v21; // r8
  int v22; // eax
  int v23; // eax
  __int64 v24; // rdx
  __int64 v25; // r8
  __int64 v26; // r9
  CDnsClientSubnetRecordsTrie *v27; // rcx
  __int64 v28; // rdx
  __int64 v29; // r8
  void *v30; // rax
  __int64 v31; // [rsp+20h] [rbp-30h]
  __int64 v32; // [rsp+28h] [rbp-28h]
  __int64 v33; // [rsp+30h] [rbp-20h]
  __int64 v34; // [rsp+38h] [rbp-18h]
  __int64 v35; // [rsp+48h] [rbp-8h]
  _QWORD *v36; // [rsp+A0h] [rbp+50h] BYREF
  void *TokenHandle; // [rsp+A8h] [rbp+58h] BYREF

  updated = 0;
  v4 = 0;
  TokenHandle = 0i64;
  v36 = 0i64;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_s(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x144u,
      (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
      *(const char **)(a3 + 16));
  }
  if ( !*(_QWORD *)(a3 + 840) )
    return 9604i64;
  if ( (*(_BYTE *)(a3 + 392) & 3) == 2 )
  {
    CurrentThread = GetCurrentThread();
    if ( !OpenThreadToken(CurrentThread, 8u, 1, &TokenHandle) )
    {
      LastError = GetLastError();
      v11 = LastError;
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        WPP_SF_D(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0x145u,
          (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
          LastError);
      }
      return v11;
    }
  }
  _InterlockedIncrement(&dword_1401C7CC8);
  for ( i = *(_QWORD *)(a2 + 16); ; i = *(_QWORD *)(i + 24) )
  {
    if ( !i )
      goto LABEL_109;
    _InterlockedIncrement(&dword_1401C7CCC);
    if ( *(_DWORD *)(i + 84) != -2004353023 )
    {
      _InterlockedIncrement(&dword_1401C7D18);
      _InterlockedIncrement(&dword_1401C7CD0);
      continue;
    }
    v13 = 0;
    if ( (*(_BYTE *)(a3 + 392) & 3) == 2 )
    {
      updated = readAndUpdateNodeSecurityFromDs(i, (__int64 *)a3);
      v14 = WPP_GLOBAL_Control;
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
      {
        WPP_SF_D(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0x146u,
          (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
          updated);
        v14 = WPP_GLOBAL_Control;
      }
      if ( updated )
      {
        if ( updated != 32 )
        {
          if ( v14 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_DWORD *)v14 + 17) & 0x400) != 0
            && *((_BYTE *)v14 + 65) >= 4u )
          {
            WPP_SF_D(*((_QWORD *)v14 + 7), 0x148u, (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids, updated);
          }
          *(_DWORD *)(i + 92) &= 0xFFFFF7F3;
          goto LABEL_110;
        }
        if ( v14 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)v14 + 17) & 0x400) != 0
          && *((_BYTE *)v14 + 65) >= 5u )
        {
          WPP_SF_s(
            *((_QWORD *)v14 + 7),
            0x147u,
            (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
            (const char *)(i + 102));
        }
        v13 = 1;
      }
      else
      {
        if ( (*(_BYTE *)(i + 92) & 4) != 0 && !(unsigned int)isUserAllowedToCreateChildObjectsInZone(a3) )
        {
          if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
            && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
          {
            WPP_SF_(
              *((_QWORD *)WPP_GLOBAL_Control + 7),
              0x149u,
              (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids);
          }
          updated = 5;
          goto LABEL_98;
        }
        IsProxyClient = SD_IsProxyClient(TokenHandle);
        v18 = IsProxyClient;
        v19 = WPP_GLOBAL_Control;
        v20 = &WPP_GLOBAL_Control;
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
        {
          LODWORD(v33) = IsProxyClient;
          LODWORD(v32) = *(_DWORD *)(a2 + 40);
          LODWORD(v31) = *(_DWORD *)(i + 92);
          WPP_SF_qDDdq(*((_QWORD *)WPP_GLOBAL_Control + 7), (__int64)v36, v16, i, v31, v32, v33, v36);
          v19 = WPP_GLOBAL_Control;
          v20 = &WPP_GLOBAL_Control;
        }
        if ( (*(_DWORD *)(i + 92) & 0x800) != 0 && !v18 || (*(_BYTE *)(i + 92) & 0xC) != 0 )
        {
          if ( v19 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_DWORD *)v19 + 17) & 0x400) != 0
            && *((_BYTE *)v19 + 65) >= 5u )
          {
            WPP_SF_q(*((_QWORD *)v19 + 7), 0x14Bu, (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids, i);
            v19 = WPP_GLOBAL_Control;
            v20 = &WPP_GLOBAL_Control;
          }
          if ( !v36 )
          {
            v21 = 16386i64;
            if ( (*(_DWORD *)(a2 + 40) & 0x4002) == 16386 || v18 && dword_1401B9844 )
            {
              if ( v19 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                && (*((_DWORD *)v19 + 17) & 0x400) != 0
                && *((_BYTE *)v19 + 65) >= 5u )
              {
                WPP_SF_D(
                  *((_QWORD *)v19 + 7),
                  0x14Cu,
                  (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
                  *(_DWORD *)(i + 92));
              }
              v4 = 1;
            }
            v22 = SD_CreateClientSD(&v36, (__int64)v20, v21, v17, v4);
            updated = v22;
            if ( v22 )
            {
              if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
                && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
              {
                WPP_SF_D(
                  *((_QWORD *)WPP_GLOBAL_Control + 7),
                  0x14Du,
                  (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
                  v22);
              }
              v36 = 0i64;
LABEL_98:
              *(_DWORD *)(i + 92) &= 0xFFFFF7F3;
              goto LABEL_110;
            }
          }
          if ( (unsigned int)Ds_WriteNodeSecurityToDs((__int64 *)a3, i, (__int64)v36)
            && WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
            && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
          {
            WPP_SF_sd(
              *((_QWORD *)WPP_GLOBAL_Control + 7),
              0x14Eu,
              (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
              (const char *)(i + 102));
          }
          *(_DWORD *)(i + 92) &= 0xFFFFF7F3;
        }
      }
    }
    v23 = *(_DWORD *)(a2 + 40);
    if ( v13 )
      v23 |= 0x8000u;
    updated = Ds_WriteNodeToDs(a1, i, 0xFFu, 2, a3, v23);
    if ( updated )
    {
      if ( a1 )
        break;
    }
    v27 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
    {
      LODWORD(v35) = SD_IsProxyClient(TokenHandle);
      LODWORD(v34) = *(_DWORD *)(a2 + 40);
      LODWORD(v33) = *(_DWORD *)(i + 92);
      LODWORD(v32) = v13;
      LODWORD(v31) = *(_BYTE *)(a3 + 392) & 3;
      WPP_SF_qddDDqd(*((_QWORD *)WPP_GLOBAL_Control + 7), v28, v29, i, v31, v32, v33, v34, TokenHandle, v35);
      v27 = WPP_GLOBAL_Control;
    }
    if ( (*(_BYTE *)(a3 + 392) & 3) != 2 || !v13 )
      goto LABEL_83;
    if ( (*(_BYTE *)(a2 + 40) & 2) != 0 )
      goto LABEL_73;
    if ( (unsigned int)SD_IsProxyClient(TokenHandle) && dword_1401B9844 )
    {
      v27 = WPP_GLOBAL_Control;
LABEL_73:
      if ( v27 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)v27 + 17) & 0x400) != 0
        && *((_BYTE *)v27 + 65) >= 5u )
      {
        WPP_SF_q(*((_QWORD *)v27 + 7), 0x151u, (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids, i);
      }
      updated = SD_CreateClientSD(&v36, v24, v25, v26, (*(_DWORD *)(a2 + 40) & 0x4001) != 0);
      if ( updated )
      {
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
        {
          WPP_SF_(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            0x152u,
            (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids);
        }
      }
      else
      {
        updated = Ds_WriteNodeSecurityToDs((__int64 *)a3, i, (__int64)v36);
      }
    }
LABEL_83:
    *(_DWORD *)(i + 92) &= ~0x800u;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
    {
      LODWORD(v31) = *(_DWORD *)(i + 92);
      WPP_SF_qd(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x153u,
        (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
        i,
        v31);
    }
  }
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    v30 = FormatLabelA(*(unsigned __int8 *)(i + 101), (const void *)(i + 102));
    WPP_SF_Dsq(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x14Fu,
      (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
      updated,
      (__int64)v30);
  }
  *(_DWORD *)(i + 92) &= ~0x800u;
LABEL_109:
  *(_DWORD *)(a3 + 524) = 0;
LABEL_110:
  if ( i )
    *(_QWORD *)(a2 + 24) = i;
  if ( v36 )
    Mem_Free(v36, 0i64, 0i64, (__int64)"ds\\dns\\server\\server\\ds.c", 13270);
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_Ds(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x154u,
      (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
      updated,
      *(_QWORD *)(a3 + 16));
  }
  if ( TokenHandle )
    CloseHandle(TokenHandle);
  return updated;
}
// 14004316E: variable 'v16' is possibly undefined
// 14004316E: variable 'v31' is possibly undefined
// 14004316E: variable 'v32' is possibly undefined
// 14004316E: variable 'v33' is possibly undefined
// 140043233: variable 'v20' is possibly undefined
// 140043233: variable 'v21' is possibly undefined
// 140043233: variable 'v17' is possibly undefined
// 14004333F: variable 'v28' is possibly undefined
// 14004333F: variable 'v29' is possibly undefined
// 14004333F: variable 'v34' is possibly undefined
// 14004333F: variable 'v35' is possibly undefined
// 1400433DA: variable 'v24' is possibly undefined
// 1400433DA: variable 'v25' is possibly undefined
// 1400433DA: variable 'v26' is possibly undefined
// 1401B9844: using guessed type int dword_1401B9844;
// 1401C7CC8: using guessed type int dword_1401C7CC8;
// 1401C7CCC: using guessed type int dword_1401C7CCC;
// 1401C7CD0: using guessed type int dword_1401C7CD0;
// 1401C7D18: using guessed type int dword_1401C7D18;
