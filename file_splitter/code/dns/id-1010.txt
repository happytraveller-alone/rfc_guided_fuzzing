//----- (00000001400868A0) ----------------------------------------------------
__int64 __fastcall SigFlatRead(unsigned __int16 *a1, __int64 a2)
{
  char *v2; // r8
  unsigned __int8 *v3; // rbx
  unsigned int v6; // eax
  unsigned __int8 *v7; // r14
  unsigned int v8; // ebp
  unsigned __int16 v9; // ax
  _BYTE *v10; // rax
  _BYTE *v11; // rsi
  unsigned __int8 v13[272]; // [rsp+20h] [rbp-148h] BYREF

  v2 = (char *)a1 + *a1 + 24;
  v3 = (unsigned __int8 *)(a1 + 21);
  if ( v2 < (char *)a1 + 44 )
    return 9702i64;
  if ( v2 < (char *)a1 + *v3 + 43 )
    return 9702i64;
  v6 = Name_ConvertRpcNameToCountName(v13, v3);
  if ( !v6 )
    return 9702i64;
  v7 = &v3[*v3 + 1];
  v8 = *a1 - (_DWORD)v7 + (_DWORD)a1 + 24;
  if ( v6 > 0xFFFF )
    return 14i64;
  if ( v8 > 0xFFFF )
    return 14i64;
  v9 = v6 + 18;
  if ( v9 < 0x12u )
    return 14i64;
  if ( (unsigned __int16)(v9 + v8) < v9 )
    return 14i64;
  v10 = RR_AllocateEx(v9 + (unsigned __int16)v8, 0, 0);
  v11 = v10;
  if ( !v10 )
    return 14i64;
  *(_QWORD *)(a2 + 800) = v10;
  *((_WORD *)v10 + 28) = htons(a1[12]);
  v11[58] = *((_BYTE *)a1 + 26);
  v11[59] = *((_BYTE *)a1 + 27);
  *((_DWORD *)v11 + 15) = htonl(*((_DWORD *)a1 + 7));
  *((_DWORD *)v11 + 16) = htonl(*((_DWORD *)a1 + 8));
  *((_DWORD *)v11 + 17) = htonl(*((_DWORD *)a1 + 9));
  *((_WORD *)v11 + 36) = htons(a1[20]);
  Name_CopyCountName(v11 + 74, v13);
  memcpy_0(&v11[(unsigned __int8)v11[74] + 76], v7, v8);
  return 0i64;
}
