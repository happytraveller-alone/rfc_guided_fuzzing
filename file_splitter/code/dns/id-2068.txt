//----- (0000000140102C80) ----------------------------------------------------
__int64 __fastcall Rpc_EnumerateKSPs(
        __int64 a1,
        __int64 a2,
        __int64 a3,
        __int64 a4,
        int a5,
        int a6,
        _DWORD *a7,
        unsigned int **a8)
{
  unsigned int v8; // edi
  unsigned int v9; // ebp
  unsigned int *zero; // rsi
  int v11; // eax
  CDnsClientSubnetRecordsTrie *v12; // rcx
  unsigned __int64 v13; // rax
  size_t v14; // rcx
  unsigned int v15; // r14d
  void *v16; // rax
  DWORD v18; // [rsp+20h] [rbp-28h] BYREF
  PVOID pvInput; // [rsp+28h] [rbp-20h] BYREF

  v8 = 0;
  v18 = 0;
  pvInput = 0i64;
  v9 = 0;
  zero = 0i64;
  v11 = NCryptEnumStorageProviders(&v18, (NCryptProviderName **)&pvInput, 0);
  if ( v11 >= 0 )
  {
    v13 = 8i64 * v18;
    if ( v13 > 0xFFFFFFFF || (v14 = (unsigned int)(v13 + 16), (unsigned int)v14 < (unsigned int)v13) )
    {
      v9 = 13;
      goto LABEL_16;
    }
    zero = (unsigned int *)MIDL_user_allocate_zero(v14);
    if ( zero )
    {
      v15 = 0;
      if ( !v18 )
      {
LABEL_14:
        *a8 = zero;
        *a7 = 44;
        goto LABEL_16;
      }
      while ( 1 )
      {
        v16 = Dns_StringCopyAllocate(*((char **)pvInput + 2 * v15), 0, 1i64, 1);
        *(_QWORD *)&zero[2 * v15 + 2] = v16;
        if ( !v16 )
          break;
        ++*zero;
        if ( ++v15 >= v18 )
          goto LABEL_14;
      }
    }
    v9 = 14;
LABEL_16:
    v12 = WPP_GLOBAL_Control;
    goto LABEL_17;
  }
  v12 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
  {
    WPP_SF_D(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x74u, (__int64)&WPP_fcf90f505e41335ad1a88e0d5ede2d0c_Traceguids, v11);
    v12 = WPP_GLOBAL_Control;
  }
  v9 = 9110;
LABEL_17:
  if ( pvInput )
  {
    NCryptFreeBuffer(pvInput);
    v12 = WPP_GLOBAL_Control;
  }
  if ( v9 && zero )
  {
    if ( *zero )
    {
      do
        MIDL_user_free(*(void **)&zero[2 * v8++ + 2]);
      while ( v8 < *zero );
    }
    MIDL_user_free(zero);
    v12 = WPP_GLOBAL_Control;
  }
  if ( v12 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)v12 + 68) & 4) != 0
    && *((_BYTE *)v12 + 65) >= 4u )
  {
    WPP_SF_D(*((_QWORD *)v12 + 7), 0x75u, (__int64)&WPP_fcf90f505e41335ad1a88e0d5ede2d0c_Traceguids, v9);
  }
  return v9;
}
