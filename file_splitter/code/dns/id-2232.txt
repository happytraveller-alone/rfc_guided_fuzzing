//----- (0000000140118D70) ----------------------------------------------------
__int64 __fastcall setAllocHeader(__int64 a1, int a2, unsigned int a3, __int64 a4)
{
  __int64 v5; // rbx

  if ( !a1 )
    return 0i64;
  if ( (unsigned int)a4 > 0x35 )
    a4 = 0i64;
  _InterlockedExchangeAdd(&dword_1401B9A88, a3);
  _InterlockedIncrement(&dword_1401B9A8C);
  _InterlockedIncrement((volatile signed __int32 *)&MemoryStats + 3 * a4 + 20);
  _InterlockedExchangeAdd((volatile signed __int32 *)&MemoryStats + 3 * a4 + 22, a3);
  *(_BYTE *)(a1 + 4) = -69;
  *(_BYTE *)(a1 + 5) = a4;
  *(_WORD *)(a1 + 6) = a3 | a2;
  v5 = a1 + 16;
  *(_QWORD *)(a1 + 16) = 0i64;
  *(_QWORD *)(a1 + 8) = 0xFE0C0C0C0C0C0CEFui64;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && *((char *)WPP_GLOBAL_Control + 28) < 0
    && *((_BYTE *)WPP_GLOBAL_Control + 25) >= 5u )
  {
    WPP_SF_qddd(
      *((_QWORD *)WPP_GLOBAL_Control + 2),
      0xEu,
      (__int64)&WPP_772ae84e4aa83dd2ec494ba833f0aab1_Traceguids,
      a1 + 16,
      a3,
      a4,
      a2);
  }
  return v5;
}
// 1401B9A88: using guessed type int dword_1401B9A88;
// 1401B9A8C: using guessed type int dword_1401B9A8C;
