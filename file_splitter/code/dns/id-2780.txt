//----- (0000000140147C18) ----------------------------------------------------
__int64 __fastcall CDnsPolicyContent::GetPolicyContent(CDnsPolicyContent *this, struct _DnssrvRpcPolicyAction **a2)
{
  __int64 v2; // rbx
  unsigned int v5; // edi
  struct _DnssrvRpcPolicyAction *zero; // rax
  struct _DnssrvRpcPolicyAction *v7; // rsi
  unsigned int v8; // ebp
  _QWORD *v9; // rax
  _QWORD *v10; // rbx
  _DWORD *v11; // r14
  _QWORD *v12; // rcx
  _WORD *v13; // rax
  __int64 v14; // rax

  v2 = *((unsigned int *)this + 6);
  v5 = 0;
  zero = (struct _DnssrvRpcPolicyAction *)MIDL_user_allocate_zero(8 * v2 + 16);
  v7 = zero;
  if ( zero )
  {
    *(_DWORD *)zero = v2;
    v8 = 0;
    v9 = (_QWORD *)*((_QWORD *)this + 2);
    v10 = (_QWORD *)*v9;
    if ( (_QWORD *)*v9 == v9 )
    {
LABEL_9:
      *a2 = v7;
      return v5;
    }
    while ( 1 )
    {
      v11 = MIDL_user_allocate_zero(0x10ui64);
      if ( !v11 )
        break;
      v12 = v10 + 2;
      if ( v10[5] >= 8ui64 )
        v12 = (_QWORD *)*v12;
      v13 = MIDL_user_copy_stringW((__int64)v12);
      *(_QWORD *)v11 = v13;
      if ( !v13 )
        break;
      v11[2] = *((_DWORD *)v10 + 14);
      v14 = v8++;
      *((_QWORD *)v7 + v14 + 1) = v11;
      v10 = (_QWORD *)*v10;
      if ( v10 == *((_QWORD **)this + 2) )
        goto LABEL_9;
    }
  }
  return 14;
}
