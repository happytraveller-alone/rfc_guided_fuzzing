//----- (00000001400BAA0C) ----------------------------------------------------
__int64 __fastcall processDsSecureUpdate(__int64 a1, __int64 a2)
{
  unsigned int updated; // ebp
  unsigned int v5; // edi
  __int64 v6; // rsi
  __int64 *v7; // r15
  LDAP *v8; // r13
  const char *v9; // r12
  CDnsClientSubnetRecordsTrie *v10; // rcx
  unsigned int SecurityContextFromAndVerifySignature; // eax
  __int64 v13; // rsi
  __int64 v14; // r8
  int v15; // r9d
  __int64 v16; // r8
  __int64 v17; // r8
  unsigned __int64 v18; // r8
  CDnsClientSubnetRecordsTrie *v19; // r10
  const char *v20; // rax
  const char *v21; // r8
  int v23; // [rsp+88h] [rbp+10h]
  void *v24; // [rsp+90h] [rbp+18h] BYREF
  LDAP *v25; // [rsp+98h] [rbp+20h] BYREF

  updated = 0;
  v24 = 0i64;
  v5 = 0;
  v25 = 0i64;
  v6 = *(_QWORD *)(a2 + 32);
  v7 = 0i64;
  v8 = 0i64;
  v23 = 0;
  v9 = 0i64;
  v10 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_qs(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x93u,
      (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids,
      a2,
      *(_QWORD *)(a1 + 16));
    v10 = WPP_GLOBAL_Control;
  }
  if ( v6 )
  {
    if ( !*(_WORD *)(v6 + 6314) )
    {
      if ( *(_QWORD *)a2 )
      {
        if ( v10 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)v10 + 17) & 0x80000) != 0
          && *((_BYTE *)v10 + 65) >= 4u )
        {
          WPP_SF_q(*((_QWORD *)v10 + 7), 0x95u, (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids, v6);
        }
        if ( (*(_BYTE *)(a2 + 40) & 1) != 0 )
          _InterlockedAdd(&dword_1401C8180, 1u);
        else
          _InterlockedAdd(&dword_1401C82C0, 1u);
        return 5i64;
      }
      else
      {
        if ( v10 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)v10 + 17) & 0x80000) != 0
          && *((_BYTE *)v10 + 65) >= 4u )
        {
          WPP_SF_q(*((_QWORD *)v10 + 7), 0x94u, (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids, v6);
        }
        return 0i64;
      }
    }
    SecurityContextFromAndVerifySignature = Dns_FindSecurityContextFromAndVerifySignature(
                                              (__int64 **)&v24,
                                              (__int128 *)(v6 + 64),
                                              v6 + 6304,
                                              *(unsigned __int16 *)(v6 + 6302) + v6 + 6304);
    v7 = (__int64 *)v24;
    updated = SecurityContextFromAndVerifySignature;
    if ( SecurityContextFromAndVerifySignature )
    {
      v9 = "Security context verification";
LABEL_23:
      v13 = a1;
      goto LABEL_24;
    }
    v10 = WPP_GLOBAL_Control;
  }
  if ( !*(_QWORD *)a2 )
  {
    if ( v10 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)v10 + 17) & 0x80000) != 0
      && *((_BYTE *)v10 + 65) >= 4u )
    {
      WPP_SF_q(*((_QWORD *)v10 + 7), 0x96u, (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids, v6);
    }
    if ( !v6 )
      goto LABEL_23;
    goto LABEL_43;
  }
  updated = Up_PrepareUpdateListForExecution(a1, 0i64, a2, 0);
  if ( updated )
  {
    v9 = "DS update initialization";
    v5 = 9002;
    goto LABEL_23;
  }
  v16 = *(unsigned int *)(a2 + 40);
  LODWORD(v16) = v16 | 0x400;
  updated = Up_ApplyUpdatesToDatabase(a2, a1, v16, v15);
  if ( updated )
  {
    v9 = "Update in-memory execution";
    goto LABEL_23;
  }
  if ( !(unsigned int)checkTempNodesForUpdateEffect(a1, a2) )
  {
    _InterlockedAdd(&dword_1401C7CC8, 1u);
    _InterlockedAdd(&dword_1401C7CCC, 1u);
    _InterlockedAdd(&dword_1401C7CD0, 1u);
    _InterlockedAdd(&dword_1401C7D18, 1u);
    v7 = (__int64 *)v24;
    goto LABEL_42;
  }
  if ( v6 )
  {
    if ( !*v7 )
    {
      if ( (byte_1401BA001 & 4) != 0 )
        WPP_SF_(57i64, (unsigned __int16)&WPP_9b9f12dbc4273be48aea1d81c92c8dd1_Traceguids, v17);
      updated = 9017;
      goto LABEL_55;
    }
    updated = (*(__int64 (__fastcall **)(__int64))(g_pSecurityFunctionTable + 96))(*v7 + 8);
    if ( updated )
    {
LABEL_55:
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x97u, (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids);
      }
      v5 = 9002;
      v9 = "Impersonating incoming client";
      goto LABEL_23;
    }
    v23 = 1;
  }
  else if ( (*(_BYTE *)(a2 + 40) & 2) == 0 )
  {
    goto LABEL_69;
  }
  updated = Ds_OpenServerForSecureUpdate(&v25);
  if ( updated )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x9Bu, (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids);
    }
    v5 = 9002;
    v9 = "Contacting DS";
    goto LABEL_23;
  }
  v8 = v25;
LABEL_69:
  updated = Ds_WriteUpdateToDs((__int64)v8, a2, a1);
  if ( !updated )
  {
LABEL_42:
    if ( !v6 )
      goto LABEL_23;
LABEL_43:
    v18 = *(_QWORD *)(v6 + 24);
    *(_BYTE *)(v6 + 6306) |= 0x80u;
    *(_BYTE *)(v6 + 1412) = 1;
    updated = Dns_SignMessageWithGssTsig(v7, (char *)(v6 + 6304), v18, (_QWORD *)(v6 + 32));
    if ( updated )
    {
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x9Du, (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids);
      }
      v5 = 9002;
      v9 = "Signing return message";
    }
    else if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
           && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
           && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
    {
      WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x9Eu, (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids);
    }
    goto LABEL_23;
  }
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_D(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x9Cu,
      (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids,
      updated);
  }
  v13 = a1;
  rollBackFailedUpdateFromDs((__int64)v8, a2, a1);
  v5 = 9005;
  if ( (*(_BYTE *)(a2 + 40) & 1) != 0 )
    _InterlockedAdd(&dword_1401C8184, 1u);
  else
    _InterlockedAdd(&dword_1401C82C4, 1u);
  if ( (*(_BYTE *)(a2 + 40) & 1) != 0 )
    _InterlockedAdd(&dword_1401C8194, 1u);
  else
    _InterlockedAdd(&dword_1401C82D4, 1u);
  v7 = (__int64 *)v24;
  v9 = "Write to the DS";
LABEL_24:
  Ds_LdapUnbind(&v25);
  if ( v23 )
  {
    if ( *v7 )
    {
      (*(void (__fastcall **)(__int64))(g_pSecurityFunctionTable + 104))(*v7 + 8);
    }
    else if ( (byte_1401BA001 & 4) != 0 )
    {
      WPP_SF_(58i64, (unsigned __int16)&WPP_9b9f12dbc4273be48aea1d81c92c8dd1_Traceguids, v14);
    }
  }
  if ( v7 )
  {
    if ( (byte_1401BA001 & 0x20) != 0 )
      WPP_SF_q(155i64, (unsigned __int16)&WPP_9b9f12dbc4273be48aea1d81c92c8dd1_Traceguids, (__int64)v7);
    Dns_EnlistSecurityContext(*v7);
    Dns_CleanupSecurityPacketInfoEx(v7, 1);
  }
  if ( updated )
  {
    if ( updated == 5 )
    {
      v5 = 5;
    }
    else if ( !v5 )
    {
      v5 = updated;
    }
    if ( (*(_BYTE *)(a2 + 40) & 1) != 0 )
      _InterlockedAdd(&dword_1401C8190, 1u);
    else
      _InterlockedAdd(&dword_1401C82D0, 1u);
    _InterlockedAdd((volatile signed __int32 *)pcSecureUpdateFailure, 1u);
    _InterlockedAdd((volatile signed __int32 *)pcSecureUpdateReceived, 1u);
    v19 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      v20 = "unknown error";
      if ( v9 )
        v20 = v9;
      WPP_SF_Ds(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x9Fu,
        (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids,
        v5,
        (__int64)v20);
      v19 = WPP_GLOBAL_Control;
    }
    if ( (qword_1401B9780 & 0x4000) == 0 )
      goto LABEL_114;
    if ( (unsigned int)Log_EnterLock() )
    {
      v21 = "<none>";
      g_pszCurrentLogLevelString = (__int64)"DSWRITE";
      if ( v9 )
        v21 = v9;
      Log_Printf("Update Error <%lu>: %s\r\n", updated, v21);
      g_pszCurrentLogLevelString = 0i64;
      Log_LeaveLock();
    }
  }
  else
  {
    if ( (*(_BYTE *)(a2 + 40) & 1) != 0 )
      _InterlockedAdd(&dword_1401C8188, 1u);
    else
      _InterlockedAdd(&dword_1401C82C8, 1u);
    _InterlockedAdd((volatile signed __int32 *)pcSecureUpdateReceived, 1u);
  }
  v19 = WPP_GLOBAL_Control;
LABEL_114:
  if ( v19 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)v19 + 17) & 0x80000) != 0
    && *((_BYTE *)v19 + 65) >= 4u )
  {
    WPP_SF_Dqs(
      *((_QWORD *)v19 + 7),
      0xA0u,
      (__int64)&WPP_40fcce62f6f439b0ec75be29cae6130a_Traceguids,
      v5,
      a2,
      *(_QWORD *)(v13 + 16));
  }
  return v5;
}
// 1400BABCA: variable 'v14' is possibly undefined
// 1400BAC61: variable 'v15' is possibly undefined
// 1400BAD59: variable 'v17' is possibly undefined
// 140185140: using guessed type __int64 (__fastcall *_guard_dispatch_icall_fptr)(_QWORD, _QWORD);
// 1401B8F28: using guessed type __int64 g_pszCurrentLogLevelString;
// 1401B9780: using guessed type __int64 qword_1401B9780;
// 1401BA001: using guessed type char byte_1401BA001;
// 1401BA088: using guessed type __int64 g_pSecurityFunctionTable;
// 1401C7CC8: using guessed type int dword_1401C7CC8;
// 1401C7CCC: using guessed type int dword_1401C7CCC;
// 1401C7CD0: using guessed type int dword_1401C7CD0;
// 1401C7D18: using guessed type int dword_1401C7D18;
// 1401C8180: using guessed type int dword_1401C8180;
// 1401C8184: using guessed type int dword_1401C8184;
// 1401C8188: using guessed type int dword_1401C8188;
// 1401C8190: using guessed type int dword_1401C8190;
// 1401C8194: using guessed type int dword_1401C8194;
// 1401C82C0: using guessed type int dword_1401C82C0;
// 1401C82C4: using guessed type int dword_1401C82C4;
// 1401C82C8: using guessed type int dword_1401C82C8;
// 1401C82D0: using guessed type int dword_1401C82D0;
// 1401C82D4: using guessed type int dword_1401C82D4;
// 1401C8620: using guessed type __int64 pcSecureUpdateReceived;
// 1401C8628: using guessed type __int64 pcSecureUpdateFailure;
