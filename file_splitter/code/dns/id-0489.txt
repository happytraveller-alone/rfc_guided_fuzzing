//----- (00000001400403DC) ----------------------------------------------------
__int64 __fastcall Ds_ReadNodeRecords(__int64 *a1, __int64 a2, _QWORD *a3, char *a4)
{
  char *v4; // rsi
  ULONG v10; // edi
  DWORD TickCount; // ebx
  LDAPMessage *entry; // rbx
  PLDAPMessage res; // [rsp+60h] [rbp-A0h] BYREF
  PLDAPControlW ServerControls[3]; // [rsp+68h] [rbp-98h] BYREF
  char v15[60]; // [rsp+80h] [rbp-80h] BYREF
  int v16; // [rsp+BCh] [rbp-44h]
  WCHAR base[1288]; // [rsp+210h] [rbp+110h] BYREF

  res = 0i64;
  v4 = 0i64;
  ServerControls[0] = (PLDAPControlW)&SecurityDescriptorControl_DGO;
  ServerControls[1] = 0i64;
  *a3 = 0i64;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
  {
    WPP_SF_sS(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0xFCu,
      (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
      (const char *)(a2 + 102),
      a1[105]);
  }
  if ( !a1[105] )
    return 9611i64;
  v10 = buildDsNodeNameFromNode(base, a1, a2);
  if ( v10 )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0xFDu, (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids);
    }
  }
  else
  {
    TickCount = GetTickCount();
    v10 = ldap_search_ext_sW(
            pServerLdap,
            base,
            0,
            g_szDnsNodeFilter,
            &DsTypeAttributeTable,
            0,
            ServerControls,
            0i64,
            &g_LdapTimeout,
            0,
            &res);
    _InterlockedExchangeAdd(&dword_1401C7D48, GetTickCount() - TickCount);
    if ( v10 )
    {
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        WPP_SF_D(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0xFEu,
          (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
          v10);
      }
    }
    else
    {
      entry = ldap_first_entry(pServerLdap, res);
      if ( !entry )
      {
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
        {
          WPP_SF_S(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            0xFFu,
            (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
            base);
        }
        v10 = 32;
        goto LABEL_23;
      }
      v4 = a4;
      if ( !a4 )
      {
        v4 = v15;
        memset_0(v15, 0, 0x190ui64);
        v16 = 1;
      }
      *((_QWORD *)v4 + 3) = a1;
      *((_QWORD *)v4 + 2) = entry;
      v10 = DS_BuildRecordsFromSearchResult((__int64)v4, a2);
    }
  }
  if ( v10 )
  {
LABEL_23:
    _InterlockedIncrement(&dword_1401C7D50);
    *a3 = 0i64;
    v10 = Ds_ErrorHandler(v10, (__int64)base, pServerLdap, 0);
    goto LABEL_24;
  }
  *a3 = *((_QWORD *)v4 + 15);
LABEL_24:
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_SD(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x100u,
      (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
      base);
  }
  if ( res )
    ldap_msgfree(res);
  return v10;
}
// 1401C7D48: using guessed type int dword_1401C7D48;
// 1401C7D50: using guessed type int dword_1401C7D50;
// 1401EC440: using guessed type __int64 SecurityDescriptorControl_DGO;
