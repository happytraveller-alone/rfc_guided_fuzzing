//----- (0000000140117880) ----------------------------------------------------
char *__fastcall coreCtimeWrapper(time_t a1, char *a2)
{
  __int64 v3; // rdi
  char *result; // rax
  char *v5; // rdx
  __int64 v6; // rax
  char v7; // cl
  __int64 v8; // rcx
  time_t Time; // [rsp+30h] [rbp+8h] BYREF

  Time = a1;
  v3 = 60i64;
  memset_0(a2, 0, 0x3Cui64);
  result = ctime(&Time);
  if ( result )
  {
    v5 = a2;
    v6 = result - a2;
    do
    {
      if ( v3 == -2147483586 )
        break;
      v7 = v5[v6];
      if ( !v7 )
        break;
      *v5++ = v7;
      --v3;
    }
    while ( v3 );
    if ( !v3 )
      --v5;
    *v5 = 0;
    v8 = -1i64;
    do
      ++v8;
    while ( a2[v8] );
    result = (char *)(v8 - 1);
    if ( (unsigned __int64)(v8 - 1) <= 0x3A && a2[v8 - 1] == 10 )
      a2[v8 - 1] = 0;
  }
  return result;
}
