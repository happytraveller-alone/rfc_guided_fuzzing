//----- (00000001401232C0) ----------------------------------------------------
__int64 __fastcall Nsec3UnknownFileRead(__int64 a1, unsigned int a2, __int64 a3, __int64 a4)
{
  unsigned int v4; // ebx
  int v8; // r14d
  __int64 v10; // rsi
  unsigned int v11; // edi
  _DWORD *v12; // rax
  __int64 v13; // rcx
  unsigned __int8 *v14; // rax
  unsigned __int8 *v15; // r14
  unsigned __int64 v16; // rax
  _BYTE *v17; // rax
  _BYTE *v18; // rbp
  char *v19; // rcx
  __int64 v20; // rax
  char *v21; // r13
  unsigned __int8 *v22; // rdi
  __int64 v23; // rax
  char *v24; // rdi
  char *v25; // r12
  char *v26; // rdi
  unsigned int v27; // [rsp+68h] [rbp+10h] BYREF

  v4 = 0;
  v27 = 0;
  v8 = 0;
  if ( a2 < 3 )
    return 3222394115i64;
  if ( !(unsigned int)File_ParseDwordToken(&v27, a3 + 16, 0i64) )
    return (unsigned int)-1072573183;
  v10 = v27;
  if ( v27 < 7 )
    return (unsigned int)-1072573183;
  v11 = a2 - 2;
  if ( v11 )
  {
    v12 = (_DWORD *)(a3 + 40);
    v13 = v11;
    do
    {
      v8 += *v12;
      v12 += 4;
      --v13;
    }
    while ( v13 );
  }
  if ( v8 != 2 * v27 )
    return (unsigned int)-1072573183;
  v14 = (unsigned __int8 *)Mem_Alloc(v27, 0i64, "ds\\dns\\server\\dnscore\\rrfile.c", 6312);
  v15 = v14;
  if ( v14 )
  {
    v16 = (unsigned __int64)&v14[v10];
    if ( v11 && !(unsigned int)buildByteBufferFromHexStringTokens(v15, &v27, v11, a3 + 32, v16) && v27 == (_DWORD)v10 )
    {
      v17 = RR_AllocateEx(v10, 0, 0);
      v18 = v17;
      if ( !v17 )
      {
        v4 = 14;
LABEL_24:
        Mem_Free(v15, 0i64, 0i64, (__int64)"ds\\dns\\server\\dnscore\\rrfile.c", 6415);
        return v4;
      }
      *(_QWORD *)(a4 + 800) = v17;
      v19 = &v17[v10 + 56];
      v17[56] = *v15;
      v17[57] = v15[1];
      *((_WORD *)v17 + 29) = *((_WORD *)v15 + 1);
      v20 = v15[4];
      v18[60] = v20;
      v21 = &v18[v20 + 62];
      if ( v21 >= v18 + 62 && v21 <= v19 )
      {
        memcpy_0(v18 + 62, v15 + 5, (unsigned int)v20);
        v22 = &v15[(unsigned __int8)v18[60] + 5];
        v23 = *v22;
        v24 = (char *)(v22 + 1);
        v18[61] = v23;
        v25 = &v21[v23];
        if ( &v21[v23] >= v21 && v25 <= &v18[v10 + 56] )
        {
          memcpy_0(v21, v24, (unsigned int)v23);
          v26 = &v24[(unsigned __int8)v18[61]];
          if ( v25 < &v18[v10 + 56] && (unsigned int)v10 > (int)v26 - (int)v15 )
            memcpy_0(v25, v26, (size_t)&v15[v10 - (_QWORD)v26]);
          goto LABEL_24;
        }
      }
    }
    v4 = -1072573183;
    goto LABEL_24;
  }
  return 14;
}
