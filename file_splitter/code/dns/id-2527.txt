//----- (000000014012E430) ----------------------------------------------------
const struct _BCRYPT_ECCKEY_BLOB *__fastcall DnsSign::CCNGAlgorithmManager::GetECCPublicKeyParams(
        DnsSign::CCNGAlgorithmManager *this,
        __int64 a2)
{
  char v3[56]; // [rsp+28h] [rbp-80h] BYREF
  char pExceptionObject[56]; // [rsp+60h] [rbp-48h] BYREF

  if ( (unsigned __int8)a2 == 13 )
    return (const struct _BCRYPT_ECCKEY_BLOB *)aEcs1;
  if ( (unsigned __int8)a2 != 14 )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 7) & 0x100000) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 25) >= 4u )
    {
      WPP_SF_D(
        *((_QWORD *)WPP_GLOBAL_Control + 2),
        0x10u,
        (__int64)&WPP_a9354bd5cd823ab7126e1b8d4348d392_Traceguids,
        (unsigned __int8)a2);
    }
    DnsSign::CRunTimeException::CRunTimeException((DnsSign::CRunTimeException *)v3, a2, 2);
    DnsSign::CException::AppendErrorMessageByID((DnsSign::CException *)v3, 0xD6D89u);
    DnsSign::CRunTimeException::CRunTimeException(
      (DnsSign::CRunTimeException *)pExceptionObject,
      (const struct DnsSign::CRunTimeException *)v3);
    CxxThrowException_0(pExceptionObject, (_ThrowInfo *)&TI2_AVCRunTimeException_DnsSign__);
  }
  return (const struct _BCRYPT_ECCKEY_BLOB *)aEcs30;
}
// 14012E4A9: variable 'a2' is possibly undefined
