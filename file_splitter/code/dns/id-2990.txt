//----- (000000014015833C) ----------------------------------------------------
char *__fastcall Dns_FindOrCreateSecurityContext(__int64 a1, __int64 a2, __int64 a3)
{
  __int128 v4; // xmm1
  __int128 v5; // xmm0
  __int128 v6; // xmm1
  __int128 v7; // xmm0
  char *result; // rax
  __int64 v9; // rdx
  char *v10; // rdi
  char *v11; // rbx
  signed __int32 v12; // ebx
  __int64 v13; // rax
  __int64 v14; // rax
  __int64 v15; // r8
  const unsigned __int16 *v16; // r9
  _WORD *v17; // rcx
  HLOCAL StringCopy_W; // rax
  signed __int32 v19; // [rsp+20h] [rbp-198h]
  DWORD TickCount; // [rsp+28h] [rbp-190h]
  __int128 Buf1[5]; // [rsp+40h] [rbp-178h] BYREF
  __int64 v22; // [rsp+90h] [rbp-128h]
  char pszDest[256]; // [rsp+A0h] [rbp-118h] BYREF

  if ( (byte_1401BA001 & 0x20) != 0 )
    WPP_SF_(14i64, (unsigned __int16)&WPP_9b9f12dbc4273be48aea1d81c92c8dd1_Traceguids, a3);
  v4 = *(_OWORD *)(a1 + 16);
  Buf1[0] = *(_OWORD *)a1;
  v5 = *(_OWORD *)(a1 + 32);
  Buf1[1] = v4;
  v6 = *(_OWORD *)(a1 + 48);
  Buf1[2] = v5;
  v7 = *(_OWORD *)(a1 + 64);
  Buf1[3] = v6;
  *(_QWORD *)&v6 = *(_QWORD *)(a1 + 80);
  Buf1[4] = v7;
  v22 = v6;
  result = (char *)Dns_DequeueSecurityContextByKey(Buf1, 0);
  if ( !result )
  {
    v10 = (char *)Dns_AllocZero(0xA8ui64);
    if ( v10 )
    {
      ++SecContextCreate;
      v11 = *(char **)(a1 + 64);
      if ( *(_QWORD *)(a1 + 72) )
      {
        v12 = _InterlockedIncrement(&g_ContextCount);
        TickCount = GetTickCount();
        v19 = v12;
        StringCbPrintfA(pszDest, 0x100ui64, "%s.%d-%x.%s", *(const char **)(a1 + 72), v19, TickCount, g_ContextUuid);
        v11 = pszDest;
        v13 = DnsStringCopyAllocateEx(*(_QWORD *)(a1 + 72), 0i64, 0i64, 0i64);
        if ( !v13 )
          goto LABEL_15;
        *((_QWORD *)v10 + 12) = v13;
      }
      *(_OWORD *)(v10 + 24) = *(_OWORD *)a1;
      *(_OWORD *)(v10 + 40) = *(_OWORD *)(a1 + 16);
      *(_OWORD *)(v10 + 56) = *(_OWORD *)(a1 + 32);
      *(_OWORD *)(v10 + 72) = *(_OWORD *)(a1 + 48);
      v14 = DnsStringCopyAllocateEx(v11, 0i64, 0i64, 0i64);
      if ( !v14 )
        goto LABEL_15;
      *((_QWORD *)v10 + 11) = v14;
      v17 = *(_WORD **)(a1 + 80);
      if ( v17 )
      {
        StringCopy_W = Dns_CreateStringCopy_W(v17, v9, v15, v16);
        if ( StringCopy_W )
        {
          *((_QWORD *)v10 + 13) = StringCopy_W;
          goto LABEL_12;
        }
LABEL_15:
        Dns_FreeSecurityContext((__int64)v10);
        return 0i64;
      }
    }
LABEL_12:
    if ( (*((_DWORD *)WPP_GLOBAL_Control + 7) & 0x2000) != 0 )
      DnsPrint_SecurityContextList((__int64)WPP_GLOBAL_Control, v9, (__int64)"New security context:", v10);
    return v10;
  }
  return result;
}
// 1401584A1: variable 'v9' is possibly undefined
// 1401584A1: variable 'v15' is possibly undefined
// 1401584A1: variable 'v16' is possibly undefined
// 140183D68: using guessed type __int64 __fastcall DnsStringCopyAllocateEx(_QWORD, _QWORD, _QWORD, _QWORD);
// 1401B9E38: using guessed type int SecContextCreate;
// 1401B9EB0: using guessed type int g_ContextCount;
// 1401BA001: using guessed type char byte_1401BA001;
