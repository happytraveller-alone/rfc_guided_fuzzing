//----- (0000000140111FA0) ----------------------------------------------------
__int64 __fastcall Insert_Element_ScopeMap(
        __int64 a1,
        __int64 a2,
        __int64 a3,
        __int64 a4,
        _QWORD *a5,
        __int64 *a6,
        int a7)
{
  unsigned int v9; // ebx
  int v10; // edi
  __int64 v11; // r8
  __int64 v13; // [rsp+30h] [rbp-28h] BYREF
  __int64 *v14; // [rsp+38h] [rbp-20h]
  char v15[24]; // [rsp+40h] [rbp-18h] BYREF
  unsigned int v16; // [rsp+78h] [rbp+20h] BYREF

  v16 = -1;
  v9 = 0;
  if ( (unsigned int)acquireWrite(a2, 0x2710u, &v16) != -1 )
  {
    if ( a7 )
    {
      if ( a7 == 1 )
      {
        v14 = a6;
        v13 = *a6;
        if ( !*(_BYTE *)(std::_Tree<std::_Tmap_traits<unsigned short *,_DnsServerScopeInfo_ *,bool (*)(unsigned short *,unsigned short *),std::allocator<std::pair<unsigned short * const,_DnsServerScopeInfo_ *>>,0>>::insert<std::pair<unsigned short *,_DnsServerScopeInfo_ *>>(
                           a1,
                           (__int64)v15,
                           &v13)
                       + 8) )
        {
          v9 = 9963;
          goto LABEL_21;
        }
      }
      else if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
             && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x10) != 0
             && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
      {
        WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x11u, (__int64)&WPP_5dd087cb468e333d3a5b59f2603de819_Traceguids);
      }
    }
    else
    {
      v14 = a6;
      v13 = a6[24];
      if ( !*(_BYTE *)(std::_Tree<std::_Tmap_traits<unsigned short *,_DnsServerScopeInfo_ *,bool (*)(unsigned short *,unsigned short *),std::allocator<std::pair<unsigned short * const,_DnsServerScopeInfo_ *>>,0>>::insert<std::pair<unsigned short *,_DnsServerScopeInfo_ *>>(
                         a1,
                         (__int64)v15,
                         &v13)
                     + 8) )
      {
        v9 = 9951;
LABEL_21:
        Lock_ReleaseWrite(a2);
        return v9;
      }
    }
    ++*a5;
    goto LABEL_21;
  }
  v10 = a7;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x10) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
  {
    if ( a7 )
      v11 = *a6;
    else
      v11 = a6[3];
    WPP_SF_DS(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x10u,
      (__int64)&WPP_5dd087cb468e333d3a5b59f2603de819_Traceguids,
      a7,
      v11);
  }
  return v10 != 0 ? 9962 : 9607;
}
