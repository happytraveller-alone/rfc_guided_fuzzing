//----- (000000014016E694) ----------------------------------------------------
__int64 WPP_SF_sqqsdqqdqdqd(__int64 a1, __int64 a2, const char *a3, ...)
{
  __int64 v3; // r9
  __int64 v5; // rcx
  __int64 v6; // rcx
  __int64 v7; // r9
  const char *v8; // r8
  const char *v9; // rax
  __int64 v11; // [rsp+108h] [rbp+20h] BYREF
  va_list va; // [rsp+108h] [rbp+20h]
  __int64 v13; // [rsp+110h] [rbp+28h] BYREF
  va_list va1; // [rsp+110h] [rbp+28h]
  const char *v15; // [rsp+118h] [rbp+30h]
  __int64 v16; // [rsp+120h] [rbp+38h] BYREF
  va_list va2; // [rsp+120h] [rbp+38h]
  __int64 v18; // [rsp+128h] [rbp+40h] BYREF
  va_list va3; // [rsp+128h] [rbp+40h]
  __int64 v20; // [rsp+130h] [rbp+48h] BYREF
  va_list va4; // [rsp+130h] [rbp+48h]
  __int64 v22; // [rsp+138h] [rbp+50h] BYREF
  va_list va5; // [rsp+138h] [rbp+50h]
  __int64 v24; // [rsp+140h] [rbp+58h] BYREF
  va_list va6; // [rsp+140h] [rbp+58h]
  __int64 v26; // [rsp+148h] [rbp+60h] BYREF
  va_list va7; // [rsp+148h] [rbp+60h]
  __int64 v28; // [rsp+150h] [rbp+68h] BYREF
  va_list va8; // [rsp+150h] [rbp+68h]
  va_list va9; // [rsp+158h] [rbp+70h] BYREF

  va_start(va9, a3);
  va_start(va8, a3);
  va_start(va7, a3);
  va_start(va6, a3);
  va_start(va5, a3);
  va_start(va4, a3);
  va_start(va3, a3);
  va_start(va2, a3);
  va_start(va1, a3);
  va_start(va, a3);
  v11 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v13 = va_arg(va2, _QWORD);
  v15 = va_arg(va2, const char *);
  va_copy(va3, va2);
  v16 = va_arg(va3, _QWORD);
  va_copy(va4, va3);
  v18 = va_arg(va4, _QWORD);
  va_copy(va5, va4);
  v20 = va_arg(va5, _QWORD);
  va_copy(va6, va5);
  v22 = va_arg(va6, _QWORD);
  va_copy(va7, va6);
  v24 = va_arg(va7, _QWORD);
  va_copy(va8, va7);
  v26 = va_arg(va8, _QWORD);
  va_copy(va9, va8);
  v28 = va_arg(va9, _QWORD);
  v3 = -1i64;
  if ( v15 )
  {
    v5 = -1i64;
    do
      ++v5;
    while ( v15[v5] );
    v6 = v5 + 1;
  }
  else
  {
    v6 = 5i64;
  }
  if ( a3 )
  {
    do
      ++v3;
    while ( a3[v3] );
    v7 = v3 + 1;
  }
  else
  {
    v7 = 5i64;
  }
  v8 = "NULL";
  v9 = "NULL";
  if ( v15 )
    v9 = v15;
  if ( a3 )
    v8 = a3;
  return FastWppTraceMessage(
           (__int64)&WPP_9b9f12dbc4273be48aea1d81c92c8dd1_Traceguids,
           0xBu,
           v8,
           v7,
           va,
           8i64,
           va1,
           8i64,
           v9,
           v6,
           va2,
           4i64,
           va3,
           8i64,
           va4,
           8i64,
           va5,
           4i64,
           va6,
           8i64,
           va7,
           4i64,
           va8,
           8i64,
           va9,
           4i64,
           0i64);
}
