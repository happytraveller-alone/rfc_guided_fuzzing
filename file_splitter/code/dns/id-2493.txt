//----- (000000014012D080) ----------------------------------------------------
__int64 __fastcall std::_Maklocstr<unsigned short>(char *a1, __int64 a2, const _Cvtvec *a3)
{
  __int64 v4; // rbx
  const char *v5; // rsi
  bool v6; // zf
  size_t v7; // rbx
  __int64 v8; // rdi
  size_t v9; // rbp
  const char *v10; // r14
  int v11; // eax
  unsigned __int64 v12; // rdi
  wchar_t *v13; // rax
  __int64 v14; // rbp
  wchar_t *i; // r14
  int v16; // eax
  __int64 result; // rax
  mbstate_t v18; // [rsp+70h] [rbp+8h] BYREF
  __int64 v19; // [rsp+78h] [rbp+10h] BYREF
  mbstate_t v20; // [rsp+88h] [rbp+20h] BYREF

  v19 = a2;
  v18._Wchar = 0;
  v4 = -1i64;
  v5 = a1;
  do
    ++v4;
  while ( a1[v4] );
  v6 = v4 == -1;
  v7 = v4 + 1;
  v8 = 0i64;
  v9 = v7;
  v10 = a1;
  if ( !v6 )
  {
    do
    {
      v11 = Mbrtowc((wchar_t *)&v19, v10, v9, &v18, a3);
      if ( v11 <= 0 )
        break;
      ++v8;
      v10 += v11;
      v9 -= v11;
    }
    while ( v9 );
  }
  v12 = v8 + 1;
  v13 = (wchar_t *)operator new[](saturated_mul(v12, 2ui64));
  v20._Wchar = 0;
  v14 = (__int64)v13;
  for ( i = v13; v12; --v12 )
  {
    v16 = Mbrtowc(i, v5, v7, &v20, a3);
    if ( v16 <= 0 )
      break;
    ++i;
    v5 += v16;
  }
  result = v14;
  *i = 0;
  return result;
}
