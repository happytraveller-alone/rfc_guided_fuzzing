//----- (00000001400CDA18) ----------------------------------------------------
__int64 __fastcall writeZoneNodeToMessage(__int64 a1, __int64 *a2, unsigned __int16 a3, __int16 a4)
{
  __int64 v4; // r12
  __int64 v9; // rbp
  char *v10; // rax
  __int64 v11; // rdx
  __int64 v12; // r8
  __int64 i; // r9
  __int64 NextRecord; // rax
  __int64 v16; // rbx
  char v17; // al
  __int16 v18; // ax
  char *v19; // rax
  char *v20; // rax
  unsigned __int16 v21; // dx
  CDnsClientSubnetRecordsTrie *v22; // rcx
  unsigned __int16 v23; // dx
  unsigned int v24; // [rsp+70h] [rbp+8h] BYREF

  v4 = 0i64;
  if ( a2 )
    v9 = a2[7];
  else
    v9 = 0i64;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x40) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    v10 = Dbg_NodeName((__int64)a2);
    WPP_SF_DsqD(*((_QWORD *)WPP_GLOBAL_Control + 7), v11, v12, a3, (__int64)v10);
  }
  if ( *(_BYTE *)(a1 + 1329) )
    return writeZoneNodeToMessageForBind(a1, a2, a3, a4);
  v24 = -1;
  acquireRead(DbaseLock, 0xFFFFFFFF, &v24);
  for ( i = 0i64; ; i = v16 )
  {
    NextRecord = RR_FindNextRecordEx((__int64)a2, 0, a3, i, 0, 0);
    v16 = NextRecord;
    if ( !NextRecord )
    {
      v24 = -1;
      releaseRead(DbaseLock, &v24, 1);
      return 1i64;
    }
    v17 = *(_BYTE *)(NextRecord + 8);
    if ( v17 == 8 || (v17 & 1) != 0 && (*(_DWORD *)(v9 + 372) != 1 || (*(_BYTE *)(v9 + 1040) & 4) == 0) )
      continue;
    v18 = *(_WORD *)(v16 + 12);
    if ( v18 == a4 )
    {
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x40) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        v19 = Dbg_NodeName((__int64)a2);
        WPP_SF_Ds(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0x3Bu,
          (__int64)&WPP_4e7c1fc42723374814672f05b7ca7028_Traceguids,
          *(unsigned __int16 *)(v16 + 12),
          (__int64)v19);
      }
      continue;
    }
    if ( (v18 & 0xFFFC) != 0xFF00 )
      goto LABEL_42;
    if ( (*(_DWORD *)(v16 + 56) & 0x10000) != 0 )
    {
      if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        || (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x40) == 0
        || *((_BYTE *)WPP_GLOBAL_Control + 65) < 4u )
      {
        continue;
      }
      v20 = Dbg_NodeName((__int64)a2);
      v21 = 60;
LABEL_33:
      WPP_SF_s(*((_QWORD *)WPP_GLOBAL_Control + 7), v21, (__int64)&WPP_4e7c1fc42723374814672f05b7ca7028_Traceguids, v20);
      continue;
    }
    if ( *(_DWORD *)(v9 + 372) != 1 || (*(_BYTE *)(v9 + 1040) & 4) == 0 )
      break;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x40) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      v20 = Dbg_NodeName((__int64)a2);
      v21 = 61;
      goto LABEL_33;
    }
LABEL_44:
    ;
  }
  while ( 1 )
  {
LABEL_42:
    if ( (unsigned int)Wire_AddResourceRecordToMessage(a1, a2, 0, v16, 0, 0i64) )
    {
      ++*(_WORD *)(a1 + 6310);
      goto LABEL_44;
    }
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x40) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_qq(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x3Eu,
        (__int64)&WPP_4e7c1fc42723374814672f05b7ca7028_Traceguids,
        a1,
        v16);
    }
    v24 = -1;
    releaseRead(DbaseLock, &v24, 1);
    if ( !*(_BYTE *)(a1 + 1413) )
      break;
    if ( v16 == v4 )
    {
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x40) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        WPP_SF_qq(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0x40u,
          (__int64)&WPP_4e7c1fc42723374814672f05b7ca7028_Traceguids,
          v16,
          a1);
      }
      return 0i64;
    }
    *(_BYTE *)(a1 + 6306) &= ~2u;
    v4 = v16;
    if ( (unsigned int)Send_ResponseAndReset(a1) )
    {
      v22 = WPP_GLOBAL_Control;
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x40) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        v23 = 65;
LABEL_57:
        WPP_SF_q(*((_QWORD *)v22 + 7), v23, (__int64)&WPP_4e7c1fc42723374814672f05b7ca7028_Traceguids, a1);
        return 0i64;
      }
      return 0i64;
    }
    v24 = -1;
    acquireRead(DbaseLock, 0xFFFFFFFF, &v24);
  }
  v22 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x40) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    v23 = 63;
    goto LABEL_57;
  }
  return 0i64;
}
// 1400CDA94: variable 'v11' is possibly undefined
// 1400CDA94: variable 'v12' is possibly undefined
// 1401EC5E8: using guessed type __int64 DbaseLock;
