//----- (0000000140098D00) ----------------------------------------------------
_BYTE *__fastcall NaptrWireRead(__int64 a1, __int64 a2, _DWORD *a3, unsigned __int16 a4)
{
  unsigned __int8 *v7; // rbx
  CDnsClientSubnetRecordsTrie *v8; // r10
  unsigned __int8 *v9; // rbp
  __int16 v10; // di
  unsigned __int8 *v11; // r8
  __int64 v12; // r14
  int i; // r9d
  int v14; // r11d
  unsigned __int8 *v15; // rax
  CDnsClientSubnetRecordsTrie *v16; // rcx
  unsigned __int16 v17; // dx
  _BYTE *v18; // rdi
  int v19; // eax
  char *v20; // rsi
  size_t v21; // rbx
  unsigned __int8 v23[272]; // [rsp+40h] [rbp-158h] BYREF

  v7 = (unsigned __int8 *)a3 + a4;
  v8 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x800) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
  {
    WPP_SF_qddqq(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0xEu,
      (unsigned __int16)((_WORD)a3 - a2 - 6304),
      a3,
      (unsigned __int16)((_WORD)a3 - a2 - 6304),
      a4,
      (char *)a3 + a4,
      a2);
    v8 = WPP_GLOBAL_Control;
  }
  if ( a4 <= 4u )
    return 0i64;
  v9 = (unsigned __int8 *)(a3 + 1);
  v10 = 4;
  v11 = (unsigned __int8 *)(a3 + 1);
  v12 = 3i64;
  for ( i = 0; i < 3; ++i )
  {
    v14 = *v11;
    v11 += v14 + 1;
    if ( v11 >= v7 )
    {
      if ( v8 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)v8 + 17) & 0x800) != 0
        && *((_BYTE *)v8 + 65) >= 4u )
      {
        WPP_SF_Dqq(*((_QWORD *)v8 + 7), 0xFu, (__int64)&WPP_75a2f1109eb632ccef6002e65d5fc80e_Traceguids, i);
      }
      return 0i64;
    }
    v10 += v14 + 1;
  }
  v15 = Name_PacketNameToCountNameEx(v23, a2, v11, (unsigned __int64)v7);
  if ( !v15 )
  {
    v16 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x800) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      v17 = 16;
LABEL_14:
      WPP_SF_qq(*((_QWORD *)v16 + 7), v17, (__int64)&WPP_75a2f1109eb632ccef6002e65d5fc80e_Traceguids);
      return 0i64;
    }
    return 0i64;
  }
  if ( v15 != v7 )
  {
    v16 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x800) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      v17 = 17;
      goto LABEL_14;
    }
    return 0i64;
  }
  v18 = RR_AllocateEx(v10 + v23[0] + 2, 0, 0);
  if ( !v18 )
    return 0i64;
  v19 = *a3;
  v20 = v18 + 60;
  *((_DWORD *)v18 + 14) = v19;
  do
  {
    v21 = (unsigned int)*v9 + 1;
    memcpy_0(v20, v9, v21);
    v9 += v21;
    v20 += v21;
    --v12;
  }
  while ( v12 );
  Name_CopyCountName(v20, v23);
  return v18;
}
