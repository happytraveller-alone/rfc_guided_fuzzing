//----- (0000000140146830) ----------------------------------------------------
unsigned __int16 *__fastcall CDNSPolicyCriteriaSubnetRecord::GetPolicyCriteriaString(
        CDNSPolicyCriteriaSubnetRecord *this)
{
  int v2; // edi
  int v3; // r14d
  _QWORD *v4; // rax
  _QWORD *v5; // rbx
  int v6; // edi
  _QWORD *v7; // rax
  _QWORD *v8; // rbx
  const void **v9; // rcx
  _WORD *v10; // rbx
  const void *Src[3]; // [rsp+28h] [rbp-38h] BYREF
  unsigned __int64 v13; // [rsp+40h] [rbp-20h]

  v13 = 7i64;
  Src[2] = 0i64;
  LOWORD(Src[0]) = 0;
  v2 = 0;
  v3 = 0;
  v4 = (_QWORD *)*((_QWORD *)this + 8);
  v5 = (_QWORD *)*v4;
  if ( (_QWORD *)*v4 != v4 )
  {
    do
    {
      if ( !v2 )
      {
        std::wstring::append((char *)Src, (char *)L"EQ");
        v2 = 1;
        v3 = 1;
      }
      std::wstring::operator+=((__int64)Src, 44);
      std::wstring::append(Src, v5 + 2, 0i64, 0xFFFFFFFFFFFFFFFFui64);
      v5 = (_QWORD *)*v5;
    }
    while ( v5 != *((_QWORD **)this + 8) );
  }
  v6 = 0;
  v7 = (_QWORD *)*((_QWORD *)this + 11);
  v8 = (_QWORD *)*v7;
  if ( (_QWORD *)*v7 != v7 )
  {
    do
    {
      if ( !v6 )
      {
        if ( v3 )
          std::wstring::operator+=((__int64)Src, 59);
        std::wstring::append((char *)Src, (char *)L"NE");
        v6 = 1;
      }
      std::wstring::operator+=((__int64)Src, 44);
      std::wstring::append(Src, v8 + 2, 0i64, 0xFFFFFFFFFFFFFFFFui64);
      v8 = (_QWORD *)*v8;
    }
    while ( v8 != *((_QWORD **)this + 11) );
  }
  v9 = Src;
  if ( v13 >= 8 )
    v9 = (const void **)Src[0];
  v10 = MIDL_user_copy_stringW((__int64)v9);
  if ( v13 >= 8 )
    operator delete((void *)Src[0]);
  return v10;
}
// 140184CA8: using guessed type void __stdcall operator delete(void *);
