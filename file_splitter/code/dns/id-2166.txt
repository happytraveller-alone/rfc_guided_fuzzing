//----- (0000000140112300) ----------------------------------------------------
__int64 __fastcall LookUp_ServerScopeMap(
        __int64 a1,
        __int64 a2,
        __int64 a3,
        unsigned int a4,
        const unsigned __int16 *a5,
        _QWORD *a6)
{
  _QWORD *v6; // rsi
  unsigned int v9; // ebx
  __int64 **v10; // rax
  unsigned int v12; // [rsp+40h] [rbp+18h] BYREF

  v6 = a6;
  v12 = -1;
  v9 = 0;
  *a6 = 0i64;
  if ( (unsigned int)acquireRead(a2, a4, &v12) == -1 )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x10) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
    {
      WPP_SF_S(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x14u,
        (__int64)&WPP_5dd087cb468e333d3a5b59f2603de819_Traceguids,
        a5);
    }
    return 9962;
  }
  else
  {
    v10 = std::_Tree<std::_Tmap_traits<unsigned short *,_DnsServerScopeInfo_ *,bool (*)(unsigned short *,unsigned short *),std::allocator<std::pair<unsigned short * const,_DnsServerScopeInfo_ *>>,0>>::find(
            a1,
            &a6,
            &a5);
    if ( *v10 != *(__int64 **)(a1 + 8) )
      *v6 = (*v10)[4];
    v12 = -1;
    releaseRead(a2, &v12, 1);
  }
  return v9;
}
