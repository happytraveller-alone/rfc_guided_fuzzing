//----- (0000000140094F04) ----------------------------------------------------
__int64 __fastcall addNodeToRpcBuffer(__int64 a1, __int64 a2, __int64 a3, __int16 a4, int a5, int a6)
{
  __int64 v6; // rbx
  __int64 v7; // rdi
  unsigned __int64 v8; // rsi
  __int64 v9; // rcx
  __int64 result; // rax
  CDnsClientSubnetRecordsTrie *v11; // r10
  int v12; // eax
  CDnsClientSubnetRecordsTrie *v13; // rcx
  int v14; // eax
  int v15; // eax
  __int64 v16; // r8
  _BYTE *v17; // rsi
  _BYTE *v18; // rax
  DWORD LastError; // eax
  unsigned __int64 v20; // rsi
  unsigned __int16 v21; // dx
  __int64 v22; // rsi
  __int64 v23; // r8
  __int64 v24; // rsi
  unsigned int v25; // edi
  void *v26; // rax
  __int64 v27; // rdx
  __int64 v28; // r8
  char v29; // al
  int v30; // ecx
  bool v31; // zf
  __int64 v32; // r8
  bool v33; // zf
  int v34; // eax
  _BYTE *v35; // rsi
  _BYTE *v36; // rax
  _BYTE *v37; // rcx
  char v38; // al
  __int64 v39; // rax
  __int64 *v40; // rax
  int i; // edi
  int v42; // eax
  char *v43; // rax
  int v44; // [rsp+50h] [rbp-B0h] BYREF
  __int16 v45; // [rsp+54h] [rbp-ACh]
  int v46; // [rsp+58h] [rbp-A8h] BYREF
  unsigned int v47; // [rsp+5Ch] [rbp-A4h] BYREF
  __int64 v48; // [rsp+60h] [rbp-A0h]
  __int64 v49; // [rsp+68h] [rbp-98h]
  _BYTE *v50; // [rsp+70h] [rbp-90h]
  unsigned int v51; // [rsp+78h] [rbp-88h]
  __int64 v52; // [rsp+80h] [rbp-80h]
  __int64 *v53; // [rsp+88h] [rbp-78h]
  __int64 v54; // [rsp+90h] [rbp-70h]
  __int64 v55[100]; // [rsp+A0h] [rbp-60h] BYREF

  v6 = *(_QWORD *)(a1 + 32);
  v7 = a3;
  v8 = *(_QWORD *)(a1 + 24);
  v54 = a3;
  v45 = a4;
  v48 = a2;
  v52 = a1;
  v44 = 0;
  v46 = 0;
  if ( a2 )
  {
    v9 = a2;
    if ( *(_QWORD *)(a2 + 328) )
      v9 = *(_QWORD *)(a2 + 328);
    v49 = *(_QWORD *)(v9 + 200);
  }
  else
  {
    v49 = 0i64;
  }
  result = NTree_NodeOrChildHasRecords(a3, 1);
  if ( (_DWORD)result )
  {
    v11 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_sqqDDd(*((_QWORD *)WPP_GLOBAL_Control + 7), 0i64, (__int64)&WPP_GLOBAL_Control, (const char *)(v7 + 102));
      v11 = WPP_GLOBAL_Control;
    }
    if ( v8 - v6 < 0xC )
      goto LABEL_155;
    *(_DWORD *)(v6 + 4) = 0;
    *(_WORD *)(v6 + 2) = 0;
    v12 = *(_DWORD *)(v7 + 84);
    *(_DWORD *)(v6 + 8) = v12;
    if ( !v12 && *(_QWORD *)(v7 + 32) )
    {
      *(_DWORD *)(v6 + 8) = 1;
      v13 = WPP_GLOBAL_Control;
      if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        || (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) == 0
        || *((_BYTE *)WPP_GLOBAL_Control + 65) < 4u )
      {
        goto LABEL_19;
      }
      WPP_SF_qs(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x10u,
        (__int64)&WPP_94ace1326352386894146b7c4d888c88_Traceguids,
        v7,
        v7 + 102);
    }
    v13 = WPP_GLOBAL_Control;
LABEL_19:
    if ( (*(_DWORD *)(v7 + 92) & 0x2010) != 0 || *(_QWORD *)(v7 + 32) )
    {
      if ( v13 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_BYTE *)v13 + 68) & 4) != 0
        && *((_BYTE *)v13 + 65) >= 4u )
      {
        WPP_SF_(*((_QWORD *)v13 + 7), 0x11u, (__int64)&WPP_94ace1326352386894146b7c4d888c88_Traceguids);
      }
      *(_DWORD *)(v6 + 4) |= 0x1000000u;
      if ( (*(_BYTE *)(v7 + 92) & 0x10) != 0 )
      {
        v14 = *(_DWORD *)(v6 + 4) | 0x40000000;
        *(_DWORD *)(v6 + 4) = v14;
        if ( (*(_DWORD *)(v7 + 92) & 0x100) != 0 )
        {
          v15 = v14 | 0x20000000;
        }
        else
        {
          if ( *(_BYTE *)(v7 + 96) != 67 )
            goto LABEL_31;
          v15 = v14 | 0x10000000;
        }
        *(_DWORD *)(v6 + 4) = v15;
      }
    }
LABEL_31:
    v51 = a6 & 0x80000000;
    if ( a6 >= 0 )
    {
      if ( (a6 & 0x40000000) != 0 )
      {
        v18 = Name_PlaceNodeNameInBuffer((_BYTE *)(v6 + 13), v8, (__int64 *)v7, 0i64);
        v50 = v18;
        v17 = v18;
        if ( !v18 )
        {
          SetLastError(0xEAu);
          v50 = 0i64;
LABEL_42:
          LastError = GetLastError();
          v44 = LastError;
          if ( !LastError || LastError == 234 )
            goto LABEL_44;
          goto LABEL_84;
        }
        *(_BYTE *)(v6 + 12) = (_BYTE)v18 - (v6 + 12) - 1;
      }
      else
      {
        v17 = Name_PlaceNodeLabelInRpcBuffer((_BYTE *)(v6 + 12), v8, v7);
        v50 = v17;
      }
    }
    else
    {
      if ( v49 )
        v16 = **(_QWORD **)(v49 + 24);
      else
        v16 = g_Database;
      v17 = Name_PlaceNodeLabelInRpcBuffer((_BYTE *)(v6 + 12), v8, v16);
      v50 = v17;
      *(_DWORD *)(v6 + 4) &= ~0x1000000u;
      *(_DWORD *)(v6 + 8) = 0;
    }
    if ( !v17 )
      goto LABEL_42;
    v20 = (unsigned __int64)(v17 + 3) & 0xFFFFFFFFFFFFFFFCui64;
    v50 = (_BYTE *)v20;
    *(_QWORD *)(v52 + 32) = v20;
    v31 = (*(_DWORD *)(v6 + 4) & 0x1000000) == 0;
    *(_WORD *)v6 = v20 - v6;
    if ( !v31 )
    {
      if ( (a6 & 0xC0000000) == 0 )
      {
        v11 = WPP_GLOBAL_Control;
        if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          || (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) == 0
          || *((_BYTE *)WPP_GLOBAL_Control + 65) < 4u )
        {
          goto LABEL_85;
        }
        v21 = 19;
LABEL_61:
        WPP_SF_(*((_QWORD *)v11 + 7), v21, (__int64)&WPP_94ace1326352386894146b7c4d888c88_Traceguids);
LABEL_84:
        v11 = WPP_GLOBAL_Control;
LABEL_85:
        if ( !*(_WORD *)(v6 + 2) && !*(_DWORD *)(v6 + 8) && (*(_DWORD *)(v6 + 4) & 0x1000000) == 0 && !v51 )
        {
          if ( v11 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_BYTE *)v11 + 68) & 4) != 0
            && *((_BYTE *)v11 + 65) >= 4u )
          {
            WPP_SF_s(
              *((_QWORD *)v11 + 7),
              0x17u,
              (__int64)&WPP_94ace1326352386894146b7c4d888c88_Traceguids,
              (const char *)(v7 + 102));
          }
          *(_QWORD *)(v52 + 32) = v6;
        }
        v25 = v44;
        if ( !v44 )
        {
          *(_DWORD *)(v6 + 4) |= 0x800000u;
          if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
            && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
          {
            v26 = FormatLabelA(*(unsigned __int8 *)(v6 + 12), (const void *)(v6 + 13));
            WPP_SF_dsqq(*((_QWORD *)WPP_GLOBAL_Control + 7), v27, v28, *(unsigned __int16 *)(v6 + 2), (__int64)v26);
          }
        }
        return v25;
      }
      v11 = WPP_GLOBAL_Control;
      if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        || (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) == 0
        || *((_BYTE *)WPP_GLOBAL_Control + 65) < 4u )
      {
        goto LABEL_52;
      }
      WPP_SF_sd(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x12u,
        (__int64)&WPP_94ace1326352386894146b7c4d888c88_Traceguids,
        (const char *)(v7 + 102));
    }
    v11 = WPP_GLOBAL_Control;
LABEL_52:
    if ( !v45 )
    {
      if ( v11 == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        || (*((_BYTE *)v11 + 68) & 4) == 0
        || *((_BYTE *)v11 + 65) < 4u )
      {
        goto LABEL_85;
      }
      v21 = 20;
      goto LABEL_61;
    }
    v44 = -1;
    acquireRead(DbaseLock, 0xFFFFFFFF, (unsigned int *)&v44);
    v44 = 0;
    if ( (*(_BYTE *)(v7 + 92) & 1) != 0 )
    {
      v46 = -1;
      releaseRead(DbaseLock, (unsigned int *)&v46, 1);
      goto LABEL_84;
    }
    v22 = *(_QWORD *)(v7 + 64);
    v49 = v22;
    v47 = 65280;
    if ( !v22 )
    {
LABEL_74:
      if ( v48
        && *(_QWORD *)(v48 + 40) == v7
        && (unsigned int)(*(_DWORD *)(v48 + 372) - 2) <= 1
        && (*(_BYTE *)(v48 + 396) & 8) != 0
        && (v45 == 255 || (v45 & 0xFFFC) == 0xFF00) )
      {
        v23 = *(_QWORD *)(v48 + 344);
        if ( v23 )
        {
          v44 = Flat_WriteRecordToBuffer(v52, v6, v23, v7, a5);
          if ( v44 == 234 || !v50 )
          {
LABEL_127:
            v47 = -1;
            releaseRead(DbaseLock, &v47, 1);
LABEL_44:
            v11 = WPP_GLOBAL_Control;
LABEL_155:
            if ( v11 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
              && (*((_BYTE *)v11 + 68) & 4) != 0
              && *((_BYTE *)v11 + 65) >= 4u )
            {
              WPP_SF_qs(
                *((_QWORD *)v11 + 7),
                0x1Au,
                (__int64)&WPP_94ace1326352386894146b7c4d888c88_Traceguids,
                v6,
                v7 + 102);
            }
            return 234i64;
          }
        }
      }
      v47 = -1;
      releaseRead(DbaseLock, &v47, 1);
      v24 = 0i64;
      if ( v46 > 0 )
      {
        do
        {
          for ( i = 0; i < 2; ++i )
          {
            v42 = addNodeToRpcBuffer(v52, v48, v55[v24], i != 0 ? 28 : 1, a5, 0x40000000);
            v44 = v42;
            if ( v42 )
            {
              v11 = WPP_GLOBAL_Control;
              if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
                && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
              {
                v43 = Dbg_NodeName(v55[v24]);
                WPP_SF_Ds(
                  *((_QWORD *)WPP_GLOBAL_Control + 7),
                  0x16u,
                  (__int64)&WPP_94ace1326352386894146b7c4d888c88_Traceguids,
                  v44,
                  (__int64)v43);
                v11 = WPP_GLOBAL_Control;
                v42 = v44;
              }
              if ( v42 == 234 )
              {
                v7 = v54;
                goto LABEL_155;
              }
            }
            else
            {
              v11 = WPP_GLOBAL_Control;
            }
          }
          ++v24;
        }
        while ( v24 < v46 );
        v7 = v54;
        goto LABEL_85;
      }
      goto LABEL_84;
    }
    v53 = v55;
    while ( 1 )
    {
      if ( *(_BYTE *)(v7 + 96) == 67 && !v51 && *(_WORD *)(v22 + 12) != 2 )
      {
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
        {
          WPP_SF_s(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            0x15u,
            (__int64)&WPP_94ace1326352386894146b7c4d888c88_Traceguids,
            (const char *)(v7 + 102));
        }
        goto LABEL_73;
      }
      if ( *(char *)(v22 + 10) >= 0 && (v45 == 255 || v45 == *(_WORD *)(v22 + 12)) )
        break;
LABEL_73:
      v22 = *(_QWORD *)v22;
      v49 = v22;
      if ( !v22 )
        goto LABEL_74;
    }
    v29 = *(_BYTE *)(v22 + 8);
    if ( v29 == -16 )
    {
      v30 = a5;
      v31 = (a5 & 1) == 0;
LABEL_121:
      if ( v31 )
        goto LABEL_73;
      goto LABEL_122;
    }
    if ( (v29 & 1) != 0 )
    {
      v30 = a5;
      if ( (a5 & 2) != 0 )
      {
LABEL_122:
        v32 = v48;
        goto LABEL_123;
      }
      v32 = v48;
      if ( !v48 || *(_DWORD *)(v48 + 372) != 1 )
        goto LABEL_73;
      v33 = (*(_BYTE *)(v48 + 1040) & 4) == 0;
    }
    else
    {
      if ( v29 != -126 )
      {
        if ( v29 == (char)0x80 )
        {
          v30 = a5;
          v31 = (a5 & 4) == 0;
        }
        else
        {
          if ( v29 != 8 )
            goto LABEL_73;
          v30 = a5;
          v31 = (a5 & 8) == 0;
        }
        goto LABEL_121;
      }
      v30 = a5;
      v32 = v48;
      if ( (a5 & 4) != 0 )
      {
LABEL_123:
        if ( (*(_WORD *)(v22 + 12) & 0xFFFC) != (_WORD)v47 || *(_QWORD *)(v32 + 344) == v22 )
        {
          v34 = Flat_WriteRecordToBuffer(v52, v6, v22, v7, v30);
          v44 = v34;
          if ( v34 )
          {
            if ( v34 == 234 )
              goto LABEL_127;
          }
          else if ( (a5 & 0x10) != 0 && *(_WORD *)(v22 + 12) == 2 && v46 < 100 )
          {
            v35 = 0i64;
            v36 = Lookup_ZoneNode(v48, (unsigned __int8 *)(v49 + 58), 0i64, 0i64, 17, 0i64, 0i64, 0i64);
            v37 = v36;
            if ( v36 )
            {
              if ( v48 != g_pCacheZone )
              {
                v38 = v36[96];
                if ( v38 != -14 && ((v38 & 1) == 0 || (*(_DWORD *)(v7 + 92) & 0x100) != 0) )
                {
                  v35 = v37;
                  v37 = 0i64;
                }
              }
              if ( v37 )
                goto LABEL_143;
            }
            if ( v48 != g_pCacheZone )
            {
              v39 = Lookup_NsHostNode(v49 + 56, -2147352572, v48, 0i64, 0i64, dword_1401B9714, 0i64, 0i64);
              v37 = (_BYTE *)v39;
              if ( !v39 || *(_BYTE *)(v39 + 96) != 0xF2 )
                v37 = v35;
            }
            if ( v37 )
            {
LABEL_143:
              v22 = v49;
              if ( (unsigned __int64)v46 < 0x64 )
              {
                v40 = v53;
                ++v46;
                *v53 = (__int64)v37;
                v53 = v40 + 1;
              }
            }
            else
            {
              v22 = v49;
            }
          }
        }
        goto LABEL_73;
      }
      if ( !v48 || v7 == *(_QWORD *)(v48 + 40) )
        goto LABEL_73;
      v33 = (a5 & 1) == 0;
    }
    if ( v33 )
      goto LABEL_73;
    goto LABEL_123;
  }
  return result;
}
// 140095506: variable 'v27' is possibly undefined
// 140095506: variable 'v28' is possibly undefined
// 1401B9714: using guessed type int dword_1401B9714;
// 1401EC5E8: using guessed type __int64 DbaseLock;
// 1401EC600: using guessed type __int64 g_Database;
// 1401EC628: using guessed type __int64 g_pCacheZone;
// 140094F04: using guessed type __int64 var_340[100];
