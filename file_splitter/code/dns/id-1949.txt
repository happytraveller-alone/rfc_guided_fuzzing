//----- (00000001400EE464) ----------------------------------------------------
__int64 __fastcall DnsOls_CompleteZoneSign(struct _zone_info *a1, int a2)
{
  __int64 v3; // rdi
  _DWORD *v4; // r14
  BOOL v5; // r12d
  int v6; // r13d
  int v7; // eax
  __int64 v8; // rsi
  const char *v9; // r9
  struct _zone_info *v10; // rbx
  unsigned __int16 *v11; // r14
  __int64 v12; // rdx
  const unsigned __int16 *v13; // r9
  unsigned __int16 *v14; // rax
  bool v15; // zf
  const unsigned __int16 *v16; // r9
  int v17; // eax
  __int64 v18; // rdx
  const unsigned __int16 *v19; // r9
  const unsigned __int16 *v20; // r9
  const wchar_t *v21; // rax
  unsigned __int16 **v22; // r9
  __int128 v23; // xmm0
  const wchar_t *v24; // rcx
  __int16 *v25; // rax
  unsigned __int16 *v26; // rax
  unsigned __int16 *v27; // rcx
  __int64 v28; // rsi
  __int64 v29; // rcx
  __int64 NextElement_ScopeMap; // rax
  const unsigned __int16 *v31; // r9
  struct _zone_info *v32; // rcx
  struct _zone_info *v33; // rax
  const wchar_t *v34; // rcx
  __int128 v35; // xmm0
  struct _zone_info *v36; // rax
  const unsigned __int16 *v37; // r8
  const wchar_t *v38; // rcx
  const char *v39; // r9
  int v41; // [rsp+40h] [rbp-59h] BYREF
  __int16 v42; // [rsp+44h] [rbp-55h] BYREF
  __int16 v43; // [rsp+48h] [rbp-51h] BYREF
  __int16 v44; // [rsp+4Ch] [rbp-4Dh] BYREF
  unsigned int v45; // [rsp+50h] [rbp-49h] BYREF
  unsigned int v46; // [rsp+54h] [rbp-45h] BYREF
  int v47; // [rsp+58h] [rbp-41h] BYREF
  __int128 v48; // [rsp+60h] [rbp-39h] BYREF
  __int64 v49; // [rsp+70h] [rbp-29h]
  unsigned __int16 *v50[2]; // [rsp+78h] [rbp-21h] BYREF
  __int64 v51[2]; // [rsp+88h] [rbp-11h] BYREF
  unsigned __int16 *v52; // [rsp+98h] [rbp-1h] BYREF
  const unsigned __int16 *v53; // [rsp+A0h] [rbp+7h]
  __int64 v54; // [rsp+A8h] [rbp+Fh]
  const wchar_t *v55; // [rsp+B0h] [rbp+17h]

  v41 = a2;
  v45 = 0;
  LODWORD(v3) = 0;
  v4 = (_DWORD *)((char *)a1 + 1040);
  v46 = 0;
  v5 = (a2 & 0x4000) == 0;
  v6 = (*((_DWORD *)a1 + 260) >> 2) & 1;
  v7 = a2;
  LODWORD(v8) = *((_QWORD *)a1 + 24) != 0i64;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    v9 = "Unsigning";
    if ( (a2 & 0x4000) == 0 )
      v9 = "Signing";
    WPP_SF_ss(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x5Du,
      (__int64)&WPP_4a0a7bf065bf32df4bbeec8f9c7ea0c3_Traceguids,
      v9,
      *((_QWORD *)a1 + 2));
    v7 = v41;
  }
  v10 = a1;
  if ( (*v4 & 0xC000) != 0 )
    v41 = v7 | 0x40;
  v8 = (int)v8;
  v11 = L"Default";
  v49 = (int)v8;
  while ( g_fDnsServiceExit != 1 && (unsigned int)Thread_ServiceCheck(1) )
  {
    if ( v10 )
    {
      if ( *((_QWORD *)v10 + 24) )
      {
        Zone_LockForWriteEx((__int64)v10, 1, 0xFFFFFFFF, (__int64)"ds\\dns\\server\\server\\olscore.cpp", 52);
        if ( !v8 )
        {
          DnsOls_SyncZoneScopeForSigning((__int64)v10, (__int64)a1 + 1040);
          if ( dwMilliseconds )
            Sleep(dwMilliseconds);
          if ( dword_1401B9A1C )
          {
            LODWORD(v3) = cfg_CheckSpecialScopeAndFail(dword_1401B9A1C, *((const wchar_t **)v10 + 24));
            if ( (_DWORD)v3 )
            {
              Zone_UnlockAfterWriteEx((__int64)v10, 1, (__int64)"ds\\dns\\server\\server\\olscore.cpp", 78);
              goto LABEL_108;
            }
          }
        }
      }
    }
    if ( v5 )
    {
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        if ( !v10 || (v13 = (const unsigned __int16 *)*((_QWORD *)v10 + 24)) == 0i64 )
          v13 = L"Default";
        WPP_SF_Ss(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0x5Fu,
          (__int64)&WPP_4a0a7bf065bf32df4bbeec8f9c7ea0c3_Traceguids,
          v13,
          *((_QWORD *)v10 + 2));
      }
      Zone_IncrementVersion((__int64)v10, 0i64);
    }
    v42 = 257;
    if ( !v10 || (v14 = (unsigned __int16 *)*((_QWORD *)v10 + 24)) == 0i64 )
      v14 = L"Default";
    v15 = *((_QWORD *)v10 + 24) == 0i64;
    v50[0] = v14;
    v50[1] = *((unsigned __int16 **)v10 + 3);
    if ( v15 && !v5 && (dword_1401B9144 & 0x20) != 0 )
      Template_zs(
        Microsoft_Windows_DNS_Server_ServiceHandle,
        &DNS_EVENT_ZONE_UNSIGN_STARTED,
        *((const unsigned __int16 **)a1 + 3),
        Str);
    v48 = DNS_EVENT_DNSSEC_ZONESCOPE_SIGNING_STARTED;
    Eventlog_LogEvent((__int64)&v48, v12, 2u, v50, (unsigned __int8 *)&v42, v3, 0, 0i64);
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      v16 = L"Default";
      if ( *((_QWORD *)a1 + 24) )
        v16 = (const unsigned __int16 *)*((_QWORD *)a1 + 24);
      WPP_SF_Ssd(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x60u,
        (__int64)&WPP_4a0a7bf065bf32df4bbeec8f9c7ea0c3_Traceguids,
        v16,
        *((_QWORD *)v10 + 2));
    }
    v17 = DnsOls_SignZone(v10, 0i64, 255i64, v41, 0i64);
    v3 = v17;
    v47 = v17;
    if ( !v17 )
    {
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        v19 = L"Default";
        if ( *((_QWORD *)a1 + 24) )
          v19 = (const unsigned __int16 *)*((_QWORD *)a1 + 24);
        WPP_SF_Ss(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0x61u,
          (__int64)&WPP_4a0a7bf065bf32df4bbeec8f9c7ea0c3_Traceguids,
          v19,
          *((_QWORD *)v10 + 2));
      }
      *((_DWORD *)v10 + 260) &= ~4u;
      *((_DWORD *)v10 + 260) |= 4 * v5;
      if ( v5 )
      {
        v26 = (unsigned __int16 *)*((_QWORD *)v10 + 24);
        v22 = &v52;
        v23 = DNS_EVENT_DNSSEC_ZONESCOPE_IS_SIGNED;
        v44 = 257;
        v27 = L"Default";
        if ( v26 )
          v27 = v26;
        v53 = (const unsigned __int16 *)*((_QWORD *)v10 + 3);
        v25 = &v44;
        v52 = v27;
      }
      else
      {
        *((_DWORD *)v10 + 99) &= 0xFFFFFFCF;
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
        {
          v20 = L"Default";
          if ( *((_QWORD *)v10 + 24) )
            v20 = (const unsigned __int16 *)*((_QWORD *)v10 + 24);
          WPP_SF_Ss(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            0x62u,
            (__int64)&WPP_4a0a7bf065bf32df4bbeec8f9c7ea0c3_Traceguids,
            v20,
            *((_QWORD *)v10 + 2));
        }
        Zone_IncrementVersion((__int64)v10, 0i64);
        v21 = (const wchar_t *)*((_QWORD *)v10 + 24);
        v22 = (unsigned __int16 **)v51;
        v23 = DNS_EVENT_DNSSEC_ZONESCOPE_IS_UNSIGNED;
        v43 = 257;
        v24 = L"Default";
        if ( v21 )
          v24 = v21;
        v51[1] = *((_QWORD *)v10 + 3);
        v25 = &v43;
        v51[0] = (__int64)v24;
      }
      v48 = v23;
      Eventlog_LogEvent((__int64)&v48, v18, 2u, v22, (unsigned __int8 *)v25, 0, 0, 0i64);
      Zone_WriteBack((__int64)v10, 0, 0);
    }
    if ( *((_QWORD *)v10 + 24) )
      Zone_UnlockAfterWriteEx((__int64)v10, 1, (__int64)"ds\\dns\\server\\server\\olscore.cpp", 212);
    if ( (_DWORD)v3 )
    {
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        v31 = L"Default";
        if ( *((_QWORD *)a1 + 24) )
          v31 = (const unsigned __int16 *)*((_QWORD *)a1 + 24);
        WPP_SF_Ssd(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0x63u,
          (__int64)&WPP_4a0a7bf065bf32df4bbeec8f9c7ea0c3_Traceguids,
          v31,
          *((_QWORD *)v10 + 2));
      }
      v32 = (struct _zone_info *)*((_QWORD *)v10 + 41);
      v41 = 17039617;
      v54 = v3;
      if ( v5 )
      {
        if ( *((_QWORD *)v10 + 24) )
          v11 = (unsigned __int16 *)*((_QWORD *)v10 + 24);
        v53 = (const unsigned __int16 *)*((_QWORD *)v10 + 3);
        v33 = v10;
        v52 = v11;
        if ( v32 )
          v33 = v32;
        if ( *((_QWORD *)v33 + 25) )
        {
          if ( v32 )
            v10 = v32;
          v34 = (const wchar_t *)**((_QWORD **)v10 + 25);
        }
        else
        {
          v34 = L".";
        }
        v35 = DNS_EVENT_DNSSEC_ZONESCOPE_SIGNING_FAILED;
        v55 = v34;
      }
      else
      {
        v18 = *((_QWORD *)v10 + 24);
        v36 = v10;
        v37 = (const unsigned __int16 *)*((_QWORD *)v10 + 3);
        v53 = v37;
        if ( v18 )
          v11 = (unsigned __int16 *)v18;
        v52 = v11;
        if ( v32 )
          v36 = v32;
        if ( *((_QWORD *)v36 + 25) )
        {
          if ( v32 )
            v10 = v32;
          v38 = (const wchar_t *)**((_QWORD **)v10 + 25);
        }
        else
        {
          v38 = L".";
        }
        v55 = v38;
        if ( !v18 && (dword_1401B9144 & 0x80u) != 0 )
          Template_zq((__int64)v38, 0i64, v37, v3);
        v35 = DNS_EVENT_DNSSEC_ZONESCOPE_UNSIGNING_FAILED;
      }
      v48 = v35;
      Eventlog_LogEvent((__int64)&v48, v18, 4u, &v52, (unsigned __int8 *)&v41, v3, 0, 0i64);
      goto LABEL_108;
    }
    v28 = *((_QWORD *)v10 + 24);
    if ( !v28 )
    {
      if ( !*((_QWORD *)v10 + 23) )
        goto LABEL_108;
      v29 = *((_QWORD *)v10 + 21);
      v46 = -1;
      acquireRead(v29, 0xFFFFFFFF, &v46);
      v45 = 1;
      Zone_UnlockAfterWriteEx((__int64)v10, 1, (__int64)"ds\\dns\\server\\server\\olscore.cpp", 43);
      v41 &= 0xFFFFFEF8;
      v46 = 1;
    }
    if ( v49 )
      goto LABEL_108;
    NextElement_ScopeMap = Get_NextElement_ScopeMap(*((_QWORD *)a1 + 20), v28, &v47);
    LODWORD(v3) = v47;
    v10 = (struct _zone_info *)NextElement_ScopeMap;
    if ( !NextElement_ScopeMap )
      goto LABEL_108;
    v8 = v49;
  }
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x5Eu, (__int64)&WPP_4a0a7bf065bf32df4bbeec8f9c7ea0c3_Traceguids);
  }
LABEL_108:
  if ( v45 )
  {
    v45 = -1;
    releaseRead(*((_QWORD *)a1 + 21), &v45, 1);
  }
  if ( v46 )
    Zone_LockForWriteEx((__int64)a1, 1, 0xFFFFFFFF, (__int64)"ds\\dns\\server\\server\\olscore.cpp", 69);
  if ( (_DWORD)v3 )
  {
    *((_DWORD *)a1 + 260) &= ~4u;
    *((_DWORD *)a1 + 260) |= 4 * (v6 & 1);
  }
  if ( !*((_QWORD *)a1 + 24)
    && WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    v39 = "Completed";
    if ( (_DWORD)v3 )
      v39 = "Failed";
    WPP_SF_ss(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x64u,
      (__int64)&WPP_4a0a7bf065bf32df4bbeec8f9c7ea0c3_Traceguids,
      v39,
      *((_QWORD *)a1 + 2));
  }
  return (unsigned int)v3;
}
// 1400EE6C9: variable 'v12' is possibly undefined
// 1400EE88C: variable 'v18' is possibly undefined
// 140186D80: using guessed type __int128 DNS_EVENT_DNSSEC_ZONESCOPE_SIGNING_STARTED;
// 140186E90: using guessed type __int128 DNS_EVENT_DNSSEC_ZONESCOPE_IS_UNSIGNED;
// 140187200: using guessed type __int128 DNS_EVENT_DNSSEC_ZONESCOPE_SIGNING_FAILED;
// 140187350: using guessed type __int128 DNS_EVENT_DNSSEC_ZONESCOPE_IS_SIGNED;
// 140187978: using guessed type __int128 DNS_EVENT_DNSSEC_ZONESCOPE_UNSIGNING_FAILED;
// 140188260: using guessed type wchar_t aDefault_1[8];
// 1401B9144: using guessed type int dword_1401B9144;
// 1401B9A1C: using guessed type int dword_1401B9A1C;
// 1401B9A40: using guessed type int g_fDnsServiceExit;
