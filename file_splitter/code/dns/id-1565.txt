//----- (00000001400C64E0) ----------------------------------------------------
__int64 __fastcall buildLocalHostRecords(__int64 a1, __int64 a2, unsigned __int16 a3, int a4, _DWORD *a5)
{
  __int64 v5; // rbx
  int v6; // r10d
  int v7; // r12d
  __int64 v10; // r9
  __int64 v11; // rsi
  __int64 v13; // rax
  unsigned int v14; // r14d
  unsigned __int64 v15; // rbp
  int v16; // ecx
  _BYTE *ARecord; // rax
  __int64 v18; // rdi
  __int64 v21; // [rsp+40h] [rbp-B8h] BYREF
  __int64 *v22; // [rsp+48h] [rbp-B0h]
  char v23[80]; // [rsp+50h] [rbp-A8h] BYREF

  v5 = 0i64;
  v6 = a4;
  v7 = 0;
  v10 = a1;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x10) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x97u, (__int64)&WPP_e9a0d5dea449334d7c383477da81f939_Traceguids);
    v10 = a1;
    v6 = a4;
  }
  if ( a5 )
    *a5 = 0;
  v11 = qword_1401B97A8;
  if ( (qword_1401B97A8 || (v11 = g_BoundAddrs) != 0) && *(_DWORD *)(v11 + 4) )
  {
    v21 = 0i64;
    v22 = &v21;
    v13 = 0i64;
    v14 = 0;
    if ( *(_DWORD *)(v11 + 4) )
    {
      while ( 1 )
      {
        v15 = v11 + ((unsigned __int64)v14 << 6);
        if ( a3 == 1 )
        {
          if ( *(_WORD *)(v15 + 32) != 2 )
            goto LABEL_36;
          v16 = *(_DWORD *)(v15 + 36);
          if ( !dword_1401B9898 && (_WORD)v16 == 0xFEA9 )
            goto LABEL_36;
          ++v7;
          ARecord = RR_CreateARecord(v16, v6, 0x21u);
        }
        else
        {
          if ( a3 != 28
            || *(_WORD *)(v15 + 32) != 23
            || v15 == -40i64
            || *(_BYTE *)(v15 + 40) == 0xFE && (*(_BYTE *)(v15 + 41) & 0xC0) == 0x80 )
          {
            goto LABEL_36;
          }
          ++v7;
          ARecord = RR_CreateAAAARecord(v15 + 32, v6);
        }
        v18 = (__int64)ARecord;
        if ( ARecord )
        {
          *((_WORD *)ARecord + 5) |= 0x40u;
          v10 = a1;
          if ( !a1 || !a2 )
          {
            *v22 = (__int64)ARecord;
            v22 = (__int64 *)ARecord;
            goto LABEL_36;
          }
          if ( (unsigned int)RR_AddToNode(a1, a2, (__int64)ARecord) )
            RR_Free(v18);
        }
        else
        {
          DnsAddr_WriteIpString_A(v23, (char *)(v15 + 32));
          if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x10) != 0
            && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
          {
            WPP_SF_s(
              *((_QWORD *)WPP_GLOBAL_Control + 7),
              0x98u,
              (__int64)&WPP_e9a0d5dea449334d7c383477da81f939_Traceguids,
              v23);
          }
        }
        v10 = a1;
LABEL_36:
        v6 = a4;
        if ( ++v14 >= *(_DWORD *)(v11 + 4) )
        {
          v13 = v21;
          break;
        }
      }
    }
    if ( !v10 || !a2 )
      return v13;
    if ( !v7 )
      RR_ListDeleteTypeNotInList(a2, a3, 0, 0i64, 0);
    return v5;
  }
  else
  {
    if ( a5 )
      *a5 = 9552;
    return 0i64;
  }
}
// 1401B97A8: using guessed type __int64 qword_1401B97A8;
// 1401B9898: using guessed type int dword_1401B9898;
