//----- (00000001401230E0) ----------------------------------------------------
__int64 __fastcall NsecUnknownFileRead(__int64 a1, unsigned int a2, __int64 a3, __int64 a4)
{
  unsigned int v4; // edi
  int v8; // esi
  unsigned int v10; // ebx
  _DWORD *v11; // rax
  __int64 v12; // rcx
  __int64 v13; // r14
  unsigned __int8 *v14; // rax
  unsigned __int8 *v15; // rsi
  unsigned __int64 v16; // r15
  unsigned int v17; // ebp
  unsigned __int8 *v18; // rax
  unsigned __int8 *v19; // r14
  int v20; // eax
  unsigned int v21; // ebp
  unsigned int v22; // eax
  unsigned int v23; // ecx
  _BYTE *v24; // rax
  _BYTE *v25; // r15
  unsigned int v26[4]; // [rsp+30h] [rbp-168h] BYREF
  unsigned __int8 v27[272]; // [rsp+40h] [rbp-158h] BYREF

  v4 = 0;
  v26[0] = 0;
  v8 = 0;
  if ( a2 < 3 )
    return 3222394115i64;
  if ( !(unsigned int)File_ParseDwordToken(v26, a3 + 16, 0i64) )
    return (unsigned int)-1072573183;
  v10 = a2 - 2;
  if ( v10 )
  {
    v11 = (_DWORD *)(a3 + 40);
    v12 = v10;
    do
    {
      v8 += *v11;
      v11 += 4;
      --v12;
    }
    while ( v12 );
  }
  v13 = v26[0];
  if ( v8 == 2 * v26[0] )
  {
    v14 = (unsigned __int8 *)Mem_Alloc(v26[0], 0i64, "ds\\dns\\server\\dnscore\\rrfile.c", 6068);
    v15 = v14;
    if ( v14 )
    {
      v16 = (unsigned __int64)&v14[v13];
      if ( v10
        && !(unsigned int)buildByteBufferFromHexStringTokens(v14, v26, v10, a3 + 32, (unsigned __int64)&v14[v13])
        && (v17 = v26[0], v26[0] == (_DWORD)v13)
        && (unsigned __int64)v15 < v16
        && (v18 = Name_PacketNameToCountNameForUnknown(v27, v16, v15), (v19 = v18) != 0i64)
        && v18 >= v15
        && v18 - v15 <= 0xFFFFFFFFi64
        && (v20 = (_DWORD)v18 - (_DWORD)v15, v17 >= (int)v19 - (int)v15)
        && (v21 = v17 - v20, v22 = v27[0] + 2, v23 = v22 + v21, v22 + v21 >= v22)
        && v23 <= 0xFFFF )
      {
        v24 = RR_AllocateEx(v23, 0, 0);
        v25 = v24;
        if ( v24 )
        {
          *(_QWORD *)(a4 + 800) = v24;
          Name_CopyCountName(v24 + 56, v27);
          memcpy_0(&v25[(unsigned __int8)v25[56] + 58], v19, v21);
        }
        else
        {
          v4 = 14;
        }
      }
      else
      {
        v4 = -1072573183;
      }
      Mem_Free(v15, 0i64, 0i64, (__int64)"ds\\dns\\server\\dnscore\\rrfile.c", 6156);
    }
    else
    {
      return 14;
    }
  }
  else
  {
    return (unsigned int)-1072573183;
  }
  return v4;
}
