//----- (000000014013EE40) ----------------------------------------------------
void __fastcall Add_CDNSPolicyToPolicyMap(__int64 a1, __int64 a2, int a3)
{
  char *v3; // rbx
  _QWORD *v4; // rax
  _QWORD *v5; // r10
  _QWORD *v6; // rdx
  _QWORD *v7; // r9
  bool v8; // r8
  __int64 *v9; // rcx
  unsigned __int64 v10; // rax
  _QWORD *v11; // rax
  __int64 v12; // rcx
  __int64 i; // rcx
  __int64 v14[3]; // [rsp+30h] [rbp-18h] BYREF
  __int64 v15; // [rsp+50h] [rbp+8h] BYREF

  v14[0] = a2;
  v14[1] = a1;
  v3 = (char *)&g_ServiceStartTempPolicyMap + 32 * a3;
  v4 = std::_Tree_val<std::_Tmap_traits<unsigned short *,_virtualization_info_ *,bool (*)(unsigned short *,unsigned short *),std::allocator<std::pair<unsigned short * const,_virtualization_info_ *>>,0>>::_Buynode<std::pair<unsigned short *,_virtualization_info_ *>>(
         (__int64)v3,
         v14);
  v5 = (_QWORD *)*((_QWORD *)v3 + 1);
  v6 = v4;
  v7 = v5;
  v8 = 1;
  v9 = (__int64 *)v5[1];
  if ( !*((_BYTE *)v9 + 41) )
  {
    v10 = v4[3];
    do
    {
      v7 = v9;
      v8 = v10 < v9[3];
      if ( v10 >= v9[3] )
        v9 = (__int64 *)v9[2];
      else
        v9 = (__int64 *)*v9;
    }
    while ( !*((_BYTE *)v9 + 41) );
  }
  v11 = v7;
  if ( v8 )
  {
    if ( v7 == (_QWORD *)*v5 )
    {
      v8 = 1;
LABEL_10:
      std::_Tree<std::_Tmap_traits<_lookup_name *,_DnsTreeNode *,DnsSign::CLookupNameCompare,std::allocator<std::pair<_lookup_name * const,_DnsTreeNode *>>,0>>::_Insert(
        (__int64)v3,
        &v15,
        v8,
        v7,
        v6);
      return;
    }
    if ( *((_BYTE *)v7 + 41) )
    {
      v11 = (_QWORD *)v7[2];
    }
    else
    {
      v12 = *v7;
      if ( *(_BYTE *)(*v7 + 41i64) )
      {
        for ( i = v7[1]; !*(_BYTE *)(i + 41) && v11 == *(_QWORD **)i; i = *(_QWORD *)(i + 8) )
          v11 = (_QWORD *)i;
        if ( !*((_BYTE *)v11 + 41) )
          v11 = (_QWORD *)i;
      }
      else
      {
        do
        {
          v11 = (_QWORD *)v12;
          v12 = *(_QWORD *)(v12 + 16);
        }
        while ( !*(_BYTE *)(v12 + 41) );
      }
    }
  }
  if ( v11[3] < v6[3] )
    goto LABEL_10;
  operator delete(v6);
}
// 140184CA8: using guessed type void __stdcall operator delete(void *);
