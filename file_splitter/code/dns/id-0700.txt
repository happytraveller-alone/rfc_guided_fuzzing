//----- (0000000140062770) ----------------------------------------------------
void __fastcall Name_NodeToCountName(unsigned __int8 *a1, __int64 *a2, int a3)
{
  size_t v3; // r9
  unsigned __int8 v4; // r14
  unsigned __int8 *v5; // rax
  unsigned __int8 *v6; // r15
  __int64 *v8; // rdi
  unsigned __int8 *i; // rbx
  char *v11; // rbx
  char *v12; // rdx
  size_t v13; // rbp
  const char *v14; // rbx
  char *v15; // rax

  v3 = *((unsigned __int8 *)a2 + 101);
  v4 = 0;
  v5 = &a1[v3 + 3];
  v6 = a1 + 258;
  v8 = a2;
  for ( i = a1 + 2; ; v5 = &i[v3 + 1] )
  {
    v13 = v3;
    if ( v5 > v6 )
    {
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x40000) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
      {
        WPP_SF_Dqq(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0xAu,
          (__int64)&WPP_7966accab5e33f0669cbfec5669d513c_Traceguids,
          (unsigned __int8)v3);
      }
      Dbg_HardAssert("ds\\dns\\server\\server\\name.c", 0x5Du, "FALSE");
      return;
    }
    *i = v3;
    v11 = (char *)(i + 1);
    if ( !(_BYTE)v3 )
      break;
    if ( a3 )
      v12 = (char *)v8 + *((unsigned __int8 *)v8 + 101) + 103;
    else
      v12 = (char *)v8 + 102;
    memcpy_0(v11, v12, v3);
    v8 = (__int64 *)*v8;
    i = (unsigned __int8 *)&v11[v13];
    ++v4;
    v3 = *((unsigned __int8 *)v8 + 101);
  }
  a1[1] = v4;
  *a1 = (_BYTE)v11 - (_BYTE)a1 - 2;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x800) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
  {
    v14 = (const char *)FormatLabelA(*((unsigned __int8 *)v8 + 101), (char *)v8 + 102);
    v15 = Dbg_CountName(a1);
    WPP_SF_ss(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0xBu,
      (__int64)&WPP_7966accab5e33f0669cbfec5669d513c_Traceguids,
      v14,
      (__int64)v15);
  }
}
