//----- (0000000140132980) ----------------------------------------------------
__int64 __fastcall CDnsPolicy_QTypeCriteriaTree::RemoveCriteriaNode(
        CDnsPolicy_QTypeCriteriaTree *this,
        __int16 a2,
        struct CDnsPolicy_CriteriaNode *a3,
        __int64 a4)
{
  unsigned int v7; // edi
  __int64 *v8; // rbx
  int v9; // ebx
  CDnsPolicy_CriteriaNode *v10; // rsi
  int v12; // [rsp+20h] [rbp-28h]
  DWORD LastError; // [rsp+28h] [rbp-20h]
  __int64 *v14; // [rsp+50h] [rbp+8h] BYREF
  __int16 v15; // [rsp+58h] [rbp+10h] BYREF

  v15 = a2;
  v7 = 0;
  std::_Tree<std::_Tmap_traits<unsigned long,CDnsPolicy_CriteriaNode *,bool (*)(unsigned long const &,unsigned long const &),std::allocator<std::pair<unsigned long const,CDnsPolicy_CriteriaNode *>>,0>>::find(
    *((_QWORD *)this + 1),
    &v14,
    (__int64)&v15);
  v8 = v14;
  if ( v14 != *(__int64 **)(*((_QWORD *)this + 1) + 8i64) )
  {
    LODWORD(v14) = -1;
    if ( (unsigned int)acquireWrite(a4, 0x2710u, (unsigned int *)&v14) == -1 )
    {
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400000) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
      {
        v9 = *((unsigned __int16 *)a3 + 24);
        LastError = GetLastError();
        v12 = v9;
        WPP_SF_qdD(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0x32u,
          (__int64)&WPP_bbbcc621566c3408fe84d6a85874d543_Traceguids,
          a3,
          v12,
          LastError);
      }
    }
    else
    {
      v10 = (CDnsPolicy_CriteriaNode *)v8[4];
      std::_Tree<std::_Tmap_traits<unsigned long,CDnsPolicy_CriteriaNode *,bool (*)(unsigned long const &,unsigned long const &),std::allocator<std::pair<unsigned long const,CDnsPolicy_CriteriaNode *>>,0>>::erase(
        *((_QWORD *)this + 1),
        (__int64 *)&v14,
        v8);
      if ( v10 )
        CDnsPolicy_CriteriaNode::`scalar deleting destructor'(v10);
      v7 = 1;
      Lock_ReleaseWrite(a4);
    }
  }
  return v7;
}
