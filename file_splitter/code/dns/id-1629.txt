//----- (00000001400CE794) ----------------------------------------------------
__int64 __fastcall buildZoneNsList(__int64 a1, __int64 a2, __int64 a3, int a4)
{
  int v5; // r14d
  unsigned int v6; // esi
  int v7; // r12d
  CDnsClientSubnetRecordsTrie *v8; // rcx
  unsigned int *v9; // rbx
  __int64 v10; // rbp
  __int64 NextRecord; // rax
  __int64 v12; // r13
  CDnsClientSubnetRecordsTrie *v13; // rcx
  unsigned int i; // r14d
  __int64 v15; // rbp
  __int64 v16; // r8
  __int64 v17; // r8
  int v18; // r9d
  unsigned int *v19; // rax
  unsigned int v20; // edx
  __int64 v21; // rax
  __int64 v23; // [rsp+20h] [rbp-A8h]
  __int64 v24; // [rsp+28h] [rbp-A0h]
  struct in_addr v25[30]; // [rsp+50h] [rbp-78h] BYREF
  int v26; // [rsp+D8h] [rbp+10h]
  __int64 v27; // [rsp+E0h] [rbp+18h]

  v5 = 0;
  v6 = 0;
  v7 = 0;
  v8 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x40) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_Sdq(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x51u,
      (__int64)&WPP_4e7c1fc42723374814672f05b7ca7028_Traceguids,
      *(const unsigned __int16 **)(a1 + 24));
    v8 = WPP_GLOBAL_Control;
  }
  if ( (unsigned int)(*(_DWORD *)(a1 + 372) - 3) <= 1 )
    goto LABEL_52;
  v9 = DnsAddrArray_Create(0xAu, a2, a3, a4);
  if ( !v9 )
  {
    v6 = 14;
    goto LABEL_51;
  }
  v10 = 0i64;
  do
  {
    NextRecord = RR_FindNextRecordEx(*(_QWORD *)(a1 + 40), 0, 2u, v10, 0, 0);
    v27 = NextRecord;
    v10 = NextRecord;
    if ( !NextRecord )
    {
      v13 = WPP_GLOBAL_Control;
      break;
    }
    v26 = ++v5;
    v12 = Lookup_NsHostNode(NextRecord + 56, 0x4000, a1, 0i64, 0i64, 0, 0i64, a1);
    if ( !v12 )
    {
      v13 = WPP_GLOBAL_Control;
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x52u, (__int64)&WPP_4e7c1fc42723374814672f05b7ca7028_Traceguids);
        goto LABEL_30;
      }
      continue;
    }
    for ( i = 0; i < 2; ++i )
    {
      v15 = RR_FindNextRecordEx(v12, 0, i != 0 ? 28 : 1, 0i64, 0, 0);
      if ( !v15 )
        continue;
      while ( 1 )
      {
        if ( *(_WORD *)(v15 + 12) == 28 )
        {
          DnsAddr_BuildFromIp6((char *)v25, (__int128 *)(v15 + 56), v16, 0x3500u);
        }
        else
        {
          if ( *(_WORD *)(v15 + 12) != 1 )
            goto LABEL_27;
          DnsAddr_BuildFromIp4(v25, *(struct in_addr *)(v15 + 56), 0x3500u);
        }
        if ( (unsigned int)DnsAddrArray_ContainsAddr((__int64)g_ServerAddrs, v25, 3) )
          goto LABEL_28;
        if ( v9[1] >= *v9 )
          break;
LABEL_26:
        if ( !(unsigned int)DnsAddrArray_AddAddr(v9, (__int64)v25, v17, 3) )
          goto LABEL_33;
LABEL_27:
        v15 = RR_FindNextRecordEx(v12, 0, i != 0 ? 28 : 1, v15, 0, 0);
        if ( !v15 )
          goto LABEL_28;
      }
      if ( *v9 + 10 <= 0x190 )
      {
        v19 = DnsAddrArray_CopyAndExpand(v9, 10i64, 1i64, v18);
        if ( v19 )
        {
          v9 = v19;
          goto LABEL_26;
        }
      }
LABEL_33:
      v7 = 1;
LABEL_28:
      ;
    }
    v6 = 0;
    v10 = v27;
    v5 = v26;
LABEL_30:
    v13 = WPP_GLOBAL_Control;
  }
  while ( !v7 );
  if ( v13 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)v13 + 68) & 0x40) != 0
    && *((_BYTE *)v13 + 65) >= 4u )
  {
    LODWORD(v24) = *v9;
    LODWORD(v23) = v9[1];
    WPP_SF_qdD(*((_QWORD *)v13 + 7), 0x53u, (__int64)&WPP_4e7c1fc42723374814672f05b7ca7028_Traceguids, v9, v23, v24);
    v13 = WPP_GLOBAL_Control;
  }
  v20 = 0;
  if ( v9[1] )
  {
    do
    {
      v21 = v20++;
      HIWORD(v9[16 * v21 + 8]) = 13568;
    }
    while ( v20 < v9[1] );
    v13 = WPP_GLOBAL_Control;
  }
  if ( !v5 )
  {
    if ( v13 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)v13 + 68) & 0x40) != 0
      && *((_BYTE *)v13 + 65) >= 4u )
    {
      WPP_SF_s(
        *((_QWORD *)v13 + 7),
        0x54u,
        (__int64)&WPP_4e7c1fc42723374814672f05b7ca7028_Traceguids,
        *(const char **)(a1 + 16));
    }
    v6 = 9606;
  }
  if ( !v9[1] )
  {
    Dns_Free(v9);
    v9 = 0i64;
  }
  EnterCriticalSection(&csZoneList);
  Timeout_FreeWithFunctionEx(
    *(_QWORD *)(a1 + 560),
    (__int64)DnsAddrArray_Free,
    (__int64)"ds\\dns\\server\\server\\zonepri.c",
    3145);
  *(_DWORD *)(a1 + 396) &= ~0x800u;
  *(_QWORD *)(a1 + 560) = v9;
  LeaveCriticalSection(&csZoneList);
LABEL_51:
  v8 = WPP_GLOBAL_Control;
LABEL_52:
  if ( v8 == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control )
  {
LABEL_56:
    if ( (*((_BYTE *)v8 + 68) & 0x40) != 0 )
      Dbg_DnsAddrArray("New NS list", *(_QWORD *)(a1 + 560));
  }
  else if ( (*((_BYTE *)v8 + 68) & 0x40) != 0 )
  {
    if ( *((_BYTE *)v8 + 65) >= 4u )
    {
      WPP_SF_DS(
        *((_QWORD *)v8 + 7),
        0x55u,
        (__int64)&WPP_4e7c1fc42723374814672f05b7ca7028_Traceguids,
        v6,
        *(_QWORD *)(a1 + 24));
      v8 = WPP_GLOBAL_Control;
    }
    goto LABEL_56;
  }
  return v6;
}
// 1400CEAA0: conditional instruction was optimized away because rbx.8!=0
// 1400CEB00: conditional instruction was optimized away because rbx.8!=0
// 1400CE83A: variable 'a2' is possibly undefined
// 1400CE83A: variable 'a3' is possibly undefined
// 1400CE83A: variable 'a4' is possibly undefined
// 1400CE959: variable 'v16' is possibly undefined
// 1400CE9BA: variable 'v18' is possibly undefined
// 1400CE9D6: variable 'v17' is possibly undefined
// 1400CEA91: variable 'v23' is possibly undefined
// 1400CEA91: variable 'v24' is possibly undefined
// 1401560E0: using guessed type __int64 __fastcall DnsAddrArray_Free();
