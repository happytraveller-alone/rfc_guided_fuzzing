//----- (00000001400B2318) ----------------------------------------------------
void __fastcall NTree_DeleteNodeInHashBucket(__int64 a1, __int64 a2)
{
  __int64 i; // rbx
  int v3; // eax
  __int64 *v4; // r10
  __int64 v5; // r11
  __int64 v6; // r13
  signed int v7; // esi
  _DWORD *v8; // rbp
  int v9; // r15d
  __int64 *v10; // rdi
  int v11; // ecx
  _DWORD *v12; // rdx
  _QWORD *v13; // rax
  __int64 v14; // r14
  _QWORD *v15; // rax
  __int64 v16; // rdi
  __int64 v17; // rcx
  __int64 v18[500]; // [rsp+30h] [rbp-FD8h] BYREF

  for ( i = a1; *(_BYTE *)i != 0xFF; i = *(_QWORD *)(i + 8) )
    ;
  v3 = NTree_HashTableIndexEx(a2, 0i64, *(_BYTE *)(i + 2));
  --*(_DWORD *)(i + 4i64 * v3 + 2064);
  if ( *(__int64 **)(i + 8i64 * v3 + 16) == v4 )
    *(_QWORD *)(i + 8i64 * v3 + 16) = v5;
  v6 = *v4;
LABEL_6:
  v7 = 0;
  v8 = (_DWORD *)(i + 2064);
  v9 = 0;
  v10 = (__int64 *)(i + 16);
  v11 = 0;
  v12 = (_DWORD *)(i + 2064);
  v13 = (_QWORD *)(i + 16);
  while ( !*v13 || *(_BYTE *)*v13 != 0xFF )
  {
    v7 += *v12;
    ++v11;
    ++v12;
    ++v13;
    if ( v11 > 255 )
    {
      if ( v7 <= 32 )
      {
        v14 = 256i64;
        do
        {
          if ( *v10 )
          {
            btreeReadToArray(*v10, (__int64)&v18[v9]);
            v9 += *v8;
          }
          ++v10;
          ++v8;
          --v14;
        }
        while ( v14 );
        v15 = btreeRebalanceLeftJustifyPrivate(v18, v7);
        v16 = *(_QWORD *)(i + 8);
        if ( v16 )
        {
          v17 = *(unsigned __int8 *)(i + 3);
          *(_QWORD *)(v16 + 8 * v17 + 16) = v15;
          *(_DWORD *)(v16 + 4 * v17 + 2064) = v7;
          v15[1] = v16;
        }
        else
        {
          *(_QWORD *)(v6 + 32) = v15;
          v15[1] = 0i64;
        }
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 8) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
        {
          WPP_SF_q(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            0x21u,
            (__int64)&WPP_800d841ceeab39a775299d72a602aebb_Traceguids,
            i);
        }
        Mem_Free((_QWORD *)i, 3088i64, 8i64, (__int64)"ds\\dns\\server\\server\\tree.c", 2448);
        i = v16;
        if ( v16 )
          goto LABEL_6;
      }
      return;
    }
  }
}
// 1400B2377: variable 'v4' is possibly undefined
// 1400B2379: variable 'v5' is possibly undefined
// 1400B2318: using guessed type _QWORD var_FD8[500];
