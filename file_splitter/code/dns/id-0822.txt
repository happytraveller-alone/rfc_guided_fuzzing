//----- (0000000140072060) ----------------------------------------------------
void __fastcall Recurse_HandleCacheUpdateResult(struct _DNS_MSGINFO *a1, __int64 a2, int a3, int a4)
{
  __int64 v4; // rbp
  CDnsClientSubnetRecordsTrie *v9; // rcx
  int v10; // edi
  int v11; // edi
  int v12; // edi
  int v13; // edi
  int v14; // edi
  int v15; // edi
  bool v16; // zf
  __int64 v17; // rdx

  v4 = *((_QWORD *)a1 + 158);
  v9 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x4000) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_Dqq(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x44u,
      (__int64)&WPP_045d5c95c5db3fcad9ea35acf5eb75d8_Traceguids,
      a3);
    v9 = WPP_GLOBAL_Control;
  }
  if ( a2 && v4 )
  {
    if ( v9 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)v9 + 17) & 0x4000) != 0
      && *((_BYTE *)v9 + 65) >= 5u )
    {
      WPP_SF_ddqq(*((_QWORD *)v9 + 7), 0x45u, (__int64)&WPP_045d5c95c5db3fcad9ea35acf5eb75d8_Traceguids, a3);
      v9 = WPP_GLOBAL_Control;
    }
    if ( a3 )
    {
      v10 = a3 - 123;
      if ( v10 )
      {
        v11 = v10 - 8880;
        if ( !v11 )
          goto LABEL_32;
        v12 = v11 - 498;
        if ( !v12 )
        {
          if ( v9 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_DWORD *)v9 + 17) & 0x4000) != 0
            && *((_BYTE *)v9 + 65) >= 4u )
          {
            WPP_SF_qq(*((_QWORD *)v9 + 7), 0x47u, (__int64)&WPP_045d5c95c5db3fcad9ea35acf5eb75d8_Traceguids, a2, v4);
          }
          goto LABEL_45;
        }
        v13 = v12 - 1;
        if ( v13 )
        {
          v14 = v13 - 2;
          if ( v14 )
          {
            v15 = v14 - 202;
            if ( v15 )
            {
              if ( v15 != 16 )
              {
                if ( v9 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                  && (*((_DWORD *)v9 + 17) & 0x4000) != 0
                  && *((_BYTE *)v9 + 65) >= 2u )
                {
                  WPP_SF_q(*((_QWORD *)v9 + 7), 0x4Bu, (__int64)&WPP_045d5c95c5db3fcad9ea35acf5eb75d8_Traceguids, a1);
                }
                goto LABEL_46;
              }
LABEL_32:
              if ( v9 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                && (*((_DWORD *)v9 + 17) & 0x4000) != 0
                && *((_BYTE *)v9 + 65) >= 4u )
              {
                WPP_SF_qq(*((_QWORD *)v9 + 7), 0x48u, (__int64)&WPP_045d5c95c5db3fcad9ea35acf5eb75d8_Traceguids, a2, v4);
              }
              goto LABEL_46;
            }
            if ( v9 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
              && (*((_DWORD *)v9 + 17) & 0x4000) != 0
              && *((_BYTE *)v9 + 65) >= 4u )
            {
              WPP_SF_qq(*((_QWORD *)v9 + 7), 0x4Au, (__int64)&WPP_045d5c95c5db3fcad9ea35acf5eb75d8_Traceguids, a2, a1);
            }
            v16 = *(_WORD *)(a2 + 6310) == 0;
            goto LABEL_44;
          }
        }
      }
      if ( v9 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)v9 + 17) & 0x4000) != 0
        && *((_BYTE *)v9 + 65) >= 2u )
      {
        WPP_SF_q(*((_QWORD *)v9 + 7), 0x49u, (__int64)&WPP_045d5c95c5db3fcad9ea35acf5eb75d8_Traceguids, a2);
      }
      _InterlockedIncrement(&dword_1401C7EC8);
      v17 = 0i64;
    }
    else
    {
      if ( *(_WORD *)(a2 + 6310) )
      {
        if ( !a4 )
          goto LABEL_45;
        v16 = dword_1401B9824 == 0;
LABEL_44:
        if ( v16 )
        {
LABEL_46:
          Recurse_ResumeSuspendedQuery((__int64)a1);
          return;
        }
LABEL_45:
        Remote_ForceNsListRebuild(v4);
        goto LABEL_46;
      }
      if ( v9 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)v9 + 17) & 0x4000) != 0
        && *((_BYTE *)v9 + 65) >= 4u )
      {
        WPP_SF_qq(*((_QWORD *)v9 + 7), 0x46u, (__int64)&WPP_045d5c95c5db3fcad9ea35acf5eb75d8_Traceguids, a2, a1);
      }
      Recurse_ClearMoveToParentTtls(*((_QWORD *)a1 + 24));
      _InterlockedIncrement(&dword_1401C7EC8);
      v17 = *((_QWORD *)a1 + 24);
      *((_BYTE *)a1 + 1420) = 0;
    }
    Recurse_Question(a1, v17, *((_WORD *)a1 + 248), *((_WORD *)a1 + 249));
  }
}
// 1401B9824: using guessed type int dword_1401B9824;
// 1401C7EC8: using guessed type int dword_1401C7EC8;
