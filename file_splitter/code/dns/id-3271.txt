//----- (0000000140170248) ----------------------------------------------------
__int64 WPP_SF_SSddddd(__int64 a1, __int64 a2, const wchar_t *a3, const wchar_t *a4, ...)
{
  __int64 v5; // r9
  __int64 v7; // rcx
  __int64 v8; // rcx
  __int64 v9; // r9
  const wchar_t *v10; // r8
  __int64 v11; // rcx
  const wchar_t *v12; // rax
  __int64 v13; // r9
  __int64 v15; // [rsp+C0h] [rbp+28h] BYREF
  va_list va; // [rsp+C0h] [rbp+28h]
  __int64 v17; // [rsp+C8h] [rbp+30h] BYREF
  va_list va1; // [rsp+C8h] [rbp+30h]
  __int64 v19; // [rsp+D0h] [rbp+38h] BYREF
  va_list va2; // [rsp+D0h] [rbp+38h]
  __int64 v21; // [rsp+D8h] [rbp+40h] BYREF
  va_list va3; // [rsp+D8h] [rbp+40h]
  va_list va4; // [rsp+E0h] [rbp+48h] BYREF

  va_start(va4, a4);
  va_start(va3, a4);
  va_start(va2, a4);
  va_start(va1, a4);
  va_start(va, a4);
  v15 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v17 = va_arg(va2, _QWORD);
  va_copy(va3, va2);
  v19 = va_arg(va3, _QWORD);
  va_copy(va4, va3);
  v21 = va_arg(va4, _QWORD);
  v5 = -1i64;
  if ( a4 )
  {
    v7 = -1i64;
    do
      ++v7;
    while ( a4[v7] );
    v8 = v7 + 1;
  }
  else
  {
    v8 = 5i64;
  }
  if ( a3 )
  {
    do
      ++v5;
    while ( a3[v5] );
    v9 = v5 + 1;
  }
  else
  {
    v9 = 5i64;
  }
  v10 = L"NULL";
  v11 = 2 * v8;
  v12 = L"NULL";
  if ( a4 )
    v12 = a4;
  v13 = 2 * v9;
  if ( a3 )
    v10 = a3;
  return FastWppTraceMessage(
           (__int64)&WPP_cb270f16dde935b5e1552b160c3fa946_Traceguids,
           0xFu,
           v10,
           v13,
           v12,
           v11,
           va,
           4i64,
           va1,
           4i64,
           va2,
           4i64,
           va3,
           4i64,
           va4,
           4i64,
           0i64);
}
