//----- (000000014009D704) ----------------------------------------------------
__int64 __fastcall checkAndSuppressBadSender(__int64 a1)
{
  unsigned int v2; // ebp
  unsigned int v3; // r13d
  CDnsClientSubnetRecordsTrie *v4; // rbx
  char v5; // al
  unsigned int v6; // esi
  unsigned int *v7; // r15
  unsigned int v8; // edx
  __int64 v10; // rcx
  __int128 v11; // xmm1
  unsigned int v12; // [rsp+60h] [rbp+8h]

  v2 = -1;
  v3 = -1;
  v12 = dword_1401B9714;
  v4 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x2000) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
  {
    WPP_SF_q(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x4Fu, (__int64)&WPP_398a615c07233f5235cf23860937c5e7_Traceguids, a1);
    v4 = WPP_GLOBAL_Control;
  }
  if ( !dword_1401B9900 )
    return 0i64;
  v5 = *(_BYTE *)(a1 + 6307) & 0xF;
  if ( v5 != 1 && (v5 != 4 || (*(_BYTE *)(a1 + 6306) & 0x78) == 40) )
    return 0i64;
  v6 = 0;
  v7 = (unsigned int *)&unk_1401C9240;
  while ( !(unsigned int)DnsAddr_IsEqual((_WORD *)(a1 + 64), (_WORD *)&BadSenderArray + 34 * v6, 3) )
  {
    if ( *v7 < v3 )
    {
      v3 = *v7;
      v2 = v6;
    }
    ++v6;
    v7 += 17;
    if ( v6 >= 0xA )
    {
      v8 = v12;
      goto LABEL_24;
    }
  }
  v8 = v12;
  if ( v12 >= *v7 )
  {
    v2 = v6;
LABEL_24:
    if ( v2 != -1 )
    {
      v10 = 68i64 * v2;
      *(_OWORD *)((char *)&BadSenderArray + v10) = *(_OWORD *)(a1 + 64);
      *(_OWORD *)((char *)&BadSenderArray + v10 + 16) = *(_OWORD *)(a1 + 80);
      *(_OWORD *)((char *)&BadSenderArray + v10 + 32) = *(_OWORD *)(a1 + 96);
      v11 = *(_OWORD *)(a1 + 112);
      *(_DWORD *)((char *)&BadSenderArray + v10 + 64) = v8 + 60;
      *(_OWORD *)((char *)&BadSenderArray + v10 + 48) = v11;
    }
    return 0i64;
  }
  if ( v4 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)v4 + 17) & 0x2000) != 0
    && *((_BYTE *)v4 + 65) >= 4u )
  {
    WPP_SF_Dq(
      *((_QWORD *)v4 + 7),
      0x50u,
      (__int64)&WPP_398a615c07233f5235cf23860937c5e7_Traceguids,
      *(_BYTE *)(a1 + 6307) & 0xF);
  }
  if ( *(_BYTE *)(a1 + 1412) )
  {
    Etw_LogIncomingPacket(0x103u, a1, 0i64, 1);
    Packet_Free(a1);
  }
  return 1i64;
}
// 1401B9714: using guessed type int dword_1401B9714;
// 1401B9900: using guessed type int dword_1401B9900;
