//----- (00000001400B2BF4) ----------------------------------------------------
__int64 __fastcall NTree_PreviousSibling(__int64 a1)
{
  CDnsClientSubnetRecordsTrie *v2; // rcx
  const char *v3; // rax
  __int64 result; // rax
  __int64 i; // rcx
  __int64 j; // rcx

  v2 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 8) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
  {
    if ( a1 )
    {
      v3 = (const char *)FormatLabelA(*(unsigned __int8 *)(a1 + 101), (const void *)(a1 + 102));
      v2 = WPP_GLOBAL_Control;
    }
    else
    {
      v3 = 0i64;
    }
    WPP_SF_s(*((_QWORD *)v2 + 7), 0x2Eu, (__int64)&WPP_800d841ceeab39a775299d72a602aebb_Traceguids, v3);
  }
  result = *(_QWORD *)(a1 + 16);
  if ( result )
  {
    for ( i = *(_QWORD *)(result + 24); i; i = *(_QWORD *)(i + 24) )
      result = i;
  }
  else
  {
    for ( j = *(_QWORD *)(a1 + 8); ; j = *(_QWORD *)(j + 8) )
    {
      if ( !j )
        return 0i64;
      if ( *(_BYTE *)j == 0xFF )
        break;
      if ( *(_QWORD *)(j + 24) == a1 )
        return j;
      a1 = j;
    }
    return NTree_PreviousHashedNode(j, a1, 0);
  }
  return result;
}
