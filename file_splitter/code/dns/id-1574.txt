//----- (00000001400C74A0) ----------------------------------------------------
_OWORD *__fastcall checkAndFixDefaultZoneRecords(__int64 a1, int a2)
{
  __int64 v2; // r14
  _OWORD *v3; // rbx
  CDnsClientSubnetRecordsTrie *v5; // r10
  __int64 Ptr; // rax
  __int64 v7; // rdx
  _DWORD *Soa; // rax
  __int64 v9; // rsi
  _BYTE *v10; // rax
  unsigned __int8 *OnlyZone; // rax
  __int64 v12; // rsi
  _BYTE *v13; // rax
  __int64 v14; // rsi
  _QWORD *v15; // rax
  _QWORD *v16; // rax
  CDnsClientSubnetRecordsTrie *v17; // rcx
  _OWORD *v18; // rax
  __int64 v20; // [rsp+20h] [rbp-60h]
  __int128 v21[2]; // [rsp+40h] [rbp-40h] BYREF
  __int128 v22; // [rsp+60h] [rbp-20h]
  __int128 v23; // [rsp+70h] [rbp-10h]
  int v24; // [rsp+A8h] [rbp+28h] BYREF

  v24 = a2;
  v2 = *(_QWORD *)(a1 + 40);
  v3 = 0i64;
  v24 = 0;
  v5 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x10) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_s(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0xB0u,
      (__int64)&WPP_e9a0d5dea449334d7c383477da81f939_Traceguids,
      *(const char **)(a1 + 16));
    v5 = WPP_GLOBAL_Control;
  }
  if ( !v2 || *(_DWORD *)(a1 + 372) != 1 || (*(_BYTE *)(a1 + 396) & 0x10) != 0 && (*(_BYTE *)(a1 + 1040) & 4) == 0 )
    return 0i64;
  if ( (unsigned __int8)byte_1401C86C1 <= 1u
    && ((*(_BYTE *)(a1 + 388) & 1) == 0 || !dword_1401B9750 && !g_fDsReadOnlyDcMode)
    && (*(_BYTE *)(a1 + 1160) & 0x40) == 0
    && v5 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)v5 + 68) & 0x10) != 0
    && *((_BYTE *)v5 + 65) >= 4u )
  {
    WPP_SF_Ss(
      *((_QWORD *)v5 + 7),
      0xB1u,
      (__int64)&WPP_e9a0d5dea449334d7c383477da81f939_Traceguids,
      *(const unsigned __int16 **)(a1 + 24),
      (__int64)Str);
    v5 = WPP_GLOBAL_Control;
  }
  if ( (*(_BYTE *)(a1 + 388) & 1) == 0 && !*(_DWORD *)(a1 + 376) )
  {
    if ( ((2 - ((*(_BYTE *)(a1 + 392) & 3) != 0)) & dword_1401B9894) == 0 )
    {
      if ( v5 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_BYTE *)v5 + 68) & 0x10) != 0
        && *((_BYTE *)v5 + 65) >= 4u )
      {
        WPP_SF_s(
          *((_QWORD *)v5 + 7),
          0xB3u,
          (__int64)&WPP_e9a0d5dea449334d7c383477da81f939_Traceguids,
          *(const char **)(a1 + 16));
      }
      setDefaultSoaValues(a1, 0i64);
      return 0i64;
    }
    if ( v5 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)v5 + 68) & 0x10) != 0
      && *((_BYTE *)v5 + 65) >= 4u )
    {
      WPP_SF_S(
        *((_QWORD *)v5 + 7),
        0xB2u,
        (__int64)&WPP_e9a0d5dea449334d7c383477da81f939_Traceguids,
        *(const unsigned __int16 **)(a1 + 24));
    }
  }
  memset_0(v21, 0, 0x40ui64);
  Ptr = (__int64)RR_CreatePtr(0i64, Str, 2u, *(_DWORD *)(a1 + 528), 0x21u);
  if ( !Ptr )
    goto LABEL_73;
  v20 = Ptr & -(__int64)(((*(_DWORD *)(a1 + 396) >> 6) & 1) != 0);
  if ( ((*(_DWORD *)(a1 + 396) >> 6) & 1) != 0 )
    Ptr = 0i64;
  Up_CreateAppendUpdate((__int64)v21, v2, Ptr, 0, v20);
  if ( qword_1401B9700 )
  {
    if ( !(unsigned int)isSoaPrimaryGivenServer((_BYTE *)qword_1401B9700, a1) )
      goto LABEL_32;
    Soa = RR_CreateSoa(*(_QWORD *)(a1 + 336), v7, 0i64, 0i64);
    v9 = (__int64)Soa;
    if ( Soa )
    {
      setDefaultSoaValues(a1, Soa);
      Up_CreateAppendUpdate((__int64)v21, v2, v9, 0, 0i64);
LABEL_32:
      v10 = RR_CreatePtr(0i64, (_BYTE *)qword_1401B9700, 2u, *(_DWORD *)(a1 + 528), 0x21u);
      if ( v10 )
      {
        Up_CreateAppendUpdate((__int64)v21, v2, 0i64, 0, (__int64)v10);
        goto LABEL_47;
      }
    }
LABEL_73:
    Up_FreeUpdatesInUpdateList((__int64)v21);
    return 0i64;
  }
  if ( (*(_BYTE *)(a1 + 388) & 1) != 0 && (dword_1401B9750 || g_fDsReadOnlyDcMode)
    || (*(_BYTE *)(a1 + 1160) & 0x40) != 0 )
  {
    OnlyZone = Ds_CreateNewSOAForReadOnlyZone(a1);
    v12 = (__int64)OnlyZone;
    if ( OnlyZone )
    {
      setDefaultSoaValues(a1, OnlyZone);
      Up_CreateAppendUpdate((__int64)v21, v2, v12, 0, 0i64);
    }
  }
  else
  {
    setDefaultSoaValues(a1, 0i64);
  }
LABEL_47:
  if ( (*(_BYTE *)(a1 + 396) & 2) == 0 && !*(_QWORD *)(a1 + 192) )
  {
    v13 = Lookup_ZoneNode(a1, byte_1401C86C2, 0i64, 0i64, 530, 0i64, 0i64, 0i64);
    v14 = (__int64)v13;
    if ( !v13 || v13[96] == 16 )
    {
      v17 = WPP_GLOBAL_Control;
      if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        || (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x10) == 0
        || *((_BYTE *)WPP_GLOBAL_Control + 65) < 4u )
      {
        goto LABEL_58;
      }
      WPP_SF_ss(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0xB5u,
        (__int64)&WPP_e9a0d5dea449334d7c383477da81f939_Traceguids,
        Str,
        *(_QWORD *)(a1 + 16));
    }
    else
    {
      *((_DWORD *)v13 + 23) |= 2u;
      v15 = (_QWORD *)buildLocalHostRecords(0i64, 0i64, 1u, *(_DWORD *)(a1 + 528), &v24);
      if ( v15 )
      {
        Up_CreateAppendUpdateMultiRRAdd((__int64)v21, v14, v15, 1);
      }
      else if ( !v24 )
      {
        Up_CreateAppendUpdate((__int64)v21, v14, 0i64, 1, 0i64);
      }
      v16 = (_QWORD *)buildLocalHostRecords(0i64, 0i64, 0x1Cu, *(_DWORD *)(a1 + 528), &v24);
      if ( v16 )
      {
        Up_CreateAppendUpdateMultiRRAdd((__int64)v21, v14, v16, 28);
      }
      else if ( !v24 )
      {
        Up_CreateAppendUpdate((__int64)v21, v14, 0i64, 28, 0i64);
      }
    }
  }
  v17 = WPP_GLOBAL_Control;
LABEL_58:
  DWORD2(v22) |= 0x2000u;
  if ( *(_QWORD *)&v21[0] )
  {
    v18 = Mem_Alloc(0x40u, 6i64, "ds\\dns\\server\\server\\update.c", 751);
    if ( v18 )
    {
      v3 = v18;
      *v18 = v21[0];
      v18[1] = v21[1];
      v18[2] = v22;
      v18[3] = v23;
    }
    v17 = WPP_GLOBAL_Control;
  }
  if ( v17 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)v17 + 68) & 0x10) != 0
    && *((_BYTE *)v17 + 65) >= 4u )
  {
    WPP_SF_sq(
      *((_QWORD *)v17 + 7),
      0xB6u,
      (__int64)&WPP_e9a0d5dea449334d7c383477da81f939_Traceguids,
      *(const char **)(a1 + 16));
  }
  return v3;
}
// 1400C769D: variable 'v7' is possibly undefined
// 1401B8C94: using guessed type int g_fDsReadOnlyDcMode;
// 1401B9700: using guessed type __int64 qword_1401B9700;
// 1401B9750: using guessed type int dword_1401B9750;
// 1401B9894: using guessed type int dword_1401B9894;
// 1401C86C1: using guessed type char byte_1401C86C1;
// 1401C86C2: using guessed type unsigned __int8 byte_1401C86C2[262];
