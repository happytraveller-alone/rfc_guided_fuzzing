//----- (0000000140061D5C) ----------------------------------------------------
ULONG __fastcall Template_zzzzzz(
        __int64 a1,
        __int64 a2,
        const unsigned __int16 *a3,
        const unsigned __int16 *a4,
        const unsigned __int16 *a5,
        const unsigned __int16 *a6,
        const unsigned __int16 *a7,
        const unsigned __int16 *a8)
{
  __int64 v8; // rcx
  int v10; // edx
  __int64 v11; // rax
  ULONG v12; // r9d
  const wchar_t *v13; // r11
  const wchar_t *v14; // rax
  __int64 v15; // rax
  int v16; // r8d
  const wchar_t *v17; // rax
  __int64 v18; // rax
  int v19; // r9d
  const wchar_t *v20; // rax
  __int64 v21; // rax
  int v22; // r9d
  const wchar_t *v23; // rax
  __int64 v24; // rax
  int v25; // r9d
  const wchar_t *v26; // rax
  bool v27; // zf
  struct _EVENT_DATA_DESCRIPTOR UserData; // [rsp+20h] [rbp-39h] BYREF
  const wchar_t *v30; // [rsp+30h] [rbp-29h]
  int v31; // [rsp+38h] [rbp-21h]
  int v32; // [rsp+3Ch] [rbp-1Dh]
  const wchar_t *v33; // [rsp+40h] [rbp-19h]
  int v34; // [rsp+48h] [rbp-11h]
  int v35; // [rsp+4Ch] [rbp-Dh]
  const wchar_t *v36; // [rsp+50h] [rbp-9h]
  int v37; // [rsp+58h] [rbp-1h]
  int v38; // [rsp+5Ch] [rbp+3h]
  const wchar_t *v39; // [rsp+60h] [rbp+7h]
  int v40; // [rsp+68h] [rbp+Fh]
  int v41; // [rsp+6Ch] [rbp+13h]
  const wchar_t *v42; // [rsp+70h] [rbp+17h]
  int v43; // [rsp+78h] [rbp+1Fh]
  int v44; // [rsp+7Ch] [rbp+23h]

  v8 = -1i64;
  v10 = 10;
  if ( a3 )
  {
    v11 = -1i64;
    do
      ++v11;
    while ( a3[v11] );
    v12 = 2 * v11 + 2;
  }
  else
  {
    v12 = 10;
  }
  UserData.Size = v12;
  v13 = L"NULL";
  UserData.Reserved = 0;
  v14 = L"NULL";
  if ( a3 )
    v14 = a3;
  UserData.Ptr = (ULONGLONG)v14;
  if ( a4 )
  {
    v15 = -1i64;
    do
      ++v15;
    while ( a4[v15] );
    v16 = 2 * v15 + 2;
  }
  else
  {
    v16 = 10;
  }
  v31 = v16;
  v17 = L"NULL";
  if ( a4 )
    v17 = a4;
  v32 = 0;
  v30 = v17;
  if ( a5 )
  {
    v18 = -1i64;
    do
      ++v18;
    while ( a5[v18] );
    v19 = 2 * v18 + 2;
  }
  else
  {
    v19 = 10;
  }
  v34 = v19;
  v20 = L"NULL";
  v35 = 0;
  if ( a5 )
    v20 = a5;
  v33 = v20;
  if ( a6 )
  {
    v21 = -1i64;
    do
      ++v21;
    while ( a6[v21] );
    v22 = 2 * v21 + 2;
  }
  else
  {
    v22 = 10;
  }
  v37 = v22;
  v23 = L"NULL";
  v38 = 0;
  if ( a6 )
    v23 = a6;
  v36 = v23;
  if ( a7 )
  {
    v24 = -1i64;
    do
      ++v24;
    while ( a7[v24] );
    v25 = 2 * v24 + 2;
  }
  else
  {
    v25 = 10;
  }
  v40 = v25;
  v26 = L"NULL";
  v41 = 0;
  if ( a7 )
    v26 = a7;
  v39 = v26;
  v27 = a8 == 0i64;
  if ( a8 )
  {
    do
      ++v8;
    while ( a8[v8] );
    v10 = 2 * v8 + 2;
    v27 = a8 == 0i64;
  }
  if ( !v27 )
    v13 = a8;
  v43 = v10;
  v42 = v13;
  v44 = 0;
  return EventWrite(Microsoft_Windows_DNSServerHandle, &DNS_EVENT_ZONE_CREATE, 6u, &UserData);
}
