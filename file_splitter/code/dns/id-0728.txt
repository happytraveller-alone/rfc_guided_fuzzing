//----- (00000001400658E0) ----------------------------------------------------
__int64 NbstatThread()
{
  DWORD v0; // edi
  __int64 v1; // rdx
  DWORD v2; // ebx
  CDnsClientSubnetRecordsTrie *v3; // rcx
  int v4; // eax
  signed int v5; // esi
  struct _DNS_MSGINFO *v6; // rbx
  struct _DNS_MSGINFO *v7; // rcx
  unsigned int CurrentTimeInSeconds; // esi
  int v9; // edi
  __int64 *v10; // rbx
  CDnsClientSubnetRecordsTrie *v11; // rcx
  __int64 v12; // rbx
  __int64 *Packet; // rax
  struct _IO_STATUS_BLOCK IoStatusBlock; // [rsp+30h] [rbp-18h] BYREF

  while ( 1 )
  {
    v0 = 2000;
    if ( !*(_DWORD *)(pNbstatPrivateQueue + 96) )
      v0 = -1;
    v2 = WaitForMultipleObjects(cEventArrayCount, phWaitEventArray, 0, v0);
    v3 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x10000) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_Ddd(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x2Fu,
        (__int64)&WPP_fc3a6397bf853e2fe940ea821e43295b_Traceguids,
        v0);
      v3 = WPP_GLOBAL_Control;
    }
    if ( g_fDnsThreadAlert )
    {
      if ( g_fDnsServiceExit == 1 )
        break;
      v4 = Thread_ServiceCheck(1);
      v3 = WPP_GLOBAL_Control;
      if ( !v4 )
        break;
    }
    if ( v2 )
    {
      if ( v2 == 258 )
      {
        CurrentTimeInSeconds = GetCurrentTimeInSeconds(v3, v1);
        v9 = 0;
        v10 = *(__int64 **)pNbstatPrivateQueue;
        if ( *(_QWORD *)pNbstatPrivateQueue == pNbstatPrivateQueue )
          goto LABEL_25;
        do
        {
          if ( !*((_BYTE *)v10 + 1396) )
          {
            if ( *((_DWORD *)v10 + 147) >= CurrentTimeInSeconds )
            {
              v9 = 1;
            }
            else
            {
              *((_BYTE *)v10 + 1396) = 1;
              Send_NameError((struct _DNS_MSGINFO *)v10, 0i64);
            }
          }
          v10 = (__int64 *)*v10;
        }
        while ( v10 != (__int64 *)pNbstatPrivateQueue );
        if ( !v9 )
        {
LABEL_25:
          v11 = WPP_GLOBAL_Control;
          if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control )
          {
            if ( (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x10000) != 0 && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
            {
              WPP_SF_D(
                *((_QWORD *)WPP_GLOBAL_Control + 7),
                0x32u,
                (__int64)&WPP_fc3a6397bf853e2fe940ea821e43295b_Traceguids,
                *(_DWORD *)(pNbstatPrivateQueue + 96));
              v11 = WPP_GLOBAL_Control;
            }
            if ( v11 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
              && (*((_DWORD *)v11 + 17) & 0x10000) != 0
              && *((_BYTE *)v11 + 65) >= 4u )
            {
              WPP_SF_(*((_QWORD *)v11 + 7), 0x2Du, (__int64)&WPP_fc3a6397bf853e2fe940ea821e43295b_Traceguids);
              v11 = WPP_GLOBAL_Control;
            }
          }
          v12 = 0i64;
          if ( cNbtInterfaceCount )
          {
            do
            {
              NtCancelIoFile(*(HANDLE *)(pahNbtHandles + 8 * v12), &IoStatusBlock);
              v12 = (unsigned int)(v12 + 1);
            }
            while ( (unsigned int)v12 < cNbtInterfaceCount );
            v11 = WPP_GLOBAL_Control;
          }
          if ( v11 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_DWORD *)v11 + 17) & 0x10000) != 0
            && *((_BYTE *)v11 + 65) >= 4u )
          {
            WPP_SF_(*((_QWORD *)v11 + 7), 0x2Eu, (__int64)&WPP_fc3a6397bf853e2fe940ea821e43295b_Traceguids);
          }
        }
      }
      else if ( v2 != -1 )
      {
        v5 = v2 - 2;
        ResetEvent(*(HANDLE *)(phNbstatEventArray + 8i64 * (int)(v2 - 2)));
        v6 = *(struct _DNS_MSGINFO **)pNbstatPrivateQueue;
        while ( v6 != (struct _DNS_MSGINFO *)pNbstatPrivateQueue )
        {
          v7 = v6;
          v6 = *(struct _DNS_MSGINFO **)v6;
          if ( *(_DWORD *)(2096i64 * v5 + *((_QWORD *)v7 + 165)) != -572662307 )
            processNbstatResponse(v7, v5);
        }
      }
    }
    else
    {
      if ( v3 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)v3 + 17) & 0x10000) != 0
        && *((_BYTE *)v3 + 65) >= 4u )
      {
        WPP_SF_D(
          *((_QWORD *)v3 + 7),
          0x31u,
          (__int64)&WPP_fc3a6397bf853e2fe940ea821e43295b_Traceguids,
          *(_DWORD *)(pNbstatQueue + 96));
      }
      while ( 1 )
      {
        Packet = PQ_DequeueNextPacket((__int64 **)pNbstatQueue);
        if ( !Packet )
          break;
        makeNbstatRequestThroughNbt((__int64)Packet);
      }
    }
  }
  if ( v3 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)v3 + 68) & 1) != 0
    && *((_BYTE *)v3 + 65) >= 4u )
  {
    WPP_SF_(*((_QWORD *)v3 + 7), 0x30u, (__int64)&WPP_fc3a6397bf853e2fe940ea821e43295b_Traceguids);
  }
  return 1i64;
}
// 140065A21: variable 'v1' is possibly undefined
// 140183D98: using guessed type __int64 __fastcall GetCurrentTimeInSeconds(_QWORD, _QWORD);
// 1401B7EB4: using guessed type int g_fDnsThreadAlert;
// 1401B9A40: using guessed type int g_fDnsServiceExit;
// 1401CBDC8: using guessed type int cNbtInterfaceCount;
// 1401CBDD0: using guessed type __int64 pahNbtHandles;
// 1401CBDF0: using guessed type __int64 phNbstatEventArray;
// 1401CBE00: using guessed type __int64 pNbstatQueue;
// 1401CBE08: using guessed type __int64 pNbstatPrivateQueue;
