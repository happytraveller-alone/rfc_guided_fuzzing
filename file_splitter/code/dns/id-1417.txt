//----- (00000001400B1FC4) ----------------------------------------------------
__int64 __fastcall NTree_NextHashedNode(__int64 a1, __int64 a2)
{
  __int64 v3; // rdi
  CDnsClientSubnetRecordsTrie *v4; // r10
  int v5; // ecx
  int v6; // ecx
  __int64 v7; // rbx
  __int64 i; // rax

  v3 = a1;
  v4 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 8) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_qdqs(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      a2 + 102,
      (a2 + 102) & -(__int64)(a2 != 0),
      a1,
      *(unsigned __int8 *)(a1 + 2),
      a2,
      (a2 + 102) & -(__int64)(a2 != 0));
    v4 = WPP_GLOBAL_Control;
  }
  v5 = 0;
  if ( a2 )
    v5 = NTree_HashTableIndexEx(a2, 0i64, *(_BYTE *)(v3 + 2)) + 1;
  while ( 1 )
  {
    while ( 1 )
    {
      while ( v5 > 255 )
      {
        if ( !*(_BYTE *)(v3 + 2) )
        {
          v7 = 0i64;
          goto LABEL_18;
        }
        v6 = *(unsigned __int8 *)(v3 + 3);
        v3 = *(_QWORD *)(v3 + 8);
        v5 = v6 + 1;
      }
      v7 = *(_QWORD *)(v3 + 8i64 * v5 + 16);
      if ( v7 )
        break;
      ++v5;
    }
    if ( *(_BYTE *)v7 != 0xFF )
      break;
    v3 = *(_QWORD *)(v3 + 8i64 * v5 + 16);
    v5 = 0;
  }
  for ( i = *(_QWORD *)(v7 + 16); i; i = *(_QWORD *)(i + 16) )
    v7 = i;
LABEL_18:
  if ( v4 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)v4 + 68) & 8) != 0
    && *((_BYTE *)v4 + 65) >= 4u )
  {
    WPP_SF_qs(
      *((_QWORD *)v4 + 7),
      0x1Cu,
      (__int64)&WPP_800d841ceeab39a775299d72a602aebb_Traceguids,
      v7,
      (v7 + 102) & -(__int64)(v7 != 0));
  }
  return v7;
}
// 1400B2096: variable 'v4' is possibly undefined
