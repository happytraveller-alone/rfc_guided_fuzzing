//----- (000000014010E824) ----------------------------------------------------
__int64 __fastcall DnsOls_ValidateZoneSigningParameters(__int64 a1, int a2, __int64 a3, __int64 a4)
{
  const char *v4; // rsi
  int v5; // edi
  __int64 v6; // r13
  int v7; // ebx
  int v8; // r12d
  __int64 v9; // r15
  char v10; // al
  CDnsClientSubnetRecordsTrie *v12; // rcx
  CDnsClientSubnetRecordsTrie **v13; // rdx
  const char *v14; // r9
  __int64 v15; // r15
  char v16; // cl
  __int16 v17; // ax
  char v18; // bl
  const char *v19; // rdi
  char *v20; // rax
  __int64 v21; // r8
  bool v22; // zf
  _QWORD *v23; // rbx
  __int64 v24; // rbx
  char *v25; // rax
  char *zero; // rax
  int v28[4]; // [rsp+40h] [rbp-40h] BYREF
  __int128 v29; // [rsp+50h] [rbp-30h] BYREF
  unsigned __int16 *v30; // [rsp+60h] [rbp-20h] BYREF
  __int64 v31; // [rsp+68h] [rbp-18h]
  __int64 v32; // [rsp+70h] [rbp-10h]

  v4 = 0i64;
  *(_QWORD *)&v29 = a3;
  v5 = 0;
  v28[0] = a2;
  v6 = 0i64;
  v7 = 0;
  v8 = 0;
  v9 = a3;
  v10 = a2;
  v12 = WPP_GLOBAL_Control;
  v13 = &WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x200000) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    if ( a1 )
      v14 = *(const char **)(a1 + 16);
    else
      v14 = 0i64;
    WPP_SF_s(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x1Du, (__int64)&WPP_d7bde0c81fb638cbc010cec2dbd8b3fa_Traceguids, v14);
    v12 = WPP_GLOBAL_Control;
    v10 = v28[0];
  }
  if ( a1 )
  {
    if ( *(_DWORD *)(a1 + 372) != 1 )
    {
      v5 = 9611;
LABEL_52:
      if ( (v28[0] & 1) != 0 )
      {
        v30 = *(unsigned __int16 **)(a1 + 24);
        *(_QWORD *)&v29 = 0i64;
        LOBYTE(v28[0]) = 1;
        if ( !v6 || (unsigned int)StringFromGuid((const IID *)(v6 + 8), (void **)&v29) )
        {
          v31 = v5;
          BYTE1(v28[0]) = 4;
          v29 = DNS_EVENT_DNSSEC_INVALID_ZONE_SIGNING_PARAMETER;
          Eventlog_LogEvent((__int64)&v29, (__int64)v13, 2u, &v30, (unsigned __int8 *)v28, 0, 0, 0i64);
        }
        else
        {
          v23 = (_QWORD *)v29;
          v32 = v5;
          *(_WORD *)((char *)v28 + 1) = 1025;
          v31 = v29;
          v29 = DNS_EVENT_DNSSEC_INVALID_SIGNING_KEY_DESCRIPTOR;
          Eventlog_LogEvent((__int64)&v29, (__int64)v13, 3u, &v30, (unsigned __int8 *)v28, 0, 0, 0i64);
          Mem_Free(v23, 0i64, 0i64, (__int64)"ds\\dns\\server\\server\\olsvalidation.cpp", 654);
        }
        v12 = WPP_GLOBAL_Control;
      }
      if ( v12 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)v12 + 17) & 0x200000) != 0
        && *((_BYTE *)v12 + 65) >= 2u )
      {
        v24 = *(_QWORD *)(a1 + 16);
        if ( v6 )
        {
          v25 = Dbg_GuidString((const IID *)(v6 + 8));
          v12 = WPP_GLOBAL_Control;
        }
        else
        {
          v25 = 0i64;
        }
        WPP_SF_SSsD(*((_QWORD *)v12 + 7), (__int64)v13, a3, a4, (__int64)v25, v24);
        v12 = WPP_GLOBAL_Control;
      }
      if ( v9 )
      {
        zero = (char *)MIDL_user_allocate_zero(0x28ui64);
        if ( zero )
          *(_DWORD *)zero = 1;
        *(_QWORD *)v9 = zero;
        if ( zero )
        {
          if ( v6 )
            *(_OWORD *)(zero + 8) = *(_OWORD *)(v6 + 8);
          *(_DWORD *)(*(_QWORD *)v9 + 32i64) = 0;
        }
        v12 = WPP_GLOBAL_Control;
      }
      if ( v12 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)v12 + 17) & 0x200000) != 0
        && *((_BYTE *)v12 + 65) >= 2u )
      {
        WPP_SF_Ds(
          *((_QWORD *)v12 + 7),
          0x23u,
          (__int64)&WPP_d7bde0c81fb638cbc010cec2dbd8b3fa_Traceguids,
          v5,
          *(_QWORD *)(a1 + 16));
      }
      return (unsigned int)v5;
    }
    if ( v9 )
    {
      *(_QWORD *)v9 = 0i64;
      v12 = WPP_GLOBAL_Control;
    }
    v15 = *(_QWORD *)(a1 + 1136);
    if ( v15 )
    {
      while ( 1 )
      {
        v5 = DnsOls_ValidateSKD(a1, v15, v10);
        if ( v5 )
        {
          v6 = v15;
          goto LABEL_46;
        }
        v16 = *(_BYTE *)(v15 + 40);
        v17 = (*(_DWORD *)(a1 + 1040) & 0x10) != 0 ? 50 : 47;
        if ( v16 == 5 )
          break;
        if ( v16 == 7 )
        {
          v22 = v17 == 50;
          goto LABEL_28;
        }
        if ( ((v16 - 8) & 0xFD) != 0 && (unsigned __int8)(v16 - 13) > 1u )
        {
LABEL_19:
          v12 = WPP_GLOBAL_Control;
          if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x200000) != 0
            && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
          {
            v18 = *(_BYTE *)(v15 + 40);
            v19 = "NSEC";
            if ( (*(_BYTE *)(a1 + 1040) & 0x10) != 0 )
              v19 = "NSEC3";
            v20 = Dbg_GuidString((const IID *)(v15 + 8));
            WPP_SF_Ssds(
              *((_QWORD *)WPP_GLOBAL_Control + 7),
              0x1Eu,
              v21,
              (const unsigned __int16 *)v20,
              *(_QWORD *)(a1 + 16),
              v18,
              (__int64)v19);
            v12 = WPP_GLOBAL_Control;
          }
          v6 = v15;
          v5 = (*(_DWORD *)(a1 + 1040) & 0x10) != 0 ? 9103 : 9130;
          goto LABEL_51;
        }
LABEL_29:
        if ( *(_DWORD *)(v15 + 36) )
          ++v7;
        else
          ++v8;
        v15 = *(_QWORD *)v15;
        v10 = v28[0];
        if ( !v15 )
        {
          v12 = WPP_GLOBAL_Control;
          goto LABEL_34;
        }
      }
      v22 = v17 == 47;
LABEL_28:
      if ( !v22 )
        goto LABEL_19;
      goto LABEL_29;
    }
LABEL_34:
    if ( ((*(_BYTE *)(a1 + 388) & 1) != 0 || (*(_BYTE *)(a1 + 1040) & 2) != 0) && (!v7 || !v8) )
    {
      v5 = 9104;
      if ( v12 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)v12 + 17) & 0x200000) != 0
        && *((_BYTE *)v12 + 65) >= 2u )
      {
        WPP_SF_Dd(*((_QWORD *)v12 + 7), 0x1Fu, (__int64)&WPP_d7bde0c81fb638cbc010cec2dbd8b3fa_Traceguids, v7);
        v12 = WPP_GLOBAL_Control;
      }
LABEL_51:
      v9 = v29;
      goto LABEL_52;
    }
    if ( !v8 || (v28[0] & 2) != 0 && !v7 )
    {
      v5 = 9104;
      if ( v12 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)v12 + 17) & 0x200000) != 0
        && *((_BYTE *)v12 + 65) >= 2u )
      {
        WPP_SF_Dd(*((_QWORD *)v12 + 7), 0x20u, (__int64)&WPP_d7bde0c81fb638cbc010cec2dbd8b3fa_Traceguids, v7);
LABEL_46:
        v12 = WPP_GLOBAL_Control;
      }
      goto LABEL_51;
    }
  }
  if ( v12 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)v12 + 17) & 0x200000) != 0
    && *((_BYTE *)v12 + 65) >= 4u )
  {
    if ( a1 )
      v4 = *(const char **)(a1 + 16);
    WPP_SF_s(*((_QWORD *)v12 + 7), 0x21u, (__int64)&WPP_d7bde0c81fb638cbc010cec2dbd8b3fa_Traceguids, v4);
  }
  return (unsigned int)v5;
}
// 14010EAEA: conditional instruction was optimized away because edi.4 is in (238F..2390|==23AA)
// 14010E9BF: variable 'v21' is possibly undefined
// 14010EB69: variable 'v13' is possibly undefined
// 14010EC1A: variable 'a3' is possibly undefined
// 14010EC1A: variable 'a4' is possibly undefined
// 1401862A8: using guessed type __int128 DNS_EVENT_DNSSEC_INVALID_ZONE_SIGNING_PARAMETER;
// 140186428: using guessed type __int128 DNS_EVENT_DNSSEC_INVALID_SIGNING_KEY_DESCRIPTOR;
