//----- (0000000140076840) ----------------------------------------------------
unsigned int *__fastcall Reg_GetAddrArrayEx(HKEY hKey, __int64 a2, const char *a3, unsigned int a4, int *a5)
{
  unsigned int *v5; // rbx
  unsigned __int16 *v6; // rdi
  int IpArrayFromMultiIpString; // esi
  char *ValueAllocate; // r12
  unsigned int *v12; // rax
  LPBYTE v13; // rax
  __int64 v14; // r8
  int v15; // r9d
  __int64 v16; // rdx
  __int64 v17; // r8
  int v18; // r9d
  CDnsClientSubnetRecordsTrie *v19; // rcx
  __int64 v20; // rax
  unsigned int *v21; // rcx
  LPBYTE v22; // rax
  unsigned __int16 v23; // r8
  __int128 v24; // xmm0
  unsigned int i; // ecx
  unsigned __int64 v26; // rax
  __int64 v28; // [rsp+20h] [rbp-50h]
  DWORD v29; // [rsp+40h] [rbp-30h] BYREF
  int v30; // [rsp+44h] [rbp-2Ch] BYREF
  unsigned __int16 *v31[3]; // [rsp+48h] [rbp-28h] BYREF
  __int128 v32; // [rsp+60h] [rbp-10h] BYREF

  v5 = 0i64;
  v6 = 0i64;
  IpArrayFromMultiIpString = 0;
  v31[0] = 0i64;
  v30 = 0;
  ValueAllocate = (char *)Reg_GetValueAllocate(hKey, a2, a3, 7, &v29);
  if ( !ValueAllocate )
    goto LABEL_7;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_s(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x32u, (__int64)&WPP_6ba06e9d807b3b6640892c588bf1aced_Traceguids, a3);
  }
  v12 = createDnsAddrArrayFromMultiIpString(ValueAllocate, a4, &v30);
  IpArrayFromMultiIpString = v30;
  v5 = v12;
  if ( !v12 )
  {
LABEL_7:
    v13 = Reg_GetValueAllocate(hKey, a2, a3, 1, &v29);
    ValueAllocate = (char *)v13;
    if ( v13 )
    {
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        WPP_SF_ss(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0x33u,
          (__int64)&WPP_6ba06e9d807b3b6640892c588bf1aced_Traceguids,
          a3,
          (__int64)v13);
      }
      IpArrayFromMultiIpString = Dns_CreateIpArrayFromMultiIpString(ValueAllocate, (unsigned int **)v31, v14, v15);
      if ( IpArrayFromMultiIpString )
      {
        v19 = WPP_GLOBAL_Control;
        if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control )
        {
          v6 = v31[0];
LABEL_35:
          if ( a2 )
          {
            v23 = 2;
            v24 = DNS_EVENT_INVALID_REGISTRY_ZONE_DATA;
            v31[0] = *(unsigned __int16 **)(a2 + 24);
            v28 = (__int64)&v29;
            LOWORD(v29) = 769;
            v31[1] = (unsigned __int16 *)a3;
          }
          else
          {
            v24 = DNS_EVENT_INVALID_REGISTRY_PARAM;
            v31[0] = (unsigned __int16 *)a3;
            v23 = 1;
            v28 = 3i64;
          }
          v32 = v24;
          Eventlog_LogEvent((__int64)&v32, v16, v23, v31, (unsigned __int8 *)v28, 0, 0, 0i64);
          goto LABEL_39;
        }
        if ( (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) == 0 || *((_BYTE *)WPP_GLOBAL_Control + 65) < 4u )
        {
          v6 = v31[0];
          goto LABEL_18;
        }
        WPP_SF_s(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0x34u,
          (__int64)&WPP_6ba06e9d807b3b6640892c588bf1aced_Traceguids,
          ValueAllocate);
        v6 = v31[0];
LABEL_17:
        v19 = WPP_GLOBAL_Control;
LABEL_18:
        if ( v19 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_BYTE *)v19 + 68) & 2) != 0
          && *((_BYTE *)v19 + 65) >= 4u )
        {
          if ( a2 )
            v20 = *(_QWORD *)(a2 + 24);
          else
            v20 = 0i64;
          WPP_SF_qSs(*((_QWORD *)v19 + 7), v16, v17, hKey, v20, a3);
        }
        goto LABEL_35;
      }
      v6 = v31[0];
      v21 = (unsigned int *)v31[0];
    }
    else
    {
      v22 = Reg_GetValueAllocate(hKey, a2, a3, 3, &v29);
      v6 = (unsigned __int16 *)v22;
      if ( !v22 )
        goto LABEL_39;
      if ( (v29 & 3) != 0 || v29 != 4 * *(_DWORD *)v22 + 4 )
        goto LABEL_17;
      v21 = (unsigned int *)v22;
    }
    v5 = DnsAddrArray_CreateFromIp4Array(v21, v16, v17, v18);
    if ( !v5 )
      goto LABEL_39;
  }
  if ( !(unsigned int)Mem_VerifyHeapBlock((__int64)v5, 0, 0) )
    Dbg_HardAssert("ds\\dns\\server\\server\\registry.c", 0x9D6u, "Mem_VerifyHeapBlock( piparray, 0, 0 )");
LABEL_39:
  Mem_Free(ValueAllocate, 0i64, 0i64, (__int64)"ds\\dns\\server\\server\\registry.c", 2565);
  Mem_Free(v6, 0i64, 0i64, (__int64)"ds\\dns\\server\\server\\registry.c", 2566);
  if ( !a4 )
  {
    if ( v5 )
    {
      for ( i = 0; i < v5[1]; *(_WORD *)((char *)v5 + v26 + 34) = 13568 )
        v26 = (unsigned __int64)i++ << 6;
    }
  }
  if ( a5 )
    *a5 = IpArrayFromMultiIpString;
  return v5;
}
// 140076951: variable 'v14' is possibly undefined
// 140076951: variable 'v15' is possibly undefined
// 140076A31: variable 'v16' is possibly undefined
// 140076A31: variable 'v17' is possibly undefined
// 140076A31: variable 'v18' is possibly undefined
// 1401863F8: using guessed type __int128 DNS_EVENT_INVALID_REGISTRY_ZONE_DATA;
// 140187AD8: using guessed type __int128 DNS_EVENT_INVALID_REGISTRY_PARAM;
