//----- (0000000140120DF0) ----------------------------------------------------
__int64 __fastcall NxtFileRead(__int64 a1, unsigned int a2, const void **a3, __int64 a4, int a5)
{
  int v8; // r15d
  unsigned int v9; // ebx
  const void **v10; // rdi
  unsigned int v11; // esi
  unsigned __int16 v12; // ax
  _BYTE *v13; // rax
  __int128 v14; // xmm0
  int v16[4]; // [rsp+30h] [rbp-D0h] BYREF
  unsigned __int8 v17[272]; // [rsp+40h] [rbp-C0h] BYREF
  __int128 v18; // [rsp+150h] [rbp+50h]

  v18 = 0ui64;
  v8 = 0;
  if ( a2 < 2 )
    return (unsigned int)-1072573181;
  v16[0] = File_ReadCountNameFromToken(v17, 0i64, a4, a3, a5);
  v9 = v16[0];
  if ( v16[0] )
    goto LABEL_15;
  v10 = a3 + 2;
  v11 = a2 - 1;
  if ( v11 )
  {
    do
    {
      v12 = Dns_RecordTypeForNameA(*v10, *((_DWORD *)v10 + 2));
      if ( !v12 )
        v12 = DnsRecordTypeForUnknownRecords((const char *)*v10, *((_DWORD *)v10 + 2));
      if ( v12 == 0xFFFF )
        break;
      v10 += 2;
      *((_BYTE *)&v18 + ((unsigned __int64)v12 >> 3)) |= 1 << (v12 & 7);
      v8 = 1;
      --v11;
    }
    while ( v11 );
    v9 = v16[0];
    if ( v8 )
      goto LABEL_12;
  }
  if ( !(unsigned int)File_ParseDwordToken(v16, (__int64)v10, a4) )
  {
LABEL_15:
    v9 = -1072573183;
    *(_DWORD *)(a4 + 1596) = -1072573180;
    return v9;
  }
  LODWORD(v18) = v16[0];
LABEL_12:
  v13 = RR_AllocateEx(v17[0] + 18, 0, 0);
  if ( v13 )
  {
    v14 = v18;
    *(_QWORD *)(a4 + 800) = v13;
    *(_OWORD *)(v13 + 56) = v14;
    Name_CopyCountName(v13 + 72, v17);
  }
  else
  {
    return 14;
  }
  return v9;
}
// 140120DF0: using guessed type unsigned int var_160[4];
