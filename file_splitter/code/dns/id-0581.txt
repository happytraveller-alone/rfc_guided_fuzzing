//----- (0000000140053BC4) ----------------------------------------------------
__int64 Gnz_ProcessRemoteGnzNode()
{
  __int64 v0; // r13
  unsigned int v1; // edi
  _QWORD *v2; // rsi
  _QWORD *v3; // r14
  _QWORD *v4; // r12
  int v5; // ebp
  unsigned int *v6; // r15
  unsigned int v7; // ebx
  CDnsClientSubnetRecordsTrie *v8; // r10
  _QWORD *v9; // r13
  _QWORD *i; // rbx
  _QWORD *v11; // rsi
  int v12; // ebp
  _QWORD *v13; // r14
  _QWORD *v14; // rax
  u_short v15; // bx
  _QWORD *v16; // rcx
  __int64 NextRecord; // rbp
  __int64 v18; // r8
  __int64 v19; // rbx
  __int64 v20; // rax
  __int64 v21; // rax
  __int64 v22; // r14
  __int16 *v23; // rax
  unsigned __int16 v24; // si
  __int64 v25; // rdx
  struct in_addr *v26; // rbx
  __int64 v27; // r8
  int v28; // r9d
  __int64 v29; // r8
  struct in_addr *v30; // rdx
  unsigned __int64 v31; // rax
  __int64 v33; // [rsp+20h] [rbp-108h]
  int v34; // [rsp+20h] [rbp-108h]
  __int64 v35; // [rsp+58h] [rbp-D0h]
  __int64 v36; // [rsp+60h] [rbp-C8h]
  struct in_addr v37[16]; // [rsp+70h] [rbp-B8h] BYREF
  char v38[64]; // [rsp+B0h] [rbp-78h] BYREF
  __int16 v39[4]; // [rsp+F0h] [rbp-38h] BYREF

  v0 = g_pnodeGnzService;
  v1 = 0;
  v36 = g_pnodeGnzService;
  v2 = 0i64;
  v35 = 0i64;
  v3 = 0i64;
  v4 = 0i64;
  v5 = 0;
  v6 = 0i64;
  v7 = 13;
  v8 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x20000) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    HIDWORD(v33) = HIDWORD(g_pnodeGnzService);
    WPP_SF_Dq(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x1Cu, (__int64)&WPP_034409074b35327309cc7655b9f6aa4d_Traceguids, 1);
    v8 = WPP_GLOBAL_Control;
  }
  if ( !v0 )
    goto LABEL_109;
  v9 = (_QWORD *)(v0 + 64);
  for ( i = (_QWORD *)*v9; i && *((_WORD *)i + 6) <= 0x21u; i = (_QWORD *)*i )
  {
    if ( *((_WORD *)i + 6) == 33 )
    {
      if ( v8 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)v8 + 17) & 0x20000) != 0
        && *((_BYTE *)v8 + 65) >= 4u )
      {
        LODWORD(v33) = 33;
        WPP_SF_qd(*((_QWORD *)v8 + 7), 0x1Du, (__int64)&WPP_034409074b35327309cc7655b9f6aa4d_Traceguids, i, v33);
        v8 = WPP_GLOBAL_Control;
      }
      if ( *((_WORD *)i + 6) == 33 && (!v2 || *((_WORD *)v2 + 6) != 33) )
        v4 = v2;
      ++v5;
      v2 = i;
      v3 = i;
    }
  }
  if ( v8 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)v8 + 17) & 0x20000) != 0
    && *((_BYTE *)v8 + 65) >= 4u )
  {
    WPP_SF_D(*((_QWORD *)v8 + 7), 0x1Eu, (__int64)&WPP_034409074b35327309cc7655b9f6aa4d_Traceguids, v5);
    v8 = WPP_GLOBAL_Control;
  }
  if ( !v5 || !v3 )
  {
    v7 = 13;
    goto LABEL_109;
  }
  v7 = 0;
  if ( v5 > 1 )
  {
    if ( v4 )
      v9 = v4;
    do
    {
      v11 = (_QWORD *)*v9;
      v12 = 0;
      v13 = v9;
      if ( !*v9 )
        break;
      do
      {
        v14 = (_QWORD *)*v11;
        if ( !*v11 || *((_WORD *)v14 + 6) != 33 )
          break;
        if ( *((_WORD *)v11 + 6) != 33 )
        {
          if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x20000) != 0
            && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
          {
            WPP_SF_q(
              *((_QWORD *)WPP_GLOBAL_Control + 7),
              0x1Fu,
              (__int64)&WPP_034409074b35327309cc7655b9f6aa4d_Traceguids,
              v11);
          }
          break;
        }
        v15 = ntohs(*((_WORD *)v14 + 28));
        if ( ntohs(*((_WORD *)v11 + 28)) > v15 )
        {
          v16 = (_QWORD *)*v11;
          v12 = 1;
          *v11 = *(_QWORD *)*v11;
          *v16 = v11;
          v11 = v16;
          *v13 = v16;
        }
        v13 = v11;
        v11 = (_QWORD *)*v11;
      }
      while ( v11 );
    }
    while ( v12 );
    v7 = 0;
  }
  NextRecord = RR_FindNextRecordEx(v36, 0, 0x21u, 0i64, 0, 0);
  if ( !NextRecord )
    goto LABEL_105;
LABEL_44:
  v18 = g_pzoneRemoteGlobalNames;
  if ( !g_pzoneRemoteGlobalNames )
  {
    v19 = v35;
    goto LABEL_50;
  }
  v19 = Lookup_NsHostNode(
          NextRecord + 62,
          0x80000000,
          g_pzoneRemoteGlobalNames,
          0i64,
          0i64,
          dword_1401B9714,
          0i64,
          0i64);
  v35 = v19;
  v8 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x20000) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    v34 = g_pzoneRemoteGlobalNames;
    WPP_SF_qq(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x20u,
      (__int64)&WPP_034409074b35327309cc7655b9f6aa4d_Traceguids,
      v19);
LABEL_50:
    v8 = WPP_GLOBAL_Control;
  }
  if ( v19 )
    goto LABEL_60;
  v20 = Lookup_DbaseName(NextRecord + 62, 0x80000000, v18, 0i64, v34, 0i64);
  v19 = v20;
  v35 = v20;
  v8 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x20000) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    if ( v20 )
      v21 = *(_QWORD *)(v20 + 56);
    else
      v21 = 0i64;
    WPP_SF_qq(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x21u,
      (__int64)&WPP_034409074b35327309cc7655b9f6aa4d_Traceguids,
      v19,
      v21);
    v8 = WPP_GLOBAL_Control;
  }
  if ( v19 )
  {
LABEL_60:
    v39[2] = 0;
    v22 = 0i64;
    v39[0] = dword_1401B9998 != 0 ? 28 : 1;
    v39[1] = dword_1401B9998 != 0 ? 1 : 28;
    if ( (dword_1401B9998 != 0 ? 0x1B : 0) == 0xFFFF )
      goto LABEL_86;
    v23 = v39;
    while ( 1 )
    {
      v24 = *v23;
      v26 = (struct in_addr *)RR_FindNextRecordEx(v19, 0, *v23, 0i64, 0, 0);
      if ( !v26 )
      {
        v8 = WPP_GLOBAL_Control;
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x20000) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
        {
          WPP_SF_D(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            0x23u,
            (__int64)&WPP_034409074b35327309cc7655b9f6aa4d_Traceguids,
            v24);
          v8 = WPP_GLOBAL_Control;
        }
        goto LABEL_80;
      }
      if ( !v6 )
      {
        v6 = DnsAddrArray_Create(0x14u, v25, v27, v28);
        if ( !v6 )
        {
          v7 = 14;
          goto LABEL_105;
        }
      }
      if ( v26[3].S_un.S_un_w.s_w1 == 1 )
      {
        DnsAddr_BuildFromIp4(v37, v26[14], 0);
        v30 = v37;
      }
      else
      {
        if ( v26[3].S_un.S_un_w.s_w1 != 28 )
          goto LABEL_74;
        DnsAddr_BuildFromIp6(v38, (__int128 *)&v26[14], v27, 0);
        v30 = (struct in_addr *)v38;
      }
      if ( (unsigned int)DnsAddrArray_AddAddr(v6, (__int64)v30, v29, 3) )
        goto LABEL_78;
LABEL_74:
      v8 = WPP_GLOBAL_Control;
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x20000) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        WPP_SF_Dq(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0x24u,
          (__int64)&WPP_034409074b35327309cc7655b9f6aa4d_Traceguids,
          v26[3].S_un.S_un_w.s_w1);
LABEL_78:
        v8 = WPP_GLOBAL_Control;
      }
      if ( v6[1] >= *v6 )
      {
        if ( v8 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)v8 + 17) & 0x20000) != 0
          && *((_BYTE *)v8 + 65) >= 4u )
        {
          WPP_SF_(*((_QWORD *)v8 + 7), 0x25u, (__int64)&WPP_034409074b35327309cc7655b9f6aa4d_Traceguids);
          v8 = WPP_GLOBAL_Control;
        }
LABEL_86:
        if ( !v6 )
        {
          v7 = 0;
          goto LABEL_109;
        }
        if ( (*((_DWORD *)v8 + 17) & 0x20000) != 0 )
          Dbg_DnsAddrArray("New GNZ address array", (__int64)v6);
        v7 = 0;
        NextRecord = RR_FindNextRecordEx(v36, 0, 0x21u, NextRecord, 0, 0);
        if ( !NextRecord )
        {
          v8 = WPP_GLOBAL_Control;
          goto LABEL_96;
        }
        goto LABEL_44;
      }
LABEL_80:
      v19 = v35;
      v23 = &v39[++v22];
      if ( !*v23 )
        goto LABEL_86;
    }
  }
  if ( v8 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)v8 + 17) & 0x20000) != 0
    && *((_BYTE *)v8 + 65) >= 4u )
  {
    WPP_SF_q(*((_QWORD *)v8 + 7), 0x22u, (__int64)&WPP_034409074b35327309cc7655b9f6aa4d_Traceguids, NextRecord);
    v8 = WPP_GLOBAL_Control;
  }
  v7 = 0;
LABEL_96:
  if ( !v6 )
    goto LABEL_109;
  if ( v8 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)v8 + 17) & 0x20000) != 0
    && *((_BYTE *)v8 + 65) >= 4u )
  {
    WPP_SF_qq(
      *((_QWORD *)v8 + 7),
      0x26u,
      (__int64)&WPP_034409074b35327309cc7655b9f6aa4d_Traceguids,
      g_pGnzAddrArray,
      v6);
  }
  if ( v6[1] )
  {
    do
    {
      v31 = (unsigned __int64)v1++ << 6;
      *(_WORD *)((char *)v6 + v31 + 34) = 13568;
    }
    while ( v1 < v6[1] );
  }
  EnterCriticalSection(&g_csGlobalNames);
  Timeout_FreeWithFunctionEx(
    g_pGnzAddrArray,
    (__int64)DnsAddrArray_Free,
    (__int64)"ds\\dns\\server\\server\\globalnames.c",
    933);
  g_pGnzAddrArray = (__int64)v6;
  LeaveCriticalSection(&g_csGlobalNames);
LABEL_105:
  v8 = WPP_GLOBAL_Control;
LABEL_109:
  if ( v8 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)v8 + 17) & 0x20000) != 0
    && *((_BYTE *)v8 + 65) >= 4u )
  {
    WPP_SF_Dq(*((_QWORD *)v8 + 7), 0x27u, (__int64)&WPP_034409074b35327309cc7655b9f6aa4d_Traceguids, v7);
  }
  return v7;
}
// 140053CB9: variable 'v33' is possibly undefined
// 140053EF7: variable 'v18' is possibly undefined
// 140053EF7: variable 'v34' is possibly undefined
// 140054022: variable 'v25' is possibly undefined
// 140054022: variable 'v27' is possibly undefined
// 140054022: variable 'v28' is possibly undefined
// 140054085: variable 'v29' is possibly undefined
// 1401560E0: using guessed type __int64 __fastcall DnsAddrArray_Free();
// 1401B8EF0: using guessed type __int64 g_pzoneRemoteGlobalNames;
// 1401B8F00: using guessed type __int64 g_pGnzAddrArray;
// 1401B8F08: using guessed type __int64 g_pnodeGnzService;
// 1401B9714: using guessed type int dword_1401B9714;
// 1401B9998: using guessed type int dword_1401B9998;
