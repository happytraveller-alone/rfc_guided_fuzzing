//----- (00000001400CD350) ----------------------------------------------------
__int64 __fastcall zoneTransferSendThread(__int64 a1, __int64 a2, unsigned int a3)
{
  __int64 v3; // rbx
  __int64 *v5; // r14
  unsigned __int16 *v6; // rsi
  unsigned __int16 *v7; // r13
  SOCKET v8; // rcx
  __int64 v9; // rdx
  __int64 v10; // r8
  __int64 v11; // rdx
  CDnsClientSubnetRecordsTrie *v13; // rcx
  int v14; // r12d
  __int64 i; // rax
  __int64 v16; // rsi
  __int64 v17; // rdx
  __int64 v18; // rdx
  int v19; // ecx
  unsigned __int16 *v20; // rax
  __int64 v21; // rdx
  u_long argp[2]; // [rsp+58h] [rbp-B0h] BYREF
  unsigned __int16 *v23; // [rsp+60h] [rbp-A8h] BYREF
  __int128 v24; // [rsp+68h] [rbp-A0h] BYREF
  __int128 v25; // [rsp+78h] [rbp-90h] BYREF
  __int128 v26; // [rsp+88h] [rbp-80h] BYREF
  unsigned __int16 *v27[4]; // [rsp+98h] [rbp-70h] BYREF
  char v28[80]; // [rsp+B8h] [rbp-50h] BYREF

  v3 = *(_QWORD *)(a1 + 208);
  v5 = *(__int64 **)(v3 + 40);
  Zone_AssumeReadLockEx(v3, a2, a3);
  DnsAddr_WriteIpString_A(v28, (char *)(a1 + 64));
  v6 = (unsigned __int16 *)*(unsigned int *)(v3 + 512);
  v7 = *(unsigned __int16 **)(v3 + 24);
  v8 = *(_QWORD *)(a1 + 56);
  argp[1] = 0;
  v27[2] = (unsigned __int16 *)v28;
  *(_QWORD *)(a1 + 24) = a1 + 22688;
  v27[0] = v6;
  v27[1] = v7;
  LOWORD(argp[0]) = 260;
  BYTE2(argp[0]) = 3;
  *(_DWORD *)(a1 + 44) = 0x4000;
  argp[1] = ioctlsocket(v8, -2147195266, &argp[1]);
  if ( argp[1] )
  {
    WSAGetLastError();
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x40) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_Dd(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x34u,
        (__int64)&WPP_4e7c1fc42723374814672f05b7ca7028_Traceguids,
        *(_DWORD *)(a1 + 56));
    }
LABEL_6:
    _InterlockedIncrement(&dword_1401C803C);
    _InterlockedIncrement((volatile signed __int32 *)pcZoneTransferFailure);
    v26 = DNS_EVENT_ZONEXFR_ABORTED;
    Eventlog_LogEvent((__int64)&v26, v11, 3u, v27, (unsigned __int8 *)argp, 0, 0, 0i64);
    goto LABEL_7;
  }
  if ( *(_WORD *)(a1 + 480) != 251 )
    goto LABEL_16;
  if ( (unsigned int)sendIxfrResponse(a1) != 1168385 )
    goto LABEL_7;
  v13 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x40) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_q(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x35u, (__int64)&WPP_4e7c1fc42723374814672f05b7ca7028_Traceguids, a1);
LABEL_16:
    v13 = WPP_GLOBAL_Control;
  }
  v14 = dword_1401B9714;
  if ( v13 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)v13 + 68) & 0x40) != 0
    && *((_BYTE *)v13 + 65) >= 4u )
  {
    WPP_SF_dSsdd(*((_QWORD *)v13 + 7), v9, v10, (int)v6, (__int64)v7, (__int64)v28);
  }
  if ( !(unsigned int)writeZoneNodeToMessage(a1, v5, 6u, 0)
    || !(unsigned int)writeZoneNodeToMessage(a1, v5, 0xFFu, 6)
    || !(unsigned int)writeNsGlueRecordsForNodeToMessage(a1, (__int64)v5) )
  {
    goto LABEL_6;
  }
  if ( v5[4] )
  {
    for ( i = NTree_FirstChild((__int64)v5); ; i = NTree_NextSiblingWithLocking(v16) )
    {
      v16 = i;
      if ( !i )
        break;
      if ( !(unsigned int)traverseZoneAndTransferRecords(i, a1) )
        goto LABEL_6;
    }
  }
  if ( !(unsigned int)writeZoneNodeToMessage(a1, v5, 6u, 0)
    || *(_WORD *)(a1 + 6310) && (unsigned int)Send_ResponseAndReset(a1) )
  {
    goto LABEL_6;
  }
  _InterlockedIncrement(&dword_1401C8044);
  _InterlockedIncrement((volatile signed __int32 *)pcAxfrSuccessSent);
  _InterlockedIncrement((volatile signed __int32 *)pcZoneTransferSuccess);
  Stat_IncrementZoneTransferStats(*(_QWORD *)(a1 + 208), 252, 4);
  v24 = DNS_EVENT_ZONEXFR_SUCCESSFUL;
  Eventlog_LogEvent((__int64)&v24, v17, 3u, v27, (unsigned __int8 *)argp, 0, 0, 0i64);
  if ( *(_QWORD *)(v3 + 344) && *(_DWORD *)(v3 + 372) == 1 && (*(_BYTE *)(v3 + 1040) & 4) != 0 )
  {
    dword_1401B9714 = Dns_GetCurrentTimeInSeconds();
    v19 = dword_1401B9714;
    if ( (unsigned int)dword_1401B9714 <= *(_DWORD *)(v3 + 1152) )
      goto LABEL_38;
    v20 = *(unsigned __int16 **)(v3 + 24);
    v25 = DNS_EVENT_XFER_SIGNED_WINS_ZONE;
    v23 = v20;
    Eventlog_LogEvent((__int64)&v25, v18, 1u, &v23, (unsigned __int8 *)1, 0, 0, 0i64);
    *(_DWORD *)(v3 + 1152) = dword_1401B9714 + 86400;
  }
  v19 = dword_1401B9714;
LABEL_38:
  if ( *(_DWORD *)(v3 + 372) == 1 )
  {
    v21 = (unsigned int)(dword_1401B9950 * (v19 - v14));
    if ( (unsigned int)v21 > 0x258 )
      v21 = 600i64;
    *(_DWORD *)(v3 + 568) = v21 + v19;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x40) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_sdddddd(*((_QWORD *)WPP_GLOBAL_Control + 7), v21, (__int64)WPP_GLOBAL_Control, *(const char **)(v3 + 16));
    }
  }
LABEL_7:
  Packet_FreeTcpMessage(a1, 0);
  *(_DWORD *)(v3 + 520) = *(_DWORD *)(v3 + 512);
  Zone_UnlockAfterReadEx(v3, 0);
  if ( (*(_BYTE *)(v3 + 388) & 1) != 0 )
    Ds_CheckForAndForceSerialWrite(v3, 2u);
  Thread_Close(0);
  return 0i64;
}
// 1400CD48A: variable 'v11' is possibly undefined
// 1400CD597: variable 'v9' is possibly undefined
// 1400CD597: variable 'v10' is possibly undefined
// 1400CD6B7: variable 'v17' is possibly undefined
// 1400CD726: variable 'v18' is possibly undefined
// 140186078: using guessed type __int128 DNS_EVENT_ZONEXFR_ABORTED;
// 1401875A8: using guessed type __int128 DNS_EVENT_XFER_SIGNED_WINS_ZONE;
// 140187AE8: using guessed type __int128 DNS_EVENT_ZONEXFR_SUCCESSFUL;
// 1401B9714: using guessed type int dword_1401B9714;
// 1401B9950: using guessed type int dword_1401B9950;
// 1401C803C: using guessed type int dword_1401C803C;
// 1401C8044: using guessed type int dword_1401C8044;
// 1401C8560: using guessed type __int64 pcZoneTransferSuccess;
// 1401C8568: using guessed type __int64 pcZoneTransferFailure;
// 1401C8578: using guessed type __int64 pcAxfrSuccessSent;
