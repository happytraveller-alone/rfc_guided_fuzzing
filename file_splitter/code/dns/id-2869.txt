//----- (000000014014F1EC) ----------------------------------------------------
__int64 __fastcall CDnsRRLManager::ResetFreeListSize(CDnsRRLManager *this)
{
  CDnsRRLManager *v1; // rbp
  unsigned int v2; // edi
  unsigned int v3; // ebx
  unsigned int FreeListSize; // esi
  unsigned int v5; // eax

  v1 = g_DnsRRLManager;
  v2 = 0;
  v3 = 0;
  FreeListSize = CDnsRRLManager::GetFreeListSize(g_DnsRRLManager);
  v5 = (***((__int64 (__fastcall ****)(_QWORD))v1 + 4))(*((_QWORD *)v1 + 4));
  if ( FreeListSize > v5 )
  {
    if ( v5 + FreeListSize <= gNumMinNodesInFreeList )
      return CDnsRRLManager::GetFreeListSize(v1);
    if ( 2 * v5 >= gNumMinNodesInFreeList )
      v2 = FreeListSize - v5;
    else
      v2 = FreeListSize + v5 - gNumMinNodesInFreeList;
    goto LABEL_8;
  }
  v3 = v5 - FreeListSize;
  if ( 2 * v5 > gNumMaxNodesInFreeList )
  {
    v3 = gNumMaxNodesInFreeList - v5 - FreeListSize;
LABEL_8:
    if ( v2 )
    {
      CDnsRRLManager::RemoveNodeFromFreeList((void ***)v1, v2);
      return CDnsRRLManager::GetFreeListSize(v1);
    }
  }
  if ( v3 )
    CDnsRRLManager::UpdateFreeListWithNodes(v1, v3);
  return CDnsRRLManager::GetFreeListSize(v1);
}
// 140185140: using guessed type __int64 (__fastcall *_guard_dispatch_icall_fptr)(_QWORD, _QWORD);
// 1401B91EC: using guessed type int gNumMaxNodesInFreeList;
