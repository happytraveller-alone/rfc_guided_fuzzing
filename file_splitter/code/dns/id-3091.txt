//----- (0000000140161CE0) ----------------------------------------------------
void __fastcall NaptrRecordPrint(void (*a1)(__int64, const char *, ...), __int64 a2, __int64 a3)
{
  WCHAR *v6; // rbp
  const wchar_t *v7; // rsi
  const wchar_t *v8; // rdi
  const wchar_t *v9; // rax
  const wchar_t *v10; // rsi
  const wchar_t *v11; // rbp
  const wchar_t *v12; // rdi
  const wchar_t *v13; // rax
  __int64 v14; // rcx
  __int16 v15[256]; // [rsp+50h] [rbp-838h] BYREF
  __int16 v16[256]; // [rsp+250h] [rbp-638h] BYREF
  __int16 v17[256]; // [rsp+450h] [rbp-438h] BYREF
  __int16 v18[256]; // [rsp+650h] [rbp-238h] BYREF

  if ( a1 )
  {
    v6 = *(WCHAR **)(a3 + 64);
    if ( (*(_DWORD *)(a3 + 20) & 0x18) != 8 )
      v6 = (WCHAR *)recordStringWide(a3, v6, v15);
    v7 = *(const wchar_t **)(a3 + 56);
    if ( (*(_DWORD *)(a3 + 20) & 0x18) != 8 )
      v7 = recordStringWide(a3, *(WCHAR **)(a3 + 56), v16);
    v8 = *(const wchar_t **)(a3 + 48);
    if ( (*(_DWORD *)(a3 + 20) & 0x18) != 8 )
      v8 = recordStringWide(a3, *(WCHAR **)(a3 + 48), v17);
    v9 = *(const wchar_t **)(a3 + 40);
    if ( (*(_DWORD *)(a3 + 20) & 0x18) != 8 )
      v9 = recordStringWide(a3, *(WCHAR **)(a3 + 40), v18);
    a1(
      a2,
      "\tOrder                = %d\r\n"
      "\tPreference           = %d\r\n"
      "\tFlags                = %ls\r\n"
      "\tService              = %ls\r\n"
      "\tRegular Expression   = %ls\r\n"
      "\tReplacement          = %ls\r\n",
      *(unsigned __int16 *)(a3 + 32),
      *(unsigned __int16 *)(a3 + 34),
      v9,
      v8,
      v7,
      v6);
  }
  if ( (byte_1401BA001 & 4) != 0 )
  {
    v10 = *(const wchar_t **)(a3 + 64);
    if ( (*(_DWORD *)(a3 + 20) & 0x18) != 8 )
      v10 = recordStringWide(a3, *(WCHAR **)(a3 + 64), v15);
    v11 = *(const wchar_t **)(a3 + 56);
    if ( (*(_DWORD *)(a3 + 20) & 0x18) != 8 )
      v11 = recordStringWide(a3, *(WCHAR **)(a3 + 56), v16);
    v12 = *(const wchar_t **)(a3 + 48);
    if ( (*(_DWORD *)(a3 + 20) & 0x18) != 8 )
      v12 = recordStringWide(a3, *(WCHAR **)(a3 + 48), v17);
    v14 = *(unsigned int *)(a3 + 20);
    v13 = *(const wchar_t **)(a3 + 40);
    LOBYTE(v14) = v14 & 0x18;
    if ( (_BYTE)v14 != 8 )
      v13 = recordStringWide(a3, *(WCHAR **)(a3 + 40), v18);
    WPP_SF_ddSSSS(
      v14,
      a2,
      *(unsigned __int16 *)(a3 + 32),
      *(unsigned __int16 *)(a3 + 34),
      (__int64)v13,
      (__int64)v12,
      (__int64)v11,
      (__int64)v10);
  }
}
// 140161E8C: variable 'v14' is possibly undefined
// 140161E8C: variable 'a2' is possibly undefined
// 140185140: using guessed type __int64 (__fastcall *_guard_dispatch_icall_fptr)(_QWORD, _QWORD);
// 1401BA001: using guessed type char byte_1401BA001;
// 140161CE0: using guessed type _WORD var_838[256];
// 140161CE0: using guessed type _WORD var_638[256];
// 140161CE0: using guessed type _WORD var_438[256];
// 140161CE0: using guessed type _WORD var_238[256];
