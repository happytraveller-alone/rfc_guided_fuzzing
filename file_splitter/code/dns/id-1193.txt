//----- (0000000140099370) ----------------------------------------------------
__int64 __fastcall Nsec3WireRead(__int64 a1, __int64 a2, __int64 a3, unsigned __int16 a4)
{
  _BYTE *v6; // rax
  __int64 v7; // rdi
  __int64 v8; // rsi
  void *v9; // rcx
  char *v10; // r12
  __int64 v11; // rax
  char *v12; // rbp
  unsigned __int8 *v13; // rbx
  __int64 v14; // rax
  char *v15; // rbx
  char *v16; // r15
  char *v17; // rbx

  if ( a4 < 7u )
    return 0i64;
  v6 = RR_AllocateEx(a4, 0, 0);
  v7 = (__int64)v6;
  if ( !v6 )
    return 0i64;
  v8 = a4;
  v9 = v6 + 62;
  v10 = &v6[a4 + 56];
  v6[56] = *(_BYTE *)a3;
  v6[57] = *(_BYTE *)(a3 + 1);
  *((_WORD *)v6 + 29) = *(_WORD *)(a3 + 2);
  v11 = *(unsigned __int8 *)(a3 + 4);
  *(_BYTE *)(v7 + 60) = v11;
  v12 = (char *)(v11 + v7 + 62);
  if ( (unsigned __int64)v12 < v7 + 62
    || v12 > v10
    || (memcpy_0(v9, (const void *)(a3 + 5), (unsigned int)v11),
        v13 = (unsigned __int8 *)(*(unsigned __int8 *)(v7 + 60) + a3 + 5),
        v14 = *v13,
        v15 = (char *)(v13 + 1),
        *(_BYTE *)(v7 + 61) = v14,
        v16 = &v12[v14],
        &v12[v14] < v12)
    || v16 > v10 )
  {
    RR_Free(v7);
    return 0i64;
  }
  memcpy_0(v12, v15, (unsigned int)v14);
  v17 = &v15[*(unsigned __int8 *)(v7 + 61)];
  if ( v16 < v10 && v8 > (__int64)&v17[-a3] )
    memcpy_0(v16, v17, a3 + v8 - (_QWORD)v17);
  return v7;
}
