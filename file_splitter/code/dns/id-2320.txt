//----- (000000014011E88C) ----------------------------------------------------
char *__fastcall typeBitmapFileWrite(_BYTE *a1, unsigned __int64 a2, char *a3, __int64 a4)
{
  _BYTE *v7; // rdi
  unsigned __int8 v8; // dl
  _BYTE *v9; // rcx
  unsigned __int64 v10; // rbp
  char *i; // r14
  char v12; // r15
  unsigned __int16 v13; // bx
  char *v14; // rax
  char *v15; // rax
  unsigned __int8 v17; // [rsp+20h] [rbp-58h]
  char v18; // [rsp+28h] [rbp-50h] BYREF
  __int64 v19; // [rsp+29h] [rbp-4Fh]
  __int16 v20; // [rsp+31h] [rbp-47h]

  v7 = a1;
  if ( (unsigned __int64)a1 < a2 )
  {
    while ( 2 )
    {
      v8 = *v7;
      v9 = v7 + 1;
      v17 = *v7;
      if ( (unsigned __int64)(v7 + 1) < a2 && (v10 = (unsigned __int64)&v7[(unsigned __int8)*v9 + 2], *v9) && v10 <= a2 )
      {
        for ( i = v7 + 2; (unsigned __int64)i < v10; ++i )
        {
          v12 = *i;
          if ( *i )
          {
            v13 = 8 * ((_WORD)i + 32 * v8 - (_WORD)v7 - 2);
            while ( 1 )
            {
              if ( v12 < 0 )
              {
                v18 = 0;
                v19 = 0i64;
                v20 = 0;
                v14 = Dns_RecordStringForAllTypes(v13, &v18);
                if ( *v14 )
                {
                  v15 = sprintfSafeA(a3, a4 - (_QWORD)a3, " %s", v14);
                }
                else
                {
                  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                    && (*((_BYTE *)WPP_GLOBAL_Control + 28) & 8) != 0
                    && *((_BYTE *)WPP_GLOBAL_Control + 25) >= 4u )
                  {
                    WPP_SF_D(
                      *((_QWORD *)WPP_GLOBAL_Control + 2),
                      0x11u,
                      (__int64)&WPP_ab615269c76f3f4d2c78c36a7027be85_Traceguids,
                      v13);
                  }
                  v15 = sprintfSafeA(a3, a4 - (_QWORD)a3, " TYPE%d", v13);
                }
                a3 = v15;
                if ( !v15 )
                  return a3;
              }
              ++v13;
              v12 *= 2;
              if ( !v12 )
              {
                v8 = v17;
                break;
              }
            }
          }
        }
        v7 = (_BYTE *)v10;
        if ( v10 < a2 )
          continue;
      }
      else
      {
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_BYTE *)WPP_GLOBAL_Control + 28) & 8) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 25) >= 4u )
        {
          WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 2), 0x10u, (__int64)&WPP_ab615269c76f3f4d2c78c36a7027be85_Traceguids);
        }
        return 0i64;
      }
      break;
    }
  }
  return a3;
}
