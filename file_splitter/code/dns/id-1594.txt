//----- (00000001400C8FE0) ----------------------------------------------------
void __fastcall Zone_NotifyIfSignatureExpires(__int64 a1)
{
  __int64 v2; // rdi
  __time32_t v3; // eax
  u_short v4; // cx
  u_short v5; // ax
  __int64 v6; // rdx
  __int128 v7; // xmm0
  unsigned __int16 v8; // r8
  __int64 *v9; // r9
  __time32_t v10; // eax
  u_short v11; // cx
  u_short v12; // ax
  unsigned int v13[4]; // [rsp+40h] [rbp-C0h] BYREF
  __int128 v14; // [rsp+50h] [rbp-B0h] BYREF
  __int64 v15[2]; // [rsp+60h] [rbp-A0h] BYREF
  __int64 v16[4]; // [rsp+70h] [rbp-90h] BYREF
  wchar_t Buffer[2]; // [rsp+90h] [rbp-70h] BYREF
  char v18[524]; // [rsp+94h] [rbp-6Ch] BYREF
  wchar_t v19[2]; // [rsp+2A0h] [rbp+1A0h] BYREF
  char v20[524]; // [rsp+2A4h] [rbp+1A4h] BYREF
  unsigned __int16 v21[2]; // [rsp+4B0h] [rbp+3B0h] BYREF
  char v22[524]; // [rsp+4B4h] [rbp+3B4h] BYREF

  if ( a1
    && *(_QWORD *)(a1 + 40)
    && (*(_BYTE *)(a1 + 396) & 0x10) != 0
    && (*(_DWORD *)(a1 + 372) != 1 || (*(_BYTE *)(a1 + 1040) & 4) == 0) )
  {
    v13[0] = -1;
    acquireRead(DbaseLock, 0xFFFFFFFF, v13);
    v2 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 64i64);
    if ( v2 )
    {
      while ( 1 )
      {
        if ( *(_WORD *)(v2 + 12) != 46 || ntohs(*(_WORD *)(v2 + 56)) != 48 )
          goto LABEL_14;
        v3 = _time32(0i64);
        if ( !DnsVal_IsRRSigPeriodValid(v2, v3) )
          break;
        v10 = _time32(0i64);
        if ( !DnsVal_IsRRSigPeriodValid(v2, v10 + 86400) )
        {
          *(_DWORD *)v21 = 0;
          memset_0(v22, 0, 0x204ui64);
          *(_DWORD *)v19 = 0;
          memset_0(v20, 0, 0x204ui64);
          v11 = *(_WORD *)(v2 + 72);
          v16[0] = (__int64)v19;
          v16[1] = *(_QWORD *)(a1 + 24);
          v16[2] = (__int64)v21;
          v12 = ntohs(v11);
          _itow(v12, v19, 10);
          ConvertTimeToUTCTimeString(*(_DWORD *)(v2 + 64), v21);
          v7 = DNS_EVENT_DNSSEC_SIGNATURE_ABOUT_TO_EXPIRE;
          v8 = 3;
          v9 = v16;
          goto LABEL_13;
        }
LABEL_14:
        v2 = *(_QWORD *)v2;
        if ( !v2 )
          goto LABEL_15;
      }
      *(_DWORD *)Buffer = 0;
      memset_0(v18, 0, 0x204ui64);
      v4 = *(_WORD *)(v2 + 72);
      v15[0] = (__int64)Buffer;
      v15[1] = *(_QWORD *)(a1 + 24);
      v5 = ntohs(v4);
      _itow(v5, Buffer, 10);
      v7 = DNS_EVENT_DNSSEC_SIGNATURE_NOT_VALID;
      v8 = 2;
      v9 = v15;
LABEL_13:
      v14 = v7;
      Eventlog_LogEvent((__int64)&v14, v6, v8, (unsigned __int16 **)v9, (unsigned __int8 *)1, 0, 0, 0i64);
      goto LABEL_14;
    }
LABEL_15:
    v13[0] = -1;
    releaseRead(DbaseLock, v13, 1);
  }
}
// 1400C91E1: variable 'v6' is possibly undefined
// 1401867D8: using guessed type __int128 DNS_EVENT_DNSSEC_SIGNATURE_NOT_VALID;
// 140186968: using guessed type __int128 DNS_EVENT_DNSSEC_SIGNATURE_ABOUT_TO_EXPIRE;
// 14018BA70: using guessed type int dword_14018BA70;
// 1401EC5E8: using guessed type __int64 DbaseLock;
// 1400C8FE0: using guessed type char var_64C[524];
// 1400C8FE0: using guessed type char var_22C[524];
// 1400C8FE0: using guessed type char var_43C[524];
