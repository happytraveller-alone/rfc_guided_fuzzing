//----- (00000001400D9564) ----------------------------------------------------
void __fastcall Xfr_QueueSoaCheckResponse(__int64 a1, __int64 a2)
{
  unsigned __int16 v4; // dx
  int matched; // r8d
  __int64 v6; // [rsp+20h] [rbp-248h]
  wchar_t String1[256]; // [rsp+40h] [rbp-228h] BYREF
  int v8; // [rsp+240h] [rbp-28h]

  if ( !dword_1401B9934 || !dword_1401B9938 || a1 )
    goto LABEL_28;
  if ( !(unsigned int)Name_ConvertPacketNameToLookupNameEx(
                        a2,
                        (unsigned __int8 *)(a2 + 6316),
                        *(unsigned __int16 **)(a2 + 1400),
                        1) )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x800) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
    {
      WPP_SF_q(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        a1 + 17,
        (__int64)&WPP_8f5c62d9956434feed7ea8f9d17b2299_Traceguids,
        a2);
    }
    v4 = 1;
    goto LABEL_10;
  }
  memset_0(String1, 0, 0x204ui64);
  matched = MatchPolicy((struct _DNS_MSGINFO *)a2, 0i64, 0i64, 1u, 1, String1, 0i64);
  if ( matched )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x40000) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
    {
      LODWORD(v6) = matched;
      WPP_SF_qd(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x12u,
        (__int64)&WPP_8f5c62d9956434feed7ea8f9d17b2299_Traceguids,
        a2,
        v6);
    }
    goto LABEL_27;
  }
  if ( !v8 )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x40000) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_q(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x13u,
        (__int64)&WPP_8f5c62d9956434feed7ea8f9d17b2299_Traceguids,
        a2);
    }
LABEL_27:
    v4 = 2;
LABEL_10:
    Reject_RequestIntact(a2, v4, 1);
    return;
  }
  if ( v8 == 2 )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x40000) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_q(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x14u,
        (__int64)&WPP_8f5c62d9956434feed7ea8f9d17b2299_Traceguids,
        a2);
    }
    Etw_LogIncomingPacket(0x103u, a2, 0i64, 0);
LABEL_44:
    Packet_Free(a2);
    return;
  }
LABEL_28:
  if ( !g_fUsingSecondary )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x40) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_q(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x17u,
        (__int64)&WPP_8f5c62d9956434feed7ea8f9d17b2299_Traceguids,
        a2);
    }
    goto LABEL_44;
  }
  if ( a1 )
    *(_QWORD *)(a2 + 6280) = *(_QWORD *)(a1 + 6280);
  if ( (unsigned int)PQ_QueuePacketEx(g_SecondaryQueue, a2) )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x40) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
    {
      LODWORD(v6) = *(_DWORD *)(g_SecondaryQueue + 96);
      WPP_SF_qd(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x15u,
        (__int64)&WPP_8f5c62d9956434feed7ea8f9d17b2299_Traceguids,
        a2,
        v6);
    }
  }
  else
  {
    Packet_Free(a2);
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x40) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
    {
      WPP_SF_q(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x16u,
        (__int64)&WPP_8f5c62d9956434feed7ea8f9d17b2299_Traceguids,
        a2);
    }
  }
}
// 1400D9737: variable 'v6' is possibly undefined
// 1401B9934: using guessed type int dword_1401B9934;
// 1401B9938: using guessed type int dword_1401B9938;
// 1401BA368: using guessed type int g_fUsingSecondary;
// 1401BA370: using guessed type __int64 g_SecondaryQueue;
