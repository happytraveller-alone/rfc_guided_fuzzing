//----- (000000014008D308) ----------------------------------------------------
_QWORD *__fastcall RR_UpdateScavenge(__int64 a1, __int64 a2)
{
  _QWORD *v2; // rsi
  _QWORD *v3; // r12
  int v4; // r15d
  unsigned int v7; // r13d
  char *v8; // rax
  int v9; // ebp
  _QWORD *v10; // r14
  _QWORD *v11; // rbx
  unsigned __int16 v12; // cx
  unsigned __int64 v13; // rax
  __int64 v14; // rcx
  __int64 v15; // rcx
  const char *v16; // r10
  int v18; // [rsp+60h] [rbp+8h] BYREF

  v2 = 0i64;
  v3 = 0i64;
  v4 = 0;
  v7 = Aging_ZoneExpireTime(a1);
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    v8 = Dbg_NodeName(a2);
    WPP_SF_sd(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x4Au, (__int64)&WPP_10d39582251c332017bd035d2c946054_Traceguids, v8);
  }
  v9 = 1;
  v18 = -1;
  acquireUpdate(DbaseLock, 0xFFFFFFFF, (unsigned int *)&v18, 1);
  if ( !a2 || !*(_QWORD *)(a2 + 64) )
    v9 = 0;
  v18 = v9;
  if ( a1 )
    deleteCachedRecordsForUpdate(a2);
  v10 = (_QWORD *)(a2 + 64);
  v11 = *(_QWORD **)(a2 + 64);
  if ( v11 )
  {
    do
    {
      if ( *((_DWORD *)v11 + 6) < v7 )
      {
        if ( *((_DWORD *)v11 + 6) )
        {
          v12 = *((_WORD *)v11 + 6);
          if ( v12 == 1
            || ((v12 - 2) & 0xFFFB) != 0
            && (v12 & 0xFFFC) != 0xFF00
            && (v12 > 0x33u || (v13 = v12, v14 = 0xDC80000000000i64, !_bittest64(&v14, v13))) )
          {
            if ( !v4 )
            {
              Dbase_LockEx(a2, 2, (__int64)"ds\\dns\\server\\server\\rrlist.c", 33);
              v4 = 1;
            }
            *v10 = *v11;
            *v11 = 0i64;
            if ( v2 )
              *v3 = v11;
            else
              v2 = v11;
            v3 = v11;
            v11 = v10;
          }
        }
      }
      v10 = v11;
      v11 = (_QWORD *)*v11;
    }
    while ( v11 );
    v9 = v18;
    if ( v2 )
      RR_ListResetNodeFlags(a2);
  }
  NTree_ChangeAncestorCounters((volatile signed __int32 **)a2, v9);
  if ( v4 )
    Dbase_UnlockEx(v15, 2, (__int64)"ds\\dns\\server\\server\\rrlist.c", 69);
  v18 = -1;
  releaseUpdate(DbaseLock, (unsigned int *)&v18, 1);
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x80000) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    v16 = "FALSE";
    if ( v2 )
      v16 = "TRUE";
    WPP_SF_ss(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x4Bu,
      (__int64)&WPP_10d39582251c332017bd035d2c946054_Traceguids,
      (const char *)(a2 + 102),
      (__int64)v16);
  }
  return v2;
}
// 14008D4BF: variable 'v15' is possibly undefined
// 1401EC5E8: using guessed type __int64 DbaseLock;
