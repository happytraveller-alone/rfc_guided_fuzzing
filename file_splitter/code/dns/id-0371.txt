//----- (0000000140030AAC) ----------------------------------------------------
__int64 __fastcall Dp_PollForPartitions(LDAP *ld, int a2, __int64 a3)
{
  PWCHAR *v5; // r14
  int v6; // r13d
  CDnsClientSubnetRecordsTrie *v7; // rcx
  PLDAP v8; // r15
  LDAPMessage *entry; // rax
  LDAPMessage *v10; // rdi
  const wchar_t **valuesW; // rax
  const wchar_t **v12; // rbx
  PWCHAR *v13; // rax
  const wchar_t **v14; // rbx
  __int64 v15; // rcx
  int LastError; // eax
  const unsigned __int16 *v17; // r9
  DWORD TickCount; // ebx
  PLDAPSearch inited; // rdi
  int v20; // eax
  ULONG v21; // ebx
  WCHAR *v22; // r13
  int NextMessageInSearch; // eax
  char v24; // di
  LDAPMessage *v25; // r14
  CDnsClientSubnetRecordsTrie *v26; // rcx
  __int64 *i; // rcx
  __int64 v28; // r8
  WCHAR *v29; // rax
  __int64 v30; // r8
  int v31; // edx
  int v32; // ecx
  __int64 *Next; // rax
  __int64 v34; // rbx
  __int64 v35; // rax
  int v36; // r9d
  __int64 v37; // rbx
  unsigned __int16 v38; // dx
  CDnsClientSubnetRecordsTrie *v39; // rcx
  int v40; // edi
  __int64 *j; // rcx
  __int64 *v42; // rbx
  unsigned int v43; // ebx
  int v45; // [rsp+60h] [rbp-A0h] BYREF
  unsigned int CurrentTimeInSeconds; // [rsp+64h] [rbp-9Ch]
  int v47; // [rsp+68h] [rbp-98h]
  int v48; // [rsp+6Ch] [rbp-94h]
  PLDAPMessage res; // [rsp+70h] [rbp-90h] BYREF
  PWCHAR Block; // [rsp+78h] [rbp-88h]
  __int64 v51[7]; // [rsp+80h] [rbp-80h] BYREF
  int v52; // [rsp+BCh] [rbp-44h]
  PLDAPControlW ServerControls[4]; // [rsp+210h] [rbp+110h] BYREF
  WCHAR base[1288]; // [rsp+230h] [rbp+130h] BYREF

  v47 = a2;
  v45 = 0;
  ServerControls[0] = (PLDAPControlW)&NoDsSvrReferralControl;
  Block = 0i64;
  ServerControls[1] = (PLDAPControlW)&SecurityDescriptorControl_DGO;
  ServerControls[2] = 0i64;
  v5 = 0i64;
  v6 = 0;
  if ( _InterlockedIncrement(&dword_1401B8CB0) != 1 )
  {
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x41u, (__int64)&WPP_0f7f6e0c97433b7ed77e9ce4b2e20f93_Traceguids);
    }
    goto LABEL_138;
  }
  if ( !dword_1401B9954 || !(unsigned int)Ds_IsDsServer(0) )
    goto LABEL_138;
  v7 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
  {
    WPP_SF_D(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x42u, (__int64)&WPP_0f7f6e0c97433b7ed77e9ce4b2e20f93_Traceguids, a2);
    v7 = WPP_GLOBAL_Control;
  }
  v48 = a2 & 1;
  if ( (a2 & 1) == 0 )
  {
    a3 = (unsigned int)dword_1401B9714;
    if ( dword_1401B9714 < (unsigned int)(g_dwLastPartitionPollTime + 10) )
    {
      if ( v7 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)v7 + 17) & 0x400) != 0
        && *((_BYTE *)v7 + 65) >= 5u )
      {
        WPP_SF_Ddd(
          *((_QWORD *)v7 + 7),
          0x43u,
          (__int64)&WPP_0f7f6e0c97433b7ed77e9ce4b2e20f93_Traceguids,
          g_dwLastPartitionPollTime);
      }
      goto LABEL_138;
    }
  }
  v8 = pServerLdap;
  if ( ld )
    v8 = ld;
  if ( !v8 )
  {
    v45 = 9717;
    goto LABEL_138;
  }
  memset_0(v51, 0, 0x190ui64);
  v52 = 0;
  CurrentTimeInSeconds = Dns_GetCurrentTimeInSeconds();
  dword_1401B9714 = CurrentTimeInSeconds;
  g_dwLastPartitionPollTime = CurrentTimeInSeconds;
  Ds_GetPartitionsContainerDn(base);
  if ( base[0] )
  {
    res = 0i64;
    v45 = ldap_search_ext_sW(v8, base, 0, 0i64, 0i64, 0, ServerControls, 0i64, &g_LdapTimeout, 0, &res);
    if ( v45 )
      goto LABEL_54;
    entry = ldap_first_entry(v8, res);
    v10 = entry;
    if ( !entry )
      goto LABEL_54;
    valuesW = (const wchar_t **)ldap_get_valuesW(v8, entry, (const PWSTR)L"msDS-Behavior-Version");
    v12 = valuesW;
    if ( valuesW && *valuesW )
    {
      g_ulDsForestVersion = dword_1401B988C == -1 || dword_1401B988C <= (unsigned int)_wtoi(*valuesW)
                          ? _wtoi(*v12)
                          : dword_1401B988C;
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
      {
        WPP_SF_SD(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0x44u,
          (__int64)&WPP_0f7f6e0c97433b7ed77e9ce4b2e20f93_Traceguids,
          L"msDS-Behavior-Version");
      }
    }
    ldap_value_freeW((PWCHAR *)v12);
    v13 = ldap_get_valuesW(v8, v10, (const PWSTR)L"fSMORoleOwner");
    v5 = v13;
    if ( !v13 || !*v13 )
    {
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
      {
        LastError = LdapGetLastError();
        WPP_SF_DSS(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0x45u,
          (__int64)&WPP_0f7f6e0c97433b7ed77e9ce4b2e20f93_Traceguids,
          LastError,
          (__int64)L"fSMORoleOwner",
          (__int64)base);
      }
      goto LABEL_54;
    }
    v14 = (const wchar_t **)Ds_ReadServerObjectFromDs(v8, *v13, &v45);
    if ( v45 )
    {
LABEL_54:
      ldap_value_freeW(v5);
      ldap_msgfree(res);
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
        && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
      {
        if ( g_pFsmo )
          v17 = *(const unsigned __int16 **)(g_pFsmo + 8);
        else
          v17 = L"UNKNOWN";
        WPP_SF_SD(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0x46u,
          (__int64)&WPP_0f7f6e0c97433b7ed77e9ce4b2e20f93_Traceguids,
          v17);
      }
      v45 = 0;
      goto LABEL_62;
    }
    EnterCriticalSection(&g_DpCS);
    v15 = g_pFsmo;
    if ( g_pFsmo && *(_QWORD *)g_pFsmo && *v14 && *(_QWORD *)(g_pFsmo + 8) && v14[1] )
    {
      if ( !_wcsicmp(*(const wchar_t **)g_pFsmo, *v14) && !_wcsicmp(*(const wchar_t **)(g_pFsmo + 8), v14[1]) )
      {
        Ds_FreeServerObject(v14);
        goto LABEL_48;
      }
      v15 = g_pFsmo;
    }
    Timeout_FreeWithFunctionEx(v15, (__int64)Ds_FreeServerObject, (__int64)"ds\\dns\\server\\server\\dpart.c", 3654);
    g_pFsmo = (__int64)v14;
    v6 = 1;
    g_fFsmoDown = 0;
LABEL_48:
    LeaveCriticalSection(&g_DpCS);
    if ( v6 )
    {
      EnterCriticalSection(pcsLdap);
      g_bDisabledFsmo = 1;
      LeaveCriticalSection(pcsLdap);
    }
    goto LABEL_54;
  }
LABEL_62:
  TickCount = GetTickCount();
  inited = ldap_search_init_pageW(
             v8,
             base,
             1u,
             g_szCrossRefFilter,
             &g_CrossRefDesiredAttrs,
             0,
             ServerControls,
             0i64,
             0xB4u,
             0,
             0i64);
  _InterlockedExchangeAdd(&dword_1401C7D48, GetTickCount() - TickCount);
  if ( inited )
  {
    v51[0] = (__int64)inited;
    if ( g_fDnsServiceExit == 1 )
    {
      v26 = WPP_GLOBAL_Control;
LABEL_133:
      if ( v26 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
        && (*((_DWORD *)v26 + 17) & 0x400) != 0
        && *((_BYTE *)v26 + 65) >= 4u )
      {
        WPP_SF_(*((_QWORD *)v26 + 7), 0x48u, (__int64)&WPP_0f7f6e0c97433b7ed77e9ce4b2e20f93_Traceguids);
      }
    }
    else
    {
      v22 = Block;
      while ( 1 )
      {
        NextMessageInSearch = Ds_GetNextMessageInSearch((__int64)v51);
        v45 = NextMessageInSearch;
        if ( NextMessageInSearch )
          break;
        v24 = v47;
        if ( (v47 & 2) != 0 )
          Service_LoadCheckpoint();
        v25 = (LDAPMessage *)v51[2];
        ldap_memfreeW(v22);
        Block = ldap_get_dnW(v8, v25);
        v22 = Block;
        if ( Block )
        {
          for ( i = 0i64; ; i = (__int64 *)v34 )
          {
            Next = Dp_GetNext(i);
            v34 = (__int64)Next;
            if ( !Next )
            {
              if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
                && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
              {
                WPP_SF_S(
                  *((_QWORD *)WPP_GLOBAL_Control + 7),
                  0x4Eu,
                  (__int64)&WPP_0f7f6e0c97433b7ed77e9ce4b2e20f93_Traceguids,
                  v22);
              }
              v35 = Dp_LoadFromCrossRef(v8, v25, 0i64, &v45);
              v36 = v45;
              v37 = v35;
              if ( !v45 )
              {
                if ( v35 )
                {
                  performInitialTasksOnLoadedDp(v8, v24, v35);
                  *(_QWORD *)(v37 + 92) = CurrentTimeInSeconds;
                  Dp_AddToList(v37);
                }
                goto LABEL_114;
              }
              v26 = WPP_GLOBAL_Control;
              if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
                && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
              {
                v38 = 79;
LABEL_94:
                WPP_SF_DS(
                  *((_QWORD *)v26 + 7),
                  v38,
                  (__int64)&WPP_0f7f6e0c97433b7ed77e9ce4b2e20f93_Traceguids,
                  v36,
                  (__int64)v22);
                v26 = WPP_GLOBAL_Control;
                goto LABEL_115;
              }
              goto LABEL_115;
            }
            v28 = Next[6];
            v29 = v22;
            v30 = v28 - (_QWORD)v22;
            do
            {
              v31 = *(WCHAR *)((char *)v29 + v30);
              v32 = *v29 - v31;
              if ( v32 )
                break;
              ++v29;
            }
            while ( v31 );
            if ( !v32 )
              break;
          }
          v39 = WPP_GLOBAL_Control;
          if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
            && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
          {
            WPP_SF_S(
              *((_QWORD *)WPP_GLOBAL_Control + 7),
              0x4Bu,
              (__int64)&WPP_0f7f6e0c97433b7ed77e9ce4b2e20f93_Traceguids,
              v22);
            v39 = WPP_GLOBAL_Control;
          }
          v40 = *(_DWORD *)(v34 + 16);
          if ( (*(_BYTE *)(v34 + 100) & 0x20) != 0
            && v39 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_DWORD *)v39 + 17) & 0x400) != 0
            && *((_BYTE *)v39 + 65) >= 4u )
          {
            WPP_SF_S(*((_QWORD *)v39 + 7), 0x4Cu, (__int64)&WPP_0f7f6e0c97433b7ed77e9ce4b2e20f93_Traceguids, v22);
          }
          Dp_LoadFromCrossRef(v8, v25, v34, &v45);
          *(_DWORD *)(v34 + 96) = 0;
          v36 = v45;
          *(_DWORD *)(v34 + 92) = CurrentTimeInSeconds;
          if ( !v36 )
          {
            if ( v40 && !*(_DWORD *)(v34 + 16) )
              performInitialTasksOnLoadedDp(v8, v47, v34);
            goto LABEL_114;
          }
          v26 = WPP_GLOBAL_Control;
          if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
            && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
          {
            v38 = 77;
            goto LABEL_94;
          }
        }
        else
        {
          v26 = WPP_GLOBAL_Control;
          if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
            && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
          {
            WPP_SF_q(
              *((_QWORD *)WPP_GLOBAL_Control + 7),
              0x4Au,
              (__int64)&WPP_0f7f6e0c97433b7ed77e9ce4b2e20f93_Traceguids,
              v25);
LABEL_114:
            v26 = WPP_GLOBAL_Control;
          }
        }
LABEL_115:
        if ( g_fDnsServiceExit == 1 )
          goto LABEL_133;
      }
      if ( NextMessageInSearch == 1168897 )
      {
        v45 = 0;
        for ( j = 0i64; ; j = v42 )
        {
          v42 = Dp_GetNext(j);
          if ( !v42 )
            break;
          if ( *((_DWORD *)v42 + 23) != CurrentTimeInSeconds )
          {
            if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
              && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
              && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
            {
              WPP_SF_S(
                *((_QWORD *)WPP_GLOBAL_Control + 7),
                0x50u,
                (__int64)&WPP_0f7f6e0c97433b7ed77e9ce4b2e20f93_Traceguids,
                (const unsigned __int16 *)v42[5]);
            }
            *((_DWORD *)v42 + 25) |= 0x20u;
          }
        }
        Dp_MigrateDcpromoZones(v48);
      }
      else if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
             && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
             && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
      {
        WPP_SF_D(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0x49u,
          (__int64)&WPP_0f7f6e0c97433b7ed77e9ce4b2e20f93_Traceguids,
          NextMessageInSearch);
      }
    }
  }
  else
  {
    v20 = LdapGetLastError();
    v21 = v20;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
    {
      WPP_SF_D(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x47u,
        (__int64)&WPP_0f7f6e0c97433b7ed77e9ce4b2e20f93_Traceguids,
        v20);
    }
    v45 = Ds_ErrorHandler(v21, (__int64)base, v8, 0);
  }
  ldap_memfreeW(Block);
  ldap_value_freeW(0i64);
  Ds_CleanupSearchBlob((__int64)v51);
LABEL_138:
  _InterlockedDecrement(&dword_1401B8CB0);
  v43 = v45;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
  {
    WPP_SF_LD(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x51u, a3, v45);
  }
  return v43;
}
// 14003143E: variable 'a3' is possibly undefined
// 14018B698: using guessed type wchar_t aUnknown_0[8];
// 1401B7F3C: using guessed type int g_ulDsForestVersion;
// 1401B8CB0: using guessed type int dword_1401B8CB0;
// 1401B8CD8: using guessed type int g_dwLastPartitionPollTime;
// 1401B8CF8: using guessed type int g_bDisabledFsmo;
// 1401B8CFC: using guessed type int g_fFsmoDown;
// 1401B8D08: using guessed type __int64 g_pFsmo;
// 1401B9714: using guessed type int dword_1401B9714;
// 1401B988C: using guessed type int dword_1401B988C;
// 1401B9954: using guessed type int dword_1401B9954;
// 1401B9A40: using guessed type int g_fDnsServiceExit;
// 1401C7D48: using guessed type int dword_1401C7D48;
// 1401EC420: using guessed type __int64 NoDsSvrReferralControl;
// 1401EC440: using guessed type __int64 SecurityDescriptorControl_DGO;
