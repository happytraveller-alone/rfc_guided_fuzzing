//----- (00000001400AA2A0) ----------------------------------------------------
__int64 __fastcall Rpc_SetRRL(__int64 a1, __int64 a2, __int64 a3, __int64 a4, int a5, struct _DnsRRLParams_ *a6)
{
  struct _DnsRRLParams_ *v6; // rdi
  CDnsRRLParameters *v7; // rcx
  unsigned int RRLParams; // ebx
  CDnsRRLParameters *v9; // rcx
  CDnsClientSubnetRecordsTrie *v10; // rcx
  unsigned __int16 v11; // dx
  CDnsRRLParameters *v12; // rcx
  __int64 v13; // rdx
  const char *v14; // rax
  const char *v15; // rcx
  const char *v16; // rax
  int v17; // ecx
  struct _DnsRRLParams_ *v19[2]; // [rsp+60h] [rbp-10h] BYREF

  v19[0] = 0i64;
  v6 = 0i64;
  RRLParams = DnsRRL_ValidateRRLParameters(a6);
  if ( !RRLParams )
  {
    if ( *((_DWORD *)a6 + 10) == 1 )
    {
      RRLParams = DnsRRL_ResetParamsToDefault(v7);
      if ( RRLParams )
      {
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
        {
          WPP_SF_D(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            0x4Eu,
            (__int64)&WPP_8dcaf0ee02573174dfb45ec0cfad4f2e_Traceguids,
            RRLParams);
        }
        goto LABEL_64;
      }
      RRLParams = CDnsRRLParameters::GetRRLParams(v9, v19);
      if ( RRLParams )
      {
        v10 = WPP_GLOBAL_Control;
        if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          || (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) == 0
          || *((_BYTE *)WPP_GLOBAL_Control + 65) < 2u )
        {
          goto LABEL_18;
        }
        v11 = 79;
LABEL_17:
        WPP_SF_D(*((_QWORD *)v10 + 7), v11, (__int64)&WPP_8dcaf0ee02573174dfb45ec0cfad4f2e_Traceguids, RRLParams);
LABEL_18:
        v6 = v19[0];
LABEL_64:
        MIDL_user_free(v6);
        return RRLParams;
      }
    }
    else if ( (*((_DWORD *)a6 + 9) & 0x100) != 0 )
    {
      if ( *((_DWORD *)a6 + 8) == 2 )
      {
        if ( gDnsRRLInitStatus )
          DisableRRL();
        RRLParams = DnsRRL_UpdateAndGetRRLParams(a6, v19);
        if ( RRLParams )
        {
          v10 = WPP_GLOBAL_Control;
          if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            || (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) == 0
            || *((_BYTE *)WPP_GLOBAL_Control + 65) < 2u )
          {
            goto LABEL_18;
          }
          v11 = 81;
          goto LABEL_17;
        }
      }
      else
      {
        if ( *((_DWORD *)a6 + 8) > 1u )
        {
LABEL_51:
          v13 = *((unsigned int *)v6 + 8);
          v14 = "LogOnly";
          v15 = "Enabled";
          if ( (_DWORD)v13 )
            v14 = 0i64;
          if ( (_DWORD)v13 != 1 )
            v15 = v14;
          v16 = "Disabled";
          if ( (_DWORD)v13 != 2 )
            v16 = v15;
          if ( (dword_1401B9104 & 0x2000) != 0 )
            Template_sqqqqqqqqs(
              (__int64)v15,
              v13,
              Str,
              *(_DWORD *)v6,
              *((_DWORD *)v6 + 1),
              *((_DWORD *)v6 + 2),
              *((_DWORD *)v6 + 3),
              *((_DWORD *)v6 + 5),
              *((_DWORD *)v6 + 4),
              *((_DWORD *)v6 + 6),
              *((_DWORD *)v6 + 7),
              v16);
          if ( g_isRegisteredForUTC == 1 )
          {
            dword_1401B95C8 = *((_DWORD *)v6 + 2);
            dword_1401B95CC = *((_DWORD *)v6 + 3);
            v17 = *((_DWORD *)v6 + 8);
            if ( v17 )
            {
              if ( v17 == 1 )
                qword_1401B95D0 = 0x100000000i64;
            }
            else
            {
              qword_1401B95D0 = 1i64;
            }
          }
          goto LABEL_64;
        }
        if ( gDnsRRLInitStatus )
        {
          RRLParams = DnsRRL_UpdateAndGetRRLParams(a6, v19);
          if ( RRLParams )
          {
            v10 = WPP_GLOBAL_Control;
            if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
              || (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) == 0
              || *((_BYTE *)WPP_GLOBAL_Control + 65) < 2u )
            {
              goto LABEL_18;
            }
            v11 = 84;
            goto LABEL_17;
          }
        }
        else
        {
          RRLParams = InitializeRRL(a6, 0);
          if ( RRLParams )
          {
            if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
              && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0
              && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
            {
              WPP_SF_D(
                *((_QWORD *)WPP_GLOBAL_Control + 7),
                0x52u,
                (__int64)&WPP_8dcaf0ee02573174dfb45ec0cfad4f2e_Traceguids,
                RRLParams);
            }
            goto LABEL_64;
          }
          RRLParams = CDnsRRLParameters::GetRRLParams(v12, v19);
          if ( RRLParams )
          {
            v10 = WPP_GLOBAL_Control;
            if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
              || (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) == 0
              || *((_BYTE *)WPP_GLOBAL_Control + 65) < 2u )
            {
              goto LABEL_18;
            }
            v11 = 83;
            goto LABEL_17;
          }
        }
      }
    }
    else
    {
      RRLParams = DnsRRL_UpdateAndGetRRLParams(a6, v19);
      if ( RRLParams )
      {
        v10 = WPP_GLOBAL_Control;
        if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          || (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) == 0
          || *((_BYTE *)WPP_GLOBAL_Control + 65) < 2u )
        {
          goto LABEL_18;
        }
        v11 = 80;
        goto LABEL_17;
      }
    }
    v6 = v19[0];
    goto LABEL_51;
  }
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
  {
    WPP_SF_D(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x4Du,
      (__int64)&WPP_8dcaf0ee02573174dfb45ec0cfad4f2e_Traceguids,
      RRLParams);
  }
  return RRLParams;
}
// 1400AA328: variable 'v7' is possibly undefined
// 1400AA37F: variable 'v9' is possibly undefined
// 1400AA4F8: variable 'v12' is possibly undefined
// 1401B9104: using guessed type int dword_1401B9104;
// 1401B9190: using guessed type int g_isRegisteredForUTC;
// 1401B9254: using guessed type int gDnsRRLInitStatus;
// 1401B95C8: using guessed type int dword_1401B95C8;
// 1401B95CC: using guessed type int dword_1401B95CC;
// 1401B95D0: using guessed type __int64 qword_1401B95D0;
