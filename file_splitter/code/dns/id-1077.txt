//----- (000000014008C224) ----------------------------------------------------
__int64 __fastcall RR_ListDeleteTypeNotInList(__int64 a1, unsigned __int16 a2, __int16 a3, __int64 a4, unsigned int a5)
{
  int v6; // r13d
  int v8; // ebp
  bool v9; // zf
  __int64 v10; // rdi
  _QWORD *v11; // r14
  __int16 v12; // bp
  __int64 v13; // r12
  bool v14; // cc
  unsigned int v15; // eax
  _QWORD *v16; // rcx
  __int64 v17; // rax
  __int64 v18; // rcx
  int v20; // [rsp+70h] [rbp+8h] BYREF
  __int16 v21; // [rsp+80h] [rbp+18h]
  _QWORD *v22; // [rsp+88h] [rbp+20h]

  v22 = (_QWORD *)a4;
  v21 = a3;
  v6 = 0;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 8) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_dqd(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x3Au,
      (__int64)&WPP_10d39582251c332017bd035d2c946054_Traceguids,
      a2);
  }
  v20 = -1;
  acquireUpdate(DbaseLock, 0xFFFFFFFF, (unsigned int *)&v20, 1);
  if ( !a1 || (v8 = 1, !*(_QWORD *)(a1 + 64)) )
    v8 = 0;
  v9 = (*(_BYTE *)(a1 + 92) & 1) == 0;
  v20 = v8;
  *(_DWORD *)(a1 + 76) = 0;
  if ( !v9 )
  {
    RR_CheckNameErrorTimeout(a1, 1, 0, 0i64);
    v20 = -1;
    releaseUpdate(DbaseLock, (unsigned int *)&v20, 1);
    return 0i64;
  }
  v10 = *(_QWORD *)(a1 + 64);
  v11 = 0i64;
  if ( !v10 )
    goto LABEL_33;
  v12 = v21;
  do
  {
    v13 = *(_QWORD *)v10;
    v14 = *(_WORD *)(v10 + 12) <= a2;
    if ( *(_WORD *)(v10 + 12) == a2 )
    {
      if ( *(_BYTE *)(v10 + 8) != 8 && (!v12 || a2 == 46 && ntohs(*(_WORD *)(v10 + 56)) == v12) )
      {
        v15 = 0;
        if ( !a5 )
          goto LABEL_22;
        v16 = v22;
        do
        {
          if ( *v16 == v10 )
            break;
          ++v15;
          ++v16;
        }
        while ( v15 < a5 );
        if ( v15 >= a5 )
        {
LABEL_22:
          if ( !v6 )
          {
            Dbase_LockEx(a1, 2, (__int64)"ds\\dns\\server\\server\\rrlist.c", 125);
            v6 = 1;
          }
          v17 = *(_QWORD *)v10;
          if ( v11 )
            *v11 = v17;
          else
            *(_QWORD *)(a1 + 64) = v17;
          RR_Free(v10);
          goto LABEL_31;
        }
      }
      v14 = *(_WORD *)(v10 + 12) <= a2;
    }
    if ( !v14 )
      break;
    v11 = (_QWORD *)v10;
LABEL_31:
    v10 = v13;
  }
  while ( v13 );
  v8 = v20;
LABEL_33:
  RR_ListResetNodeFlags(a1);
  NTree_ChangeAncestorCounters((volatile signed __int32 **)a1, v8);
  if ( v6 )
    Dbase_UnlockEx(v18, 2, (__int64)"ds\\dns\\server\\server\\rrlist.c", 169);
  v20 = -1;
  releaseUpdate(DbaseLock, (unsigned int *)&v20, 1);
  insertNodeIntoTimeoutSystem(a1);
  return 0i64;
}
// 14008C408: variable 'v18' is possibly undefined
// 1401EC5E8: using guessed type __int64 DbaseLock;
