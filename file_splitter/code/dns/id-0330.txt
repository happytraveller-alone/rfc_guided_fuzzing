//----- (000000014002C9F4) ----------------------------------------------------
__int64 __fastcall Dnssec_TestNSECType(__int64 a1, unsigned __int16 a2)
{
  unsigned int v2; // r14d
  unsigned __int8 v3; // si
  unsigned __int8 v4; // bp
  __int16 v6; // cx
  unsigned __int16 v7; // ax
  bool v8; // cf
  unsigned __int64 v9; // r8
  _BYTE *v10; // rdi
  _BYTE *v11; // rax
  __int16 v12; // cx
  int v13; // edx
  _BYTE *v14; // rax
  CDnsClientSubnetRecordsTrie *v15; // r10
  const char *v16; // r9

  v2 = 0;
  v3 = 0;
  v4 = a2;
  if ( !a1 )
    goto LABEL_27;
  v6 = *(_WORD *)(a1 + 12);
  if ( v6 == 47 )
  {
    v7 = *(_WORD *)(a1 + 14);
    v8 = v7 < 2u;
  }
  else
  {
    if ( v6 != 50 )
    {
LABEL_27:
      v15 = WPP_GLOBAL_Control;
      goto LABEL_28;
    }
    v7 = *(_WORD *)(a1 + 14);
    v8 = v7 < 7u;
  }
  if ( v8 )
    goto LABEL_27;
  v9 = v7 + a1 + 56;
  if ( v6 == 47 )
    v10 = (_BYTE *)(*(unsigned __int8 *)(a1 + 56) + a1 + 58);
  else
    v10 = (_BYTE *)(*(unsigned __int8 *)(a1 + 60) + a1 + *(unsigned __int8 *)(a1 + 61) + 62i64);
  v11 = v10 + 1;
  v12 = HIBYTE(a2);
  while ( 1 )
  {
    if ( (unsigned __int64)v11 >= v9 )
      goto LABEL_22;
    v13 = (unsigned __int8)v10[1];
    v14 = &v10[v13 + 2];
    if ( v14 < v10 || (unsigned __int64)v14 > v9 )
      break;
    if ( !(_BYTE)v13 )
    {
      v15 = WPP_GLOBAL_Control;
      if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control )
        return v2;
      if ( (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x100000) != 0 && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
      {
        WPP_SF_q(
          *((_QWORD *)WPP_GLOBAL_Control + 7),
          0xBu,
          (__int64)&WPP_6011863fbad53acdbabc1994c6954de9_Traceguids,
          a1);
        goto LABEL_22;
      }
LABEL_23:
      if ( v15 == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control )
        return v2;
      if ( (*((_DWORD *)v15 + 17) & 0x100000) != 0 && *((_BYTE *)v15 + 65) >= 4u )
      {
        WPP_SF_q(*((_QWORD *)v15 + 7), 0xCu, (__int64)&WPP_6011863fbad53acdbabc1994c6954de9_Traceguids, a1);
        goto LABEL_27;
      }
      goto LABEL_28;
    }
    if ( *v10 == (_BYTE)v12 )
    {
      v3 = v10[1];
      goto LABEL_39;
    }
    v10 += v13 + 2;
    v11 = v14 + 1;
  }
  v15 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control )
    return v2;
  if ( (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x100000) == 0 || *((_BYTE *)WPP_GLOBAL_Control + 65) < 2u )
    goto LABEL_23;
  WPP_SF_q(*((_QWORD *)WPP_GLOBAL_Control + 7), 0xAu, (__int64)&WPP_6011863fbad53acdbabc1994c6954de9_Traceguids, a1);
LABEL_39:
  if ( !v3 )
  {
LABEL_22:
    v15 = WPP_GLOBAL_Control;
    goto LABEL_23;
  }
  if ( v3 <= 0x20u )
  {
    if ( (unsigned __int8)(v4 >> 3) < v3 )
    {
      if ( ((unsigned __int8)(128 >> (v4 - 8 * (v4 >> 3))) & v10[(v4 >> 3) + 2]) != 0 )
        v2 = 1;
      goto LABEL_27;
    }
    v15 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control )
      return v2;
    if ( (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x100000) != 0 && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_dqd(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0xEu,
        (__int64)&WPP_6011863fbad53acdbabc1994c6954de9_Traceguids,
        v4);
      goto LABEL_27;
    }
  }
  else
  {
    v15 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control )
      return v2;
    if ( (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x100000) != 0 && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
    {
      WPP_SF_Dq(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0xDu,
        (__int64)&WPP_6011863fbad53acdbabc1994c6954de9_Traceguids,
        v3);
      goto LABEL_27;
    }
  }
LABEL_28:
  if ( v15 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)v15 + 17) & 0x100000) != 0
    && *((_BYTE *)v15 + 65) >= 4u )
  {
    v16 = "FALSE";
    if ( v2 )
      v16 = "TRUE";
    WPP_SF_sDq(*((_QWORD *)v15 + 7), 0xFu, (__int64)&WPP_6011863fbad53acdbabc1994c6954de9_Traceguids, v16);
  }
  return v2;
}
// 14002CA85: conditional instruction was optimized away because cx.2==32
