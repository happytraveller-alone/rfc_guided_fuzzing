//----- (00000001400AAC40) ----------------------------------------------------
__int64 __fastcall Rpc_GetZoneStatistics(
        int a1,
        __int64 a2,
        __int64 a3,
        __int64 a4,
        int a5,
        __int64 a6,
        _DWORD *a7,
        volatile signed __int64 **a8)
{
  unsigned int v9; // ebx
  __int64 v10; // rbp
  volatile signed __int64 *zero; // rax
  volatile signed __int64 *v12; // rsi
  CDnsClientSubnetRecordsTrie *v13; // rcx
  unsigned __int16 v14; // dx
  _OWORD *v15; // rax
  volatile signed __int64 *v16; // rcx
  __int128 v17; // xmm1
  char v18; // r9
  _OWORD *v19; // rax
  volatile signed __int64 *v20; // rcx
  __int128 v21; // xmm1

  if ( !a3 )
    return 9611;
  v10 = 11i64;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_DsD(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0xBu,
      (__int64)&WPP_04ba7adc0f233f32aafbb90a0c0540d0_Traceguids,
      a1,
      *(_QWORD *)(a3 + 16));
  }
  if ( (unsigned int)(*(_DWORD *)(a3 + 372) - 1) > 1 )
    return 9611;
  if ( !*(_QWORD *)(a3 + 1648) )
    return 13;
  zero = (volatile signed __int64 *)MIDL_user_allocate_zero(0x5A8ui64);
  v12 = zero;
  if ( !zero )
    return 14;
  *(_DWORD *)zero = 1;
  if ( (_DWORD)a6 == 1 )
  {
    v9 = Zone_LockForWriteEx(a3, 1, 0x2710u, (__int64)"ds\\dns\\server\\server\\stats.c", 164);
    if ( !v9 )
    {
      v15 = *(_OWORD **)(a3 + 1648);
      v16 = v12;
      do
      {
        *(_OWORD *)v16 = *v15;
        *((_OWORD *)v16 + 1) = v15[1];
        *((_OWORD *)v16 + 2) = v15[2];
        *((_OWORD *)v16 + 3) = v15[3];
        *((_OWORD *)v16 + 4) = v15[4];
        *((_OWORD *)v16 + 5) = v15[5];
        *((_OWORD *)v16 + 6) = v15[6];
        v16 += 16;
        v17 = v15[7];
        v15 += 8;
        *((_OWORD *)v16 - 1) = v17;
        --v10;
      }
      while ( v10 );
      *(_OWORD *)v16 = *v15;
      *((_OWORD *)v16 + 1) = v15[1];
      *((_QWORD *)v16 + 4) = *((_QWORD *)v15 + 4);
      if ( *(_QWORD *)(a3 + 184) && (v9 = Zone_AggregateZoneScopeStats(a3, v12, 1)) != 0 )
      {
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x10) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
        {
          WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0xDu, (__int64)&WPP_04ba7adc0f233f32aafbb90a0c0540d0_Traceguids);
        }
        v18 = -68;
      }
      else
      {
        *a8 = v12;
        *a7 = 53;
        Zone_Stats_Initialize(*(_QWORD *)(a3 + 1648));
        v18 = -57;
      }
      Zone_UnlockAfterWriteEx(a3, 1, (__int64)"ds\\dns\\server\\server\\stats.c", v18);
      goto LABEL_47;
    }
    v13 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x10) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      v14 = 12;
LABEL_18:
      WPP_SF_(*((_QWORD *)v13 + 7), v14, (__int64)&WPP_04ba7adc0f233f32aafbb90a0c0540d0_Traceguids);
    }
  }
  else if ( (_DWORD)a6 )
  {
    v9 = 87;
  }
  else
  {
    v9 = Zone_LockForReadEx(a3, 0, 0x3E8u);
    if ( !v9 )
    {
      v19 = *(_OWORD **)(a3 + 1648);
      v20 = v12;
      do
      {
        *(_OWORD *)v20 = *v19;
        *((_OWORD *)v20 + 1) = v19[1];
        *((_OWORD *)v20 + 2) = v19[2];
        *((_OWORD *)v20 + 3) = v19[3];
        *((_OWORD *)v20 + 4) = v19[4];
        *((_OWORD *)v20 + 5) = v19[5];
        *((_OWORD *)v20 + 6) = v19[6];
        v20 += 16;
        v21 = v19[7];
        v19 += 8;
        *((_OWORD *)v20 - 1) = v21;
        --v10;
      }
      while ( v10 );
      *(_OWORD *)v20 = *v19;
      *((_OWORD *)v20 + 1) = v19[1];
      *((_QWORD *)v20 + 4) = *((_QWORD *)v19 + 4);
      if ( *(_QWORD *)(a3 + 184) && (v9 = Zone_AggregateZoneScopeStats(a3, v12, 0)) != 0 )
      {
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x10) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
        {
          WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0xFu, (__int64)&WPP_04ba7adc0f233f32aafbb90a0c0540d0_Traceguids);
        }
      }
      else
      {
        *a8 = v12;
        *a7 = 53;
      }
      Zone_UnlockAfterReadEx(a3, 0);
      goto LABEL_47;
    }
    v13 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 0x10) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      v14 = 14;
      goto LABEL_18;
    }
  }
LABEL_47:
  if ( v9 )
    MIDL_user_free((void *)v12);
  return v9;
}
