//----- (0000000140085FD4) ----------------------------------------------------
_BYTE *__fastcall Ds_CreateRecordFromDsRecordNoZone(__int64 a1)
{
  unsigned __int16 v3; // bp
  unsigned __int16 v4; // si
  const char *v5; // rax
  _BYTE *v6; // rax
  _BYTE *v7; // rbx

  if ( *(_BYTE *)(a1 + 4) != 5 )
    return 0i64;
  v3 = *(_WORD *)(a1 + 2);
  v4 = *(_WORD *)a1;
  if ( (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u
    && WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    v5 = (const char *)DnsRecordStringForType(v3);
    WPP_SF_sd(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x12u, (__int64)&WPP_ee6cca70a61333d4c68f5849229f01e3_Traceguids, v5);
  }
  v6 = RR_AllocateEx(v4, 0, 0x1Cu);
  v7 = v6;
  if ( !v6 )
    return 0i64;
  *((_WORD *)v6 + 6) = v3;
  *((_WORD *)v6 + 7) = v4;
  *((_DWORD *)v6 + 5) = *(_DWORD *)(a1 + 12);
  *((_DWORD *)v6 + 6) = *(_DWORD *)(a1 + 20);
  memcpy_0(v6 + 56, (const void *)(a1 + 24), v4);
  return v7;
}
// 140183D38: using guessed type __int64 __fastcall DnsRecordStringForType(_QWORD);
