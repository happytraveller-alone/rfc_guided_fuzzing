//----- (000000014010D5B4) ----------------------------------------------------
__int64 **__fastcall std::_Tree<std::_Tmap_traits<unsigned char,bool,std::less<unsigned char>,std::allocator<std::pair<unsigned char const,bool>>,0>>::_Insert(
        __int64 a1,
        __int64 **a2,
        __int64 *a3,
        _BYTE *a4)
{
  __int64 **v5; // rdi
  __int64 v6; // r11
  __int64 *v7; // r9
  char v8; // r8
  __int64 *v9; // rcx
  __int64 *v10; // rsi
  unsigned __int8 v11; // bl
  bool v12; // cf
  __int64 *v13; // rax
  __int64 k; // rax
  __int64 j; // rdx
  __int64 v16; // rax
  __int64 m; // rax
  __int64 v18; // rax
  bool v19; // r8
  unsigned __int8 v20; // dl
  __int64 *v21; // rbx
  char *v22; // rdx
  __int64 *v23; // rax
  __int64 i; // rax
  _QWORD *v26; // [rsp+20h] [rbp-28h]
  char v27; // [rsp+50h] [rbp+8h] BYREF
  char v28; // [rsp+68h] [rbp+20h] BYREF

  v5 = a2;
  v6 = a1;
  if ( *(_QWORD *)(a1 + 16) )
  {
    v9 = *(__int64 **)(a1 + 8);
    v10 = (__int64 *)*v9;
    if ( a3 == (__int64 *)*v9 )
    {
      if ( a4[24] < *((_BYTE *)a3 + 24) )
      {
        v26 = a4;
        v7 = a3;
        v8 = 1;
LABEL_8:
        a1 = v6;
        goto LABEL_4;
      }
      goto LABEL_45;
    }
    if ( a3 == v9 )
    {
      v7 = (__int64 *)v9[2];
      if ( *((_BYTE *)v7 + 24) < a4[24] )
      {
        v26 = a4;
        v8 = 0;
        goto LABEL_8;
      }
LABEL_45:
      v18 = v9[1];
      v19 = 1;
      if ( !*(_BYTE *)(v18 + 27) )
      {
        v20 = a4[24];
        do
        {
          v9 = (__int64 *)v18;
          v19 = v20 < *(_BYTE *)(v18 + 24);
          if ( v20 >= *(_BYTE *)(v18 + 24) )
            v18 = *(_QWORD *)(v18 + 16);
          else
            v18 = *(_QWORD *)v18;
        }
        while ( !*(_BYTE *)(v18 + 27) );
      }
      v21 = v9;
      if ( v19 )
      {
        if ( v9 == v10 )
        {
          v19 = 1;
          v22 = &v27;
          goto LABEL_54;
        }
        if ( *((_BYTE *)v9 + 27) )
        {
          v21 = (__int64 *)v9[2];
        }
        else
        {
          v23 = (__int64 *)*v9;
          if ( *(_BYTE *)(*v9 + 27) )
          {
            for ( i = v9[1]; !*(_BYTE *)(i + 27) && v21 == *(__int64 **)i; i = *(_QWORD *)(i + 8) )
              v21 = (__int64 *)i;
            if ( !*((_BYTE *)v21 + 27) )
              v21 = (__int64 *)i;
          }
          else
          {
            do
            {
              v21 = v23;
              v23 = (__int64 *)v23[2];
            }
            while ( !*((_BYTE *)v23 + 27) );
          }
        }
      }
      if ( *((_BYTE *)v21 + 24) >= a4[24] )
      {
        operator delete(a4);
        goto LABEL_69;
      }
      v22 = &v28;
LABEL_54:
      v21 = (__int64 *)*std::_Tree<std::_Tmap_traits<unsigned char,bool,std::less<unsigned char>,std::allocator<std::pair<unsigned char const,bool>>,0>>::_Insert(
                          v6,
                          v22,
                          v19,
                          v9,
                          a4);
LABEL_69:
      *v5 = v21;
      return v5;
    }
    v11 = a4[24];
    v12 = *((_BYTE *)a3 + 24) < v11;
    if ( *((_BYTE *)a3 + 24) > v11 )
    {
      v13 = a3;
      if ( *((_BYTE *)a3 + 27) )
      {
        v7 = (__int64 *)a3[2];
      }
      else
      {
        v7 = (__int64 *)*a3;
        if ( *(_BYTE *)(*a3 + 27) )
        {
          for ( j = a3[1]; !*(_BYTE *)(j + 27) && v13 == *(__int64 **)j; j = *(_QWORD *)(j + 8) )
            v13 = (__int64 *)j;
          v7 = v13;
          if ( !*((_BYTE *)v13 + 27) )
            v7 = (__int64 *)j;
        }
        else
        {
          for ( k = v7[2]; !*(_BYTE *)(k + 27); k = *(_QWORD *)(k + 16) )
            v7 = (__int64 *)k;
        }
      }
      if ( *((_BYTE *)v7 + 24) < v11 )
      {
        a2 = v5;
        v26 = a4;
        a1 = v6;
        if ( !*(_BYTE *)(v7[2] + 27) )
        {
          v7 = a3;
          goto LABEL_3;
        }
        goto LABEL_28;
      }
      v12 = *((_BYTE *)a3 + 24) < v11;
    }
    if ( !v12 )
      goto LABEL_45;
    v7 = a3;
    if ( !*((_BYTE *)a3 + 27) )
    {
      v16 = a3[2];
      if ( *(_BYTE *)(v16 + 27) )
      {
        for ( m = a3[1]; !*(_BYTE *)(m + 27) && v7 == *(__int64 **)(m + 16); m = *(_QWORD *)(m + 8) )
          v7 = (__int64 *)m;
        v7 = (__int64 *)m;
      }
      else
      {
        do
        {
          v7 = (__int64 *)v16;
          v16 = *(_QWORD *)v16;
        }
        while ( !*(_BYTE *)(v16 + 27) );
      }
    }
    if ( v7 != v9 && v11 >= *((_BYTE *)v7 + 24) )
      goto LABEL_45;
    a2 = v5;
    v26 = a4;
    a1 = v6;
    if ( !*(_BYTE *)(a3[2] + 27) )
      goto LABEL_3;
    v7 = a3;
LABEL_28:
    v8 = 0;
    goto LABEL_4;
  }
  v26 = a4;
  v7 = *(__int64 **)(a1 + 8);
LABEL_3:
  v8 = 1;
LABEL_4:
  std::_Tree<std::_Tmap_traits<unsigned char,bool,std::less<unsigned char>,std::allocator<std::pair<unsigned char const,bool>>,0>>::_Insert(
    a1,
    a2,
    v8,
    v7,
    v26);
  return v5;
}
// 140184CA8: using guessed type void __stdcall operator delete(void *);
