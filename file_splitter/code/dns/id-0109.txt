//----- (000000014000E3C0) ----------------------------------------------------
void Dnssrv_RemoveZoneNsRecords()
{
  CHAR *v0; // r12
  _QWORD *v1; // r13
  int v2; // r9d
  char *v3; // rcx
  __int64 v4; // r8
  char v5; // al
  CDnsClientSubnetRecordsTrie *v6; // rcx
  __int64 v7; // r14
  unsigned int v8; // r15d
  const unsigned __int16 **NextZone; // rbx
  int v10; // esi
  unsigned int v11; // edi
  unsigned int v12; // edx
  __int64 v13; // rdx
  CDnsClientSubnetRecordsTrie *v14; // rcx
  __int64 v15; // r15
  int v16; // eax
  unsigned int v17; // r12d
  __int64 NextRecord; // r14
  unsigned int CurrentTimeInSeconds; // eax
  __int64 v20; // rdx
  __int64 v21; // rcx
  unsigned __int16 *RpcTargetForRR; // rdi
  __int64 v23; // r8
  int updated; // esi
  CDnsClientSubnetRecordsTrie *v25; // rcx
  bool v26; // zf
  CDnsClientSubnetRecordsTrie *v27; // rcx
  CDnsClientSubnetRecordsTrie *v28; // rcx
  unsigned __int16 v29; // dx
  __int64 v30; // [rsp+30h] [rbp-D0h]
  unsigned int v31; // [rsp+40h] [rbp-C0h]
  __int64 v32; // [rsp+48h] [rbp-B8h]
  LPCCH v33; // [rsp+50h] [rbp-B0h]
  int v34; // [rsp+58h] [rbp-A8h]
  int v35; // [rsp+5Ch] [rbp-A4h]
  _QWORD *v36; // [rsp+60h] [rbp-A0h] BYREF
  char v37[256]; // [rsp+70h] [rbp-90h] BYREF

  v0 = (CHAR *)Str;
  v33 = Str;
  v1 = 0i64;
  memset_0(v37, 0, sizeof(v37));
  if ( v0 )
  {
    v2 = 0;
    v3 = v37;
    v4 = 256i64;
    do
    {
      if ( v4 == -2147483390 )
        break;
      v5 = v3[v0 - v37];
      if ( !v5 )
        break;
      *v3++ = v5;
      --v4;
    }
    while ( v4 );
    if ( !v4 )
    {
      --v3;
      v2 = -2147024774;
    }
    *v3 = 0;
    if ( v2 < 0 || (int)StringCchCatA(v37, 256i64, ".") < 0 )
      v37[0] = 0;
  }
  v6 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control )
  {
    if ( (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0 && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_s(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x78u,
        (__int64)&WPP_dd5a12aafb1b34b87fc868998e41e2af_Traceguids,
        v37);
      v6 = WPP_GLOBAL_Control;
    }
    if ( v6 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)v6 + 68) & 2) != 0
      && *((_BYTE *)v6 + 65) >= 4u )
    {
      WPP_SF_(*((_QWORD *)v6 + 7), 0x79u, (__int64)&WPP_dd5a12aafb1b34b87fc868998e41e2af_Traceguids);
    }
  }
  dword_1401B9714 = Dns_GetCurrentTimeInSeconds();
  LODWORD(v7) = 0;
  v8 = dword_1401B9714 + 1200;
  v31 = dword_1401B9714 + 1200;
LABEL_20:
  v35 = v7;
  if ( (int)v7 < 2 )
  {
    v7 = (int)v7;
    NextZone = 0i64;
    v32 = (int)v7;
    while ( 1 )
    {
      while ( 1 )
      {
        while ( 1 )
        {
          do
          {
LABEL_22:
            NextZone = Zone_ListGetNextZoneEx(0i64, (__int64 *)NextZone, 0);
            if ( !NextZone )
            {
LABEL_95:
              LODWORD(v7) = v35 + 1;
              goto LABEL_20;
            }
            v10 = 0;
            v34 = 0;
            dword_1401B9714 = Dns_GetCurrentTimeInSeconds();
            v11 = dword_1401B9714;
            v12 = *((_DWORD *)NextZone + 99);
          }
          while ( ((v12 >> 1) & 1) != 0 && !v7 || ((*((_DWORD *)NextZone + 99) >> 1) & 1) == 0 && v7 == 1 );
          if ( (*((_BYTE *)NextZone + 388) & 1) != 0
            && *((_DWORD *)NextZone + 93) == 1
            && !dword_1401B9750
            && !g_fDsReadOnlyDcMode
            && ((_BYTE)NextZone[145] & 0x40) == 0
            && (v12 & 4) == 0
            && NextZone[2] )
          {
            break;
          }
          if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0
            && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
          {
            WPP_SF_s(
              *((_QWORD *)WPP_GLOBAL_Control + 7),
              0x7Au,
              (__int64)&WPP_dd5a12aafb1b34b87fc868998e41e2af_Traceguids,
              (const char *)NextZone[2]);
          }
        }
        Mem_Free(v1, 0i64, 0i64, (__int64)"ds\\dns\\server\\server\\autoconfigure.c", 4201);
        v1 = 0i64;
        v36 = 0i64;
        if ( v11 > v8 )
        {
          if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
            && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0
            && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
          {
            WPP_SF_D(
              *((_QWORD *)WPP_GLOBAL_Control + 7),
              0x7Bu,
              (__int64)&WPP_dd5a12aafb1b34b87fc868998e41e2af_Traceguids,
              1200);
          }
          goto LABEL_95;
        }
        v14 = WPP_GLOBAL_Control;
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
        {
          WPP_SF_s(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            0x7Cu,
            (__int64)&WPP_dd5a12aafb1b34b87fc868998e41e2af_Traceguids,
            (const char *)NextZone[2]);
          v14 = WPP_GLOBAL_Control;
        }
        v15 = (__int64)NextZone[5];
        if ( v15 )
          break;
        v8 = v31;
        if ( v14 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_BYTE *)v14 + 68) & 2) != 0
          && *((_BYTE *)v14 + 65) >= 4u )
        {
          WPP_SF_s(
            *((_QWORD *)v14 + 7),
            0x7Du,
            (__int64)&WPP_dd5a12aafb1b34b87fc868998e41e2af_Traceguids,
            (const char *)NextZone[2]);
        }
      }
      v16 = allocateRpcRecord((CHAR *)NextZone[2], v13, v0, &v36);
      if ( v16 )
        break;
      dword_1401B9714 = Dns_GetCurrentTimeInSeconds();
      v17 = dword_1401B9714 + 240;
      NextRecord = RR_FindNextRecordEx(v15, 0, 2u, 0i64, 0, 0);
      if ( NextRecord )
      {
        v1 = v36;
        while ( 1 )
        {
          CurrentTimeInSeconds = Dns_GetCurrentTimeInSeconds();
          dword_1401B9714 = CurrentTimeInSeconds;
          if ( CurrentTimeInSeconds > v17 || CurrentTimeInSeconds > v31 )
            break;
          if ( v10 >= 3 )
          {
            v28 = WPP_GLOBAL_Control;
            v7 = v32;
            v0 = (CHAR *)v33;
            v8 = v31;
            if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
              && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0
              && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
            {
              v29 = 128;
LABEL_82:
              WPP_SF_s(
                *((_QWORD *)v28 + 7),
                v29,
                (__int64)&WPP_dd5a12aafb1b34b87fc868998e41e2af_Traceguids,
                (const char *)NextZone[2]);
              goto LABEL_22;
            }
            goto LABEL_22;
          }
          RpcTargetForRR = (unsigned __int16 *)getRpcTargetForRR(NextRecord);
          if ( RpcTargetForRR )
          {
            updated = DnssrvUpdateRecordEx(
                        v21,
                        v20,
                        v23,
                        RpcTargetForRR,
                        (const char *)NextZone[2],
                        (const char *)NextZone[2],
                        v30,
                        (__int64)v1);
            v25 = WPP_GLOBAL_Control;
            if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
              && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0
              && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
            {
              WPP_SF_SD(
                *((_QWORD *)WPP_GLOBAL_Control + 7),
                0x82u,
                (__int64)&WPP_dd5a12aafb1b34b87fc868998e41e2af_Traceguids,
                RpcTargetForRR);
            }
            v26 = updated == 0;
            v10 = v34;
            if ( v26 )
            {
              v10 = ++v34;
              DnssrvDeleteRecordSetCreds((__int64)v25, RpcTargetForRR, (const char *)NextZone[2], (__int64)v37, 1u);
              v27 = WPP_GLOBAL_Control;
              if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0
                && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
              {
                WPP_SF_DS(
                  *((_QWORD *)WPP_GLOBAL_Control + 7),
                  0x83u,
                  (__int64)&WPP_dd5a12aafb1b34b87fc868998e41e2af_Traceguids,
                  0,
                  (__int64)RpcTargetForRR);
              }
              DnssrvDeleteRecordSetCreds((__int64)v27, RpcTargetForRR, (const char *)NextZone[2], (__int64)v37, 0x1Cu);
              if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0
                && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
              {
                WPP_SF_DS(
                  *((_QWORD *)WPP_GLOBAL_Control + 7),
                  0x84u,
                  (__int64)&WPP_dd5a12aafb1b34b87fc868998e41e2af_Traceguids,
                  0,
                  (__int64)RpcTargetForRR);
              }
            }
            Mem_Free(RpcTargetForRR, 0i64, 0i64, (__int64)"ds\\dns\\server\\server\\autoconfigure.c", 4343);
          }
          else if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
                 && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0
                 && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
          {
            WPP_SF_q(
              *((_QWORD *)WPP_GLOBAL_Control + 7),
              0x81u,
              (__int64)&WPP_dd5a12aafb1b34b87fc868998e41e2af_Traceguids,
              NextRecord);
          }
          NextRecord = RR_FindNextRecordEx(v15, 0, 2u, NextRecord, 0, 0);
          if ( !NextRecord )
          {
            v7 = v32;
            v0 = (CHAR *)v33;
            goto LABEL_50;
          }
        }
        v28 = WPP_GLOBAL_Control;
        v7 = v32;
        v0 = (CHAR *)v33;
        v8 = v31;
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
        {
          v29 = 127;
          goto LABEL_82;
        }
      }
      else
      {
        v7 = v32;
        v0 = (CHAR *)v33;
LABEL_49:
        v1 = v36;
LABEL_50:
        v8 = v31;
      }
    }
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_D(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x7Eu,
        (__int64)&WPP_dd5a12aafb1b34b87fc868998e41e2af_Traceguids,
        v16);
    }
    goto LABEL_49;
  }
  Mem_Free(v1, 0i64, 0i64, (__int64)"ds\\dns\\server\\server\\autoconfigure.c", 4349);
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x85u, (__int64)&WPP_dd5a12aafb1b34b87fc868998e41e2af_Traceguids);
  }
}
// 14000E681: variable 'v13' is possibly undefined
// 14000E7A2: variable 'v21' is possibly undefined
// 14000E7A2: variable 'v20' is possibly undefined
// 14000E7A2: variable 'v23' is possibly undefined
// 14000E7A2: variable 'v30' is possibly undefined
// 14000E80C: variable 'v25' is possibly undefined
// 14000E863: variable 'v27' is possibly undefined
// 1401B8C94: using guessed type int g_fDsReadOnlyDcMode;
// 1401B9714: using guessed type int dword_1401B9714;
// 1401B9750: using guessed type int dword_1401B9750;
