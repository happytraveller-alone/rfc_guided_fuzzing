//----- (000000014013E658) ----------------------------------------------------
__int64 __fastcall Init_PolicyMap(_QWORD *a1, __int64 a2, int a3)
{
  unsigned int v5; // esi
  _QWORD *v6; // rax
  _QWORD *v7; // rbx
  _QWORD *v8; // rax

  v5 = 0;
  while ( 1 )
  {
    if ( a3 )
    {
      v6 = operator new(0x48ui64, (const struct std::nothrow_t *)&std::nothrow);
      v7 = v6;
      if ( v6 )
      {
        memset_0(v6, 0, 0x48ui64);
        *v7 = 0i64;
        v7[1] = 0i64;
        v7[2] = 0i64;
        v7[4] = 0i64;
        v7[5] = 0i64;
        v7[6] = 0i64;
        v7[8] = 0i64;
      }
      else
      {
        v7 = 0i64;
      }
      *a1 = v7;
    }
    else
    {
      v8 = operator new(0x20ui64, (const struct std::nothrow_t *)&std::nothrow);
      if ( v8 )
        std::map<std::wstring,CDnsPolicy *,CDnsCompareName,std::allocator<std::pair<std::wstring const,CDnsPolicy *>>>::map<std::wstring,CDnsPolicy *,CDnsCompareName,std::allocator<std::pair<std::wstring const,CDnsPolicy *>>>(v8);
      v7 = v8;
      *a1 = v8;
    }
    if ( !v7 )
      break;
    ++v5;
    ++a1;
    if ( v5 >= 5 )
      return 0i64;
  }
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 4) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
  {
    WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x3Cu, (__int64)&WPP_7bc0de5581043365e853c04d44d2eaeb_Traceguids);
  }
  return 14i64;
}
// 14013E6E1: variable 'v8' is possibly undefined
