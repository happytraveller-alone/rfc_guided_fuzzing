//----- (00000001400463EC) ----------------------------------------------------
__int64 __fastcall Ds_UpdateNodeListFromDs(__int64 a1, __int64 a2, int a3)
{
  int v7; // r9d
  __int64 v8; // rdi
  int v9; // eax
  int v10; // r14d
  CDnsClientSubnetRecordsTrie *v11; // rcx
  void *v12; // rax
  void *v13; // rax
  unsigned int v14; // edi
  int v15; // r9d
  __int64 v16[5]; // [rsp+50h] [rbp-B0h] BYREF
  int v17; // [rsp+78h] [rbp-88h]
  char v18[24]; // [rsp+90h] [rbp-70h] BYREF
  __int64 v19; // [rsp+A8h] [rbp-58h]
  int v20; // [rsp+CCh] [rbp-34h]
  unsigned int v21; // [rsp+D0h] [rbp-30h]

  GetTickCount();
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    WPP_SF_s(
      *((_QWORD *)WPP_GLOBAL_Control + 7),
      0x198u,
      (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
      *(const char **)(a1 + 16));
  }
  DS_CreateZoneDsName(a1);
  if ( !*(_QWORD *)(a1 + 840) )
    return 14i64;
  memset_0(v16, 0, 0x40ui64);
  v17 |= 4u;
  memset_0(v18, 0, 0x190ui64);
  v20 = 1;
  v19 = a1;
  if ( !a2 )
  {
    v11 = WPP_GLOBAL_Control;
    goto LABEL_27;
  }
  while ( 1 )
  {
    v8 = *(_QWORD *)(a2 + 8);
    v9 = Ds_BuildNodeUpdateFromDs(a1, v8, (__int64)v16, (__int64)v18);
    v10 = v9;
    if ( v9 != 32 )
      break;
    v11 = WPP_GLOBAL_Control;
    if ( WPP_GLOBAL_Control == (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      || (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) == 0
      || *((_BYTE *)WPP_GLOBAL_Control + 65) < 4u )
    {
      goto LABEL_18;
    }
    if ( v8 )
    {
      v12 = FormatLabelA(*(unsigned __int8 *)(v8 + 101), (const void *)(v8 + 102));
      v11 = WPP_GLOBAL_Control;
    }
    else
    {
      v12 = 0i64;
    }
    WPP_SF_Dsq(
      *((_QWORD *)v11 + 7),
      0x199u,
      (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
      32,
      (__int64)v12);
LABEL_17:
    v11 = WPP_GLOBAL_Control;
LABEL_18:
    ++dword_1401C7CC0;
    a2 = *(_QWORD *)(a2 + 24);
    if ( !a2 )
      goto LABEL_27;
  }
  if ( !v9 )
    goto LABEL_17;
  v11 = WPP_GLOBAL_Control;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
  {
    if ( v8 )
    {
      v13 = FormatLabelA(*(unsigned __int8 *)(v8 + 101), (const void *)(v8 + 102));
      v11 = WPP_GLOBAL_Control;
    }
    else
    {
      v13 = 0i64;
    }
    WPP_SF_Dsq(
      *((_QWORD *)v11 + 7),
      0x19Au,
      (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
      v10,
      (__int64)v13);
    v11 = WPP_GLOBAL_Control;
  }
LABEL_27:
  if ( v16[0] )
  {
    v14 = Up_ApplyUpdatesToDatabase((__int64)v16, a1, a3 & 2 | 0x400004u, v7);
    if ( v14 )
    {
      Up_FreeUpdatesInUpdateList((__int64)v16);
    }
    else
    {
      Zone_UpdateVersionAfterDsRead(a1, v21, 0, 0);
      Up_CompleteZoneUpdate(a1, (__int64)v16, a3 & 0x4000000 | 0xB0000u, v15);
    }
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      GetTickCount();
      WPP_SF_sddddd(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x19Cu,
        (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
        *(const char **)(a1 + 16));
    }
    return v14;
  }
  else
  {
    if ( v11 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)v11 + 17) & 0x400) != 0
      && *((_BYTE *)v11 + 65) >= 4u )
    {
      WPP_SF_s(
        *((_QWORD *)v11 + 7),
        0x19Bu,
        (__int64)&WPP_d0fa00cabf37307abd3d7f77fcc28067_Traceguids,
        *(const char **)(a1 + 16));
    }
    return 0i64;
  }
}
// 1400466B6: ignored the value written to the shadow area of the succeeding call
// 140046631: variable 'v7' is possibly undefined
// 140046666: variable 'v15' is possibly undefined
// 1401C7CC0: using guessed type int dword_1401C7CC0;
