//----- (000000014011CB80) ----------------------------------------------------
__int64 __fastcall Name_ConvertFileNameToCountNameEx(unsigned __int8 *a1, _BYTE *a2, _WORD *a3, int a4)
{
  unsigned int v4; // edi
  CDnsClientSubnetRecordsTrie *v7; // rcx
  __int64 v8; // rbp
  unsigned __int64 v9; // rcx
  const char *v10; // rax
  __int64 result; // rax
  char *QuotedChar; // r12
  unsigned __int8 *v13; // rdx
  unsigned __int8 *v14; // r13
  char *v15; // rbx
  char *v16; // r15
  __int64 v17; // rbp
  unsigned __int16 v18; // di
  int v19; // eax
  bool v20; // zf
  unsigned __int8 v21; // al
  const char *v22; // rax
  const char *v23; // rax
  unsigned __int64 v24; // rbx
  unsigned int v25; // edi
  const char *v26; // r9
  __int64 v27; // [rsp+20h] [rbp-58h]
  char *v28; // [rsp+20h] [rbp-58h]
  __int64 v29; // [rsp+28h] [rbp-50h]
  void *v30; // [rsp+28h] [rbp-50h]
  unsigned __int64 v31; // [rsp+38h] [rbp-40h]
  unsigned __int8 v32; // [rsp+88h] [rbp+10h]

  v4 = (unsigned int)a3;
  v32 = 0;
  v7 = WPP_GLOBAL_Control;
  v8 = -1i64;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 7) & 0x40000) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 25) >= 5u )
  {
    if ( (_DWORD)a3 )
    {
      v9 = (unsigned int)a3;
    }
    else if ( a2 )
    {
      v9 = -1i64;
      do
        ++v9;
      while ( a2[v9] );
    }
    else
    {
      v9 = 0i64;
    }
    v10 = (const char *)FormatLabelA(v9, a2);
    WPP_SF_s(*((_QWORD *)WPP_GLOBAL_Control + 2), 0xFu, (__int64)&WPP_410f52d72e8937ebe6dfc2517de4055a_Traceguids, v10);
    v7 = WPP_GLOBAL_Control;
  }
  if ( !a2 )
  {
    *(_WORD *)a1 = 0;
    result = 0i64;
    a1[2] = 0;
    return result;
  }
  QuotedChar = a2;
  v13 = a1 + 257;
  v14 = a1 + 2;
  v15 = (char *)(a1 + 3);
  if ( !v4 )
  {
    do
      ++v8;
    while ( a2[v8] );
    v4 = v8;
  }
  v31 = v4;
  v16 = &a2[v4];
  while ( 1 )
  {
    if ( QuotedChar < v16 )
    {
      v17 = (unsigned __int8)*QuotedChar;
      a3 = DnsFileCharPropertyTable;
      ++QuotedChar;
      v18 = DnsFileCharPropertyTable[v17];
    }
    else
    {
      LOBYTE(v17) = 0;
      v18 = -24559;
    }
    if ( v7 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)v7 + 28) & 0x20) != 0
      && *((_BYTE *)v7 + 25) >= 5u )
    {
      LODWORD(v29) = v18;
      LOBYTE(v27) = v17;
      WPP_SF_dcd(*((_QWORD *)v7 + 2), (__int64)v13, (__int64)a3, (unsigned __int8)v17, v27, v29);
      v7 = WPP_GLOBAL_Control;
      v13 = a1 + 257;
    }
    if ( (v18 & 0x1C) == 0 )
    {
      if ( v15 >= (char *)v13 )
        goto LABEL_55;
      goto LABEL_27;
    }
    if ( (v18 & 4) != 0 )
    {
      if ( v15 >= (char *)v13 )
        goto LABEL_55;
      if ( a4 )
      {
        *v15 = v17 + 32;
        goto LABEL_40;
      }
LABEL_27:
      *v15 = v17;
LABEL_40:
      v7 = WPP_GLOBAL_Control;
      ++v15;
      goto LABEL_41;
    }
    if ( (v18 & 0x10) == 0 )
    {
      if ( (_BYTE)v17 != 92 )
        goto LABEL_41;
      if ( v15 >= (char *)v13 )
        goto LABEL_55;
      QuotedChar = extractQuotedChar(v15, QuotedChar, (unsigned __int64)v16);
      goto LABEL_40;
    }
    v19 = (_DWORD)v15 - (_DWORD)v14 - 1;
    if ( v19 > 63 )
    {
      if ( v7 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control )
      {
        if ( (*((_DWORD *)v7 + 7) & 0x40000) != 0 && *((_BYTE *)v7 + 25) >= 4u )
        {
          v22 = (const char *)FormatLabelA(v16 - a2, a2);
          WPP_SF_s(
            *((_QWORD *)WPP_GLOBAL_Control + 2),
            0x11u,
            (__int64)&WPP_410f52d72e8937ebe6dfc2517de4055a_Traceguids,
            v22);
LABEL_54:
          v7 = WPP_GLOBAL_Control;
        }
LABEL_55:
        if ( v7 != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_DWORD *)v7 + 7) & 0x40000) != 0
          && *((_BYTE *)v7 + 25) >= 4u )
        {
          v23 = (const char *)FormatLabelA(v31, a2);
          WPP_SF_s(
            *((_QWORD *)WPP_GLOBAL_Control + 2),
            0x14u,
            (__int64)&WPP_410f52d72e8937ebe6dfc2517de4055a_Traceguids,
            v23);
        }
      }
      return 123i64;
    }
    *v14 = v19;
    v14 = (unsigned __int8 *)v15++;
    if ( QuotedChar >= v16 )
      break;
    v7 = WPP_GLOBAL_Control;
    if ( !v19 )
    {
      if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control )
      {
        if ( (*((_DWORD *)WPP_GLOBAL_Control + 7) & 0x40000) != 0 && *((_BYTE *)WPP_GLOBAL_Control + 25) >= 4u )
        {
          WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 2), 0x12u, (__int64)&WPP_410f52d72e8937ebe6dfc2517de4055a_Traceguids);
          goto LABEL_54;
        }
        goto LABEL_55;
      }
      return 123i64;
    }
    ++v32;
LABEL_41:
    if ( !QuotedChar )
    {
      v21 = v32;
      goto LABEL_61;
    }
    v13 = a1 + 257;
  }
  v20 = v19 == 0;
  v21 = v32;
  if ( v20 )
  {
    --v15;
  }
  else
  {
    v21 = v32 + 1;
    *v14 = 0;
  }
LABEL_61:
  a1[1] = v21;
  v24 = v15 - (char *)a1 - 2;
  v25 = 9558 - ((_BYTE)v17 != 0);
  if ( v24 > 0xFF )
    LOBYTE(v24) = -1;
  *a1 = v24;
  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 7) & 0x40000) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 25) >= 4u )
  {
    v30 = FormatLabelA(v31, a2);
    v28 = Dbg_CountName(a1);
    v26 = "FQDN";
    if ( v25 == 9558 )
      v26 = "relative";
    WPP_SF_sss(
      *((_QWORD *)WPP_GLOBAL_Control + 2),
      0x13u,
      (__int64)&WPP_410f52d72e8937ebe6dfc2517de4055a_Traceguids,
      v26,
      (__int64)v28,
      (__int64)v30);
  }
  return v25;
}
// 14011CCB2: variable 'a3' is possibly undefined
// 14011CCB2: variable 'v27' is possibly undefined
// 14011CCB2: variable 'v29' is possibly undefined
// 140193F30: using guessed type _WORD DnsFileCharPropertyTable[256];
