//----- (00000001400AEE98) ----------------------------------------------------
void __fastcall checkNodesInTimeoutBin(unsigned __int8 a1, int a2)
{
  char *v4; // rsi
  char *v5; // rbp
  __int64 v6; // rbx
  char *v7; // rdi
  char **v8; // rax
  char *v9; // rax
  char *v10; // rax
  char *v11; // rax

  if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
    && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x100) != 0
    && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
  {
    WPP_SF_D(*((_QWORD *)WPP_GLOBAL_Control + 7), 0xEu, (__int64)&WPP_fcef9ab22f0836151509c33d06164dff_Traceguids, a1);
  }
  v4 = (char *)&TimeoutBinArray + 16 * a1;
  v5 = *(char **)v4;
  while ( v5 != v4 )
  {
    v6 = (__int64)(v5 - 40);
    v7 = v5;
    v5 = *(char **)v5;
    v8 = (char **)*((_QWORD *)v7 + 1);
    if ( *((char **)v5 + 1) != v7 || *v8 != v7 )
      __fastfail(3u);
    *v8 = v5;
    *((_QWORD *)v5 + 1) = v8;
    *((_QWORD *)v7 + 1) = v7;
    *(_QWORD *)v7 = v7;
    if ( !a2
      && WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x100) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 5u )
    {
      v9 = Dbg_NodeName(v6);
      WPP_SF_Ds(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0xFu,
        (__int64)&WPP_fcef9ab22f0836151509c33d06164dff_Traceguids,
        a1,
        (__int64)v9);
    }
    if ( (*(_DWORD *)(v6 + 92) & 0x80000) != 0 )
      goto LABEL_17;
    if ( *(_QWORD *)v6 && (unsigned int)checkNodeFreed(*(_QWORD *)v6) )
    {
      *(_DWORD *)(v6 + 92) |= 0x80000u;
      goto LABEL_17;
    }
    _InterlockedIncrement(&dword_1401C843C);
    if ( *(_BYTE *)(v6 + 98) == CurrentTimeoutBin || *(_BYTE *)(v6 + 98) == CurrentTimeoutBin - 1 )
    {
      _InterlockedIncrement(&dword_1401C8440);
    }
    else if ( *(_QWORD *)(v6 + 64) && (RR_ListTimeout(v6), *(_QWORD *)(v6 + 64)) )
    {
      _InterlockedIncrement(&dword_1401C8444);
    }
    else
    {
      if ( !*(_QWORD *)(v6 + 32) && !*(_BYTE *)(v6 + 97) && (*(_DWORD *)(v6 + 92) & 0x8100) == 0 )
      {
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 8) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
        {
          v10 = Dbg_NodeName(v6);
          WPP_SF_s(
            *((_QWORD *)WPP_GLOBAL_Control + 7),
            0xCu,
            (__int64)&WPP_fcef9ab22f0836151509c33d06164dff_Traceguids,
            v10);
        }
        if ( (unsigned int)NTree_RemoveNode(v6) )
        {
          _InterlockedIncrement(dword_1401C844C);
LABEL_17:
          ++g_dwCacheFreeCount;
LABEL_18:
          if ( g_fDnsServiceExit == 1 )
            return;
          continue;
        }
      }
      _InterlockedIncrement(&dword_1401C8448);
    }
    EnterCriticalSection(&csTimeoutLock);
    if ( !a2 )
    {
      insertPtrInTimeout(v6, CurrentTimeoutBin);
      *(_BYTE *)(v6 + 99) = CurrentTimeoutBin;
      LeaveCriticalSection(&csTimeoutLock);
      goto LABEL_18;
    }
    v11 = *(char **)v4;
    if ( *(char **)(*(_QWORD *)v4 + 8i64) != v4 )
      __fastfail(3u);
    *(_QWORD *)v7 = v11;
    *((_QWORD *)v7 + 1) = v4;
    *((_QWORD *)v11 + 1) = v7;
    *(_QWORD *)v4 = v7;
    LeaveCriticalSection(&csTimeoutLock);
  }
}
// 1401B9074: using guessed type int g_dwCacheFreeCount;
// 1401B9A40: using guessed type int g_fDnsServiceExit;
// 1401BA4B8: using guessed type char CurrentTimeoutBin;
// 1401C843C: using guessed type int dword_1401C843C;
// 1401C8440: using guessed type int dword_1401C8440;
// 1401C8444: using guessed type int dword_1401C8444;
// 1401C8448: using guessed type int dword_1401C8448;
// 1401C844C: using guessed type signed __int32 dword_1401C844C[3];
