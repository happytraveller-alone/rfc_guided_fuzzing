//----- (0000000140147940) ----------------------------------------------------
__int64 __fastcall CDnsPolicyContent::AddPolicyContent(
        CDnsPolicyContent *this,
        struct _DnssrvRpcPolicyAction *a2,
        struct _zone_info *a3)
{
  unsigned int v6; // r14d
  char *v7; // rdx
  unsigned __int64 v8; // r8
  unsigned int v9; // ecx
  unsigned int v10; // edx
  __int64 v11; // rbx
  __int64 v12; // rbx
  __int64 v13; // rcx
  _QWORD **v14; // rax
  __int64 v15; // r8
  __int64 v16; // rdx
  __int64 v17; // rcx
  const void **v18; // rax
  unsigned int v20; // r9d
  __int64 v21; // [rsp+38h] [rbp-59h] BYREF
  __int64 v22[2]; // [rsp+40h] [rbp-51h] BYREF
  const void *v23[3]; // [rsp+50h] [rbp-41h] BYREF
  unsigned __int64 v24; // [rsp+68h] [rbp-29h]
  const void *v25[3]; // [rsp+78h] [rbp-19h] BYREF
  unsigned __int64 v26; // [rsp+90h] [rbp-1h]
  int v27; // [rsp+A0h] [rbp+Fh]

  v22[1] = -2i64;
  v6 = 0;
  if ( *(_DWORD *)a2 )
  {
    while ( 1 )
    {
      v7 = (char *)**((_QWORD **)a2 + v6 + 1);
      v24 = 7i64;
      v23[2] = 0i64;
      LOWORD(v23[0]) = 0;
      v8 = -1i64;
      do
        ++v8;
      while ( *(_WORD *)&v7[2 * v8] );
      std::wstring::assign((char *)v23, v7, v8);
      v9 = *(_DWORD *)(*((_QWORD *)a2 + v6 + 1) + 8i64);
      if ( !v9 )
        break;
      v10 = v9 + *((_DWORD *)this + 2);
      if ( v10 < v9 )
      {
        *((_DWORD *)this + 2) = -1;
        if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
          && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0
          && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
        {
          WPP_SF_(*((_QWORD *)WPP_GLOBAL_Control + 7), 0x5Eu, (__int64)&WPP_42dbba61d26d3062f1ad4e084cdc81fe_Traceguids);
        }
        goto LABEL_29;
      }
      *((_DWORD *)this + 2) = v10;
      v11 = *((_QWORD *)a2 + v6 + 1);
      v26 = 7i64;
      v25[2] = 0i64;
      LOWORD(v25[0]) = 0;
      std::wstring::assign(v25, v23, 0i64, 0xFFFFFFFFFFFFFFFFui64);
      v27 = *(_DWORD *)(v11 + 8);
      v12 = *((_QWORD *)this + 2);
      v14 = (_QWORD **)std::_List_val<std::pair<std::wstring,unsigned long>>::_Buynode<std::pair<std::wstring,unsigned long>>(
                         v13,
                         v12,
                         *(_QWORD *)(v12 + 8),
                         (__int64)v25);
      v16 = *((_QWORD *)this + 3);
      if ( v16 == 0x555555555555554i64 )
        std::_Xlength_error("list<T> too long");
      *((_QWORD *)this + 3) = v16 + 1;
      *(_QWORD *)(v12 + 8) = v14;
      *v14[1] = v14;
      if ( v26 >= 8 )
        operator delete((void *)v25[0]);
      if ( a3 )
      {
        v21 = 0i64;
        GetZoneScope((__int64)a3, **((WCHAR ***)a2 + v6 + 1), &v21);
        _InterlockedIncrement((volatile signed __int32 *)(v21 + 308));
      }
      else
      {
        v22[0] = 0i64;
        v17 = **((_QWORD **)a2 + v6 + 1);
        if ( *(_WORD *)v17 != Source[0] || *(_WORD *)(v17 + 2) != Source[1] )
        {
          GetServerScope((const unsigned __int16 *)v17, v22, v15);
          _InterlockedIncrement((volatile signed __int32 *)(v22[0] + 24));
        }
      }
      if ( v24 >= 8 )
        operator delete((void *)v23[0]);
      if ( ++v6 >= *(_DWORD *)a2 )
        goto LABEL_32;
    }
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_BYTE *)WPP_GLOBAL_Control + 68) & 2) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 2u )
    {
      v18 = v23;
      if ( v24 >= 8 )
        v18 = (const void **)v23[0];
      WPP_SF_DS(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x5Du,
        (__int64)&WPP_42dbba61d26d3062f1ad4e084cdc81fe_Traceguids,
        0,
        (__int64)v18);
    }
LABEL_29:
    if ( v24 >= 8 )
      operator delete((void *)v23[0]);
    return 9981i64;
  }
  else
  {
LABEL_32:
    v20 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 1) = v20 * (0xFFFFFFFF / v20);
    if ( WPP_GLOBAL_Control != (CDnsClientSubnetRecordsTrie *)&WPP_GLOBAL_Control
      && (*((_DWORD *)WPP_GLOBAL_Control + 17) & 0x400000) != 0
      && *((_BYTE *)WPP_GLOBAL_Control + 65) >= 4u )
    {
      WPP_SF_Ddd(
        *((_QWORD *)WPP_GLOBAL_Control + 7),
        0x5Fu,
        (__int64)&WPP_42dbba61d26d3062f1ad4e084cdc81fe_Traceguids,
        v20);
    }
    return 0i64;
  }
}
// 140147A1E: variable 'v13' is possibly undefined
// 140147AB5: variable 'v15' is possibly undefined
// 140184CA8: using guessed type void __stdcall operator delete(void *);
