//----- (00000001401577F0) ----------------------------------------------------
__int64 __fastcall Dns_BinaryToBase32Hex(__int64 a1, unsigned int a2, _BYTE *a3, int *a4)
{
  unsigned int v4; // r10d
  _BYTE *v6; // r9
  unsigned __int8 *v7; // rdi
  int v8; // ebx
  unsigned __int8 v9; // al

  v4 = 0;
  if ( a1 && a3 && a4 )
  {
    v6 = a3;
    if ( a2 )
    {
      v7 = (unsigned __int8 *)(a1 + 1);
      do
      {
        if ( a2 < 5 )
          break;
        v8 = *a4;
        if ( (unsigned int)*a4 < 8 )
          break;
        *v6 = Base32HexLookup[(unsigned __int64)*(v7 - 1) >> 3];
        v6[1] = Base32HexLookup[((unsigned __int64)*v7 >> 6) | (4 * (*(v7 - 1) & 7))];
        v6[2] = Base32HexLookup[((unsigned __int64)*v7 >> 1) & 0x1F];
        v6[3] = Base32HexLookup[(v7[1] >> 4) | (unsigned __int64)(16 * (*v7 & 1))];
        v6[4] = Base32HexLookup[(v7[2] >> 7) | (unsigned __int64)(2 * (v7[1] & 0xF))];
        v6[5] = Base32HexLookup[((unsigned __int64)v7[2] >> 2) & 0x1F];
        v6[6] = Base32HexLookup[(v7[3] >> 5) | (unsigned __int64)(8 * (v7[2] & 3))];
        v9 = v7[3];
        v7 += 5;
        *a4 = v8 - 8;
        v6[7] = Base32HexLookup[v9 & 0x1F];
        v6 += 8;
        a2 -= 5;
      }
      while ( a2 );
    }
    *a4 = (_DWORD)v6 - (_DWORD)a3;
  }
  LOBYTE(v4) = a2 == 0;
  return v4;
}
// 140195510: using guessed type _BYTE Base32HexLookup[32];
