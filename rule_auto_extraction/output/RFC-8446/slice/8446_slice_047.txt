{
  "content": "In general, detailed certificate validation procedures are out of\n   scope for TLS (see [RFC5280]).  This section provides TLS-specific\n   requirements.\n\n   If the server supplies an empty Certificate message, the client MUST\n   abort the handshake with a \"decode_error\" alert.\n\n   If the client does not send any certificates (i.e., it sends an empty\n   Certificate message), the server MAY at its discretion either\n   continue the handshake without client authentication or abort the\n   handshake with a \"certificate_required\" alert.  Also, if some aspect\n   of the certificate chain was unacceptable (e.g., it was not signed by\n   a known, trusted CA), the server MAY at its discretion either\n   continue the handshake (considering the client unauthenticated) or\n   abort the handshake.\n\n   Any endpoint receiving any certificate which it would need to\n   validate using any signature algorithm using an MD5 hash MUST abort\n   the handshake with a \"bad_certificate\" alert.  SHA-1 is deprecated,\n   and it is RECOMMENDED that any endpoint receiving any certificate\n   which it would need to validate using any signature algorithm using a\n   SHA-1 hash abort the handshake with a \"bad_certificate\" alert.  For\n   clarity, this means that endpoints can accept these algorithms for\n   certificates that are self-signed or are trust anchors.\n\n   All endpoints are RECOMMENDED to transition to SHA-256 or better as\n   soon as possible to maintain interoperability with implementations\n   currently in the process of phasing out SHA-1 support.\n\n   Note that a certificate containing a key for one signature algorithm\n   MAY be signed using a different signature algorithm (for instance, an\n   RSA key signed with an ECDSA key).",
  "section": "4.4.2.4.. Handshake Protocol_Authentication Messages_Certificate_Receiving a Certificate Message"
}
