{
  "content": "When sent by the client, the \"supported_groups\" extension indicates\n   the named groups which the client supports for key exchange, ordered\n   from most preferred to least preferred.\n\n   Note: In versions of TLS prior to TLS 1.3, this extension was named\n   \"elliptic_curves\" and only contained elliptic curve groups.  See\n   [RFC8422] and [RFC7919].  This extension was also used to negotiate\n   ECDSA curves.  Signature algorithms are now negotiated independently\n   (see Section 4.2.3).\n\n   The \"extension_data\" field of this extension contains a\n   \"NamedGroupList\" value:\n\n      enum {\n\n          /* Elliptic Curve Groups (ECDHE) */\n          secp256r1(0x0017), secp384r1(0x0018), secp521r1(0x0019),\n          x25519(0x001D), x448(0x001E),\n\n          /* Finite Field Groups (DHE) */\n          ffdhe2048(0x0100), ffdhe3072(0x0101), ffdhe4096(0x0102),\n          ffdhe6144(0x0103), ffdhe8192(0x0104),\n\n          /* Reserved Code Points */\n          ffdhe_private_use(0x01FC..0x01FF),\n          ecdhe_private_use(0xFE00..0xFEFF),\n          (0xFFFF)\n      } NamedGroup;\n\n      struct {\n          NamedGroup named_group_list<2..2^16-1>;\n      } NamedGroupList;\n\n   Elliptic Curve Groups (ECDHE):  Indicates support for the\n      corresponding named curve, defined in either FIPS 186-4 [DSS] or\n      [RFC7748].  Values 0xFE00 through 0xFEFF are reserved for\n      Private Use [RFC8126].\n\n   Finite Field Groups (DHE):  Indicates support for the corresponding\n      finite field group, defined in [RFC7919].  Values 0x01FC through\n      0x01FF are reserved for Private Use.\n\n   Items in named_group_list are ordered according to the sender's\n   preferences (most preferred choice first).\n\n   As of TLS 1.3, servers are permitted to send the \"supported_groups\"\n   extension to the client.  Clients MUST NOT act upon any information\n   found in \"supported_groups\" prior to successful completion of the\n   handshake but MAY use the information learned from a successfully\n   completed handshake to change what groups they use in their\n   \"key_share\" extension in subsequent connections.  If the server has a\n   group it prefers to the ones in the \"key_share\" extension but is\n   still willing to accept the ClientHello, it SHOULD send\n   \"supported_groups\" to update the client's view of its preferences;\n   this extension SHOULD contain all groups the server supports,\n   regardless of whether they are currently supported by the client.",
  "section": "4.2.7.. Handshake Protocol_Extensions_Supported Groups"
}
