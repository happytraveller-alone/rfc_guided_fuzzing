{
  "content": "struct {\n          opaque cookie<1..2^16-1>;\n      } Cookie;\n\n   Cookies serve two primary purposes:\n\n   -  Allowing the server to force the client to demonstrate\n      reachability at their apparent network address (thus providing a\n      measure of DoS protection).  This is primarily useful for\n      non-connection-oriented transports (see [RFC6347] for an example\n      of this).\n\n   -  Allowing the server to offload state to the client, thus allowing\n      it to send a HelloRetryRequest without storing any state.  The\n      server can do this by storing the hash of the ClientHello in the\n      HelloRetryRequest cookie (protected with some suitable integrity\n      protection algorithm).\n\n   When sending a HelloRetryRequest, the server MAY provide a \"cookie\"\n   extension to the client (this is an exception to the usual rule that\n   the only extensions that may be sent are those that appear in the\n   ClientHello).  When sending the new ClientHello, the client MUST copy\n   the contents of the extension received in the HelloRetryRequest into\n   a \"cookie\" extension in the new ClientHello.  Clients MUST NOT use\n   cookies in their initial ClientHello in subsequent connections.\n\n   When a server is operating statelessly, it may receive an unprotected\n   record of type change_cipher_spec between the first and second\n   ClientHello (see Section 5).  Since the server is not storing any\n   state, this will appear as if it were the first message to be\n   received.  Servers operating statelessly MUST ignore these records.",
  "section": "4.2.2.. Handshake Protocol_Extensions_Cookie"
}
