{
  "content": "ECDHE parameters for both clients and servers are encoded in the\n   opaque key_exchange field of a KeyShareEntry in a KeyShare structure.\n\n   For secp256r1, secp384r1, and secp521r1, the contents are the\n   serialized value of the following struct:\n\n      struct {\n          uint8 legacy_form = 4;\n          opaque X[coordinate_length];\n          opaque Y[coordinate_length];\n      } UncompressedPointRepresentation;\n\n   X and Y, respectively, are the binary representations of the x and y\n   values in network byte order.  There are no internal length markers,\n   so each number representation occupies as many octets as implied by\n   the curve parameters.  For P-256, this means that each of X and Y use\n   32 octets, padded on the left by zeros if necessary.  For P-384, they\n   take 48 octets each.  For P-521, they take 66 octets each.\n\n   For the curves secp256r1, secp384r1, and secp521r1, peers MUST\n   validate each other's public value Q by ensuring that the point is a\n   valid point on the elliptic curve.  The appropriate validation\n   procedures are defined in Section 4.3.7 of [ECDSA] and alternatively\n   in Section 5.6.2.3 of [KEYAGREEMENT].  This process consists of three\n   steps: (1) verify that Q is not the point at infinity (O), (2) verify\n   that for Q = (x, y) both integers x and y are in the correct\n   interval, and (3) ensure that (x, y) is a correct solution to the\n   elliptic curve equation.  For these curves, implementors do not need\n   to verify membership in the correct subgroup.\n\n   For X25519 and X448, the contents of the public value are the byte\n   string inputs and outputs of the corresponding functions defined in\n   [RFC7748]: 32 bytes for X25519 and 56 bytes for X448.\n\n   Note: Versions of TLS prior to 1.3 permitted point format\n   negotiation; TLS 1.3 removes this feature in favor of a single point\n   format for each curve.",
  "section": "4.2.8.2.. Handshake Protocol_Extensions_Key Share_ECDHE Parameters"
}
