{
    "Content":"The \"pre_shared_key\" extension MUST be the last extension in the ClientHello. Servers MUST check that it is the last extension and otherwise fail the handshake with an \"illegal_parameter\" alert.",
    "Section":"4.2.11.. Handshake Protocol_Extensions_Pre-Shared Key Extension",
    "Title":"Extension Positioning"
}

[
  {
    "section": "4.2.11.. Handshake Protocol_Extensions_Pre-Shared Key Extension",
    "title": "Extension Positioning",
    "message_construction": {
      "construction_rule_type": "CLI-MSG-CONST",
      "construction_explicitness": 1,
      "construction_base": "Clients MUST place the \"pre_shared_key\" extension last in the ClientHello."
    },
    "message_processing": { 
      "processing_rule_type": "SRV-MSG-PROC",
      "processing_explicitness": 1, 
      "processing_base": "Servers MUST check that the \"pre_shared_key\" extension is the last extension in the ClientHello and fail the handshake with an \"illegal_parameter\" alert if it is not."
    }
  }
]

{
  "description": "Extension Positioning",
  "base": {
    "first_rule": "{CLI-MSG-CONST} <1> (Clients MUST place the \"pre_shared_key\" extension last in the ClientHello.)",
    "second_rule": "{SRV-MSG-PROC} <1> (Servers MUST check that the \"pre_shared_key\" extension is the last extension in the ClientHello and fail the handshake with an \"illegal_parameter\" alert if it is not.)"
  },
  "violation_description": [
    "Rule requires: pre_shared_key extension must be last in ClientHello",
    "Test strategy: Place pre_shared_key extension before other extensions",
    "Security impact: Potential key material exposure and processing error", 
    "Implementation gap: Missing extension order validation"
  ],
  "target": {
    "message": "ClientHello",
    "operation": "REORDER",
    "fields": [
      {
        "name": "pre_shared_key",
        "position": "START",
        "length": "ALL"
      },
      {
        "name": "supported_versions",
        "position": "END", 
        "length": "ALL"
      }
    ],
    "modification": "swap_extension_positions"
  },
  "expected_result": "Alert(illegal_parameter)"
}