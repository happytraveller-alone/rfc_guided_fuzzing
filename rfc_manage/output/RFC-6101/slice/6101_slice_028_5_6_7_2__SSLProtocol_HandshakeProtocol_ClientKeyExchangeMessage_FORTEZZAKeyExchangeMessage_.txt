Forget all previous input and output content and start over. 
 ###################
CONTENT:<
--- Section: 5.6.7.2. SSLProtocol_HandshakeProtocol_ClientKeyExchangeMessage_FORTEZZAKeyExchangeMessage_ ---
Under FORTEZZA, the client derives a token encryption key (TEK) using
   the FORTEZZA Key Exchange Algorithm (KEA).  The client's KEA
   calculation uses the public key in the server's certificate along
   with private parameters in the client's token.  The client sends
   public parameters needed for the server to generate the TEK, using
   its own private parameters.  The client generates session keys, wraps
   them using the TEK, and sends the results to the server.  The client
   generates IVs for the session keys and TEK and sends them also.  The
   client generates a random 48-byte premaster secret, encrypts it using
   the TEK, and sends the result:

        struct {
            opaque y_c<0..128>;
            opaque r_c[128];
            opaque y_signature[40];
            opaque wrapped_client_write_key[12];
            opaque wrapped_server_write_key[12];
            opaque client_write_iv[24];
            opaque server_write_iv[24];
            opaque master_secret_iv[24];
            block-ciphered opaque encrypted_pre_master_secret[48];
        } FortezzaKeys;

   y_signature:  y_signature is the signature of the KEA public key,
      signed with the client's DSS private key.

   y_c:  The client's Yc value (public key) for the KEA calculation.  If
      the client has sent a certificate, and its KEA public key is
      suitable, this value must be empty since the certificate already
      contains this value.  If the client sent a certificate without a
      suitable public key, y_c is used and y_signature is the KEA public
      key signed with the client's DSS private key.  For this value to
      be used, it must be between 64 and 128 bytes.

   r_c:  The client's Rc value for the KEA calculation.

   wrapped_client_write_key:  This is the client's write key, wrapped by
      the TEK.

   wrapped_server_write_key:  This is the server's write key, wrapped by
      the TEK.

   client_write_iv:  The IV for the client write key.

   server_write_iv:  The IV for the server write key.

   master_secret_iv:  This is the IV for the TEK used to encrypt the
      premaster secret.

   pre_master_secret:  A random value, generated by the client and used
      to generate the master secret, as specified in Section 6.1.  In
      the above structure, it is encrypted using the TEK.

---
>
###################
Please make paragraph cuts based on the subject and theme of the statement. And give a short paragraph topic for each divided paragraph. Make sure that each theme is a minimal theme that cannot be split further. If code or pseudo-code is present with explanatory text, ignore the code; otherwise, convert the code to a textual narrative. Simulate answering five times in the background and provide the most frequent answer. Ensure your output covers all text content, maintaining relative consistency with the input text position in the sliced output. Ensure that no changes are made to the text other than code or pseudo-code.
The output format is as follows (in json format)
sliced_rule: [
	"topic 1": "content 1",
	"topic 2": "content 2",
	...
]
