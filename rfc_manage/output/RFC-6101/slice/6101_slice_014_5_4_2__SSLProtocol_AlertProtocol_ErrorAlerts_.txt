Forget all previous input and output content and start over. 
 ###################
CONTENT:<
--- Section: 5.4.2. SSLProtocol_AlertProtocol_ErrorAlerts_ ---
Error handling in the SSL handshake protocol is very simple.  When an
   error is detected, the detecting party sends a message to the other
   party.  Upon transmission or receipt of a fatal alert message, both
   parties immediately close the connection.  Servers and clients are
   required to forget any session identifiers, keys, and secrets
   associated with a failed connection.  The following error alerts are
   defined:

   unexpected_message:  An inappropriate message was received.  This
      alert is always fatal and should never be observed in
      communication between proper implementations.

   bad_record_mac:  This alert is returned if a record is received with
      an incorrect MAC.  This message is always fatal.

   decompression_failure:  The decompression function received improper
      input (e.g., data that would expand to excessive length).  This
      message is always fatal.

   handshake_failure:  Reception of a handshake_failure alert message
      indicates that the sender was unable to negotiate an acceptable
      set of security parameters given the options available.  This is a
      fatal error.

   no_certificate:  A no_certificate alert message may be sent in
      response to a certification request if no appropriate certificate
      is available.

   bad_certificate:  A certificate was corrupt, contained signatures
      that did not verify correctly, etc.

   unsupported_certificate:  A certificate was of an unsupported type.

   certificate_revoked:  A certificate was revoked by its signer.

   certificate_expired:  A certificate has expired or is not currently
      valid.

   certificate_unknown:  Some other (unspecified) issue arose in
      processing the certificate, rendering it unacceptable.

   illegal_parameter:  A field in the handshake was out of range or
      inconsistent with other fields.  This is always fatal.

---
>
###################
Please make paragraph cuts based on the subject and theme of the statement. And give a short paragraph topic for each divided paragraph. Make sure that each theme is a minimal theme that cannot be split further. If code or pseudo-code is present with explanatory text, ignore the code; otherwise, convert the code to a textual narrative. Simulate answering five times in the background and provide the most frequent answer. Ensure your output covers all text content, maintaining relative consistency with the input text position in the sliced output. Ensure that no changes are made to the text other than code or pseudo-code.
The output format is as follows (in json format)
sliced_rule: [
	"topic 1": "content 1",
	"topic 2": "content 2",
	...
]
