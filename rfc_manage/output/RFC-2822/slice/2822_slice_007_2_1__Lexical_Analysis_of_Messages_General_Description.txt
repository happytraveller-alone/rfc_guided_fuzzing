Forget all previous input and output content and start over. 
 ###################
CONTENT:<
--- Section: 2.1. Lexical Analysis of Messages_General Description ---
At the most basic level, a message is a series of characters.  A
   message that is conformant with this standard is comprised of
   characters with values in the range 1 through 127 and interpreted as
   US-ASCII characters [ASCII].  For brevity, this document sometimes
   refers to this range of characters as simply "US-ASCII characters".

   Note: This standard specifies that messages are made up of characters
   in the US-ASCII range of 1 through 127.  There are other documents,
   specifically the MIME document series [RFC2045, RFC2046, RFC2047,
   RFC2048, RFC2049], that extend this standard to allow for values
   outside of that range.  Discussion of those mechanisms is not within
   the scope of this standard.

   Messages are divided into lines of characters.  A line is a series of
   characters that is delimited with the two characters carriage-return
   and line-feed; that is, the carriage return (CR) character (ASCII
   value 13) followed immediately by the line feed (LF) character (ASCII
   value 10).  (The carriage-return/line-feed pair is usually written in
   this document as "CRLF".)

   A message consists of header fields (collectively called "the header
   of the message") followed, optionally, by a body.  The header is a
   sequence of lines of characters with special syntax as defined in
   this standard. The body is simply a sequence of characters that
   follows the header and is separated from the header by an empty line
   (i.e., a line with nothing preceding the CRLF).

---
>
###################
Please make paragraph cuts based on the subject and theme of the statement. And give a short paragraph topic for each divided paragraph. Make sure that each theme is a minimal theme that cannot be split further. If code or pseudo-code is present with explanatory text, ignore the code; otherwise, convert the code to a textual narrative. Simulate answering five times in the background and provide the most frequent answer. Ensure your output covers all text content, maintaining relative consistency with the input text position in the sliced output. Ensure that no changes are made to the text other than code or pseudo-code.
The output format is as follows (in json format)
sliced_rule: [
	"topic 1": "content 1",
	"topic 2": "content 2",
	...
]
