index,section,title,construction_rule_type,construction_explicitness,construction_base,processing_rule_type,processing_explicitness,processing_base,test_strategy,message,field,action,relative_to,position,value,expected_result
20,4.2.3.. Handshake Protocol_Extensions_Signature Algorithms,Client Requirements for Signature Algorithms,CLI-MSG-CONST,1,"""Clients MUST send the ""signature_algorithms"" extension if they desire server authentication via a certificate.""",SRV-MSG-PROC,1,"""Servers MUST abort the handshake with a ""missing_extension"" alert if the client has not sent the ""signature_algorithms"" extension while authenticating via a certificate.""","""Remove the 'signature_algorithms' extension from the ClientHello to test server handling of missing extensions.""",ClientHello,signature_algorithms,REMOVE,None,None,"""None""","""Server aborts the handshake with a missing_extension alert."""
11,4.1.2.. Handshake Protocol_Key Exchange Messages_Client Hello,Extension Handling,CLI-MSG-CONST,1,"""Clients MUST include mandatory extensions as specified in the TLS 1.3 protocol.""",SRV-MSG-PROC,1,"""Servers MUST process ClientHello messages while adhering to the mandatory extension requirements.""","""Remove the mandatory 'key_share' extension to test the server's handling of missing mandatory extensions.""",ClientHello,key_share,REMOVE,None,None,"""None""","""Server aborts the handshake with a missing_extension or illegal_parameter alert."""
9,4.1.2.. Handshake Protocol_Key Exchange Messages_Client Hello,Field Descriptions,CLI-MSG-CONST,1,"""The 'legacy_compression_methods' field MUST contain exactly one byte, set to zero.""",SRV-MSG-PROC,1,"""Servers MUST check that the 'legacy_compression_methods' field contains exactly one byte, set to zero.""","""Set the 'legacy_compression_methods' field to more than one byte to test server handling of invalid compression method lengths.""",ClientHello,legacy_compression_methods,SET,None,None,"""0x01, 0x02""","""Server aborts the handshake with an illegal_parameter alert."""
14,4.2.1.. Handshake Protocol_Extensions_Supported Versions,ClientHello Requirements,CLI-MSG-CONST,1,"""Clients MUST send the 'Supported Versions' extension in ClientHello, containing all TLS versions they are prepared to negotiate, including at least 0x0304.""",SRV-MSG-PROC,1,"""Servers MUST process the 'Supported Versions' extension and validate that it includes all versions of TLS that the client is prepared to negotiate.""","""Set the 'Supported Versions' extension to exclude 0x0304 to test server response to missing required versions.""",ClientHello,supported_versions,SET,None,None,"""0x03,0x03""","""Server aborts the handshake with a protocol_version alert."""
18,4.2.1.. Handshake Protocol_Extensions_Supported Versions,Negotiation of Versions Prior to TLS 1.2,CLI-MSG-CONST,1,"""Clients that support prior versions of TLS SHOULD include TLS 1.2 in their supported versions list.""",SRV-MSG-PROC,1,"""Servers MUST be prepared to receive ClientHellos with this extension, and handle cases where 0x0304 (TLS 1.3) is not included in the list of versions.""","""Set the supported_versions field to exclude TLS 1.2 to test server's handling of unsupported versions.""",ClientHello,supported_versions,SET,None,None,"""0x0301, 0x0302""","""Server aborts the handshake with a protocol_version alert."""
17,4.2.1.. Handshake Protocol_Extensions_Supported Versions,Server Behavior With the Extension,CLI-MSG-CONST,1,"""Clients MUST ensure that the ""supported_versions"" extension lists all TLS versions they support.""",SRV-MSG-PROC,1,"""Servers MUST select a TLS version from the ""supported_versions"" extension and MUST ignore any unknown versions present.""","""Set the 'supported_versions' extension to include an unsupported version to validate server handling.""",ClientHello,supported_versions,SET,None,None,"""0xFFFF, 0x0304""","""Server selects a valid version from the list, ignoring the unsupported ones."""
29,4.2.9.. Handshake Protocol_Extensions_Pre-Shared Key Exchange Modes,PSK Key Exchange Modes Extension Overview,CLI-MSG-CONST,1,"""Clients MUST send a 'psk_key_exchange_modes' extension to indicate the supported modes for PSK usage.""",SRV-MSG-PROC,1,"""Servers MUST interpret the 'psk_key_exchange_modes' extension to restrict PSK options based on the client's capabilities.""","""Set the 'psk_key_exchange_modes' extension to an unsupported mode to test server's rejection of invalid PSK modes.""",ClientHello,psk_key_exchange_modes,SET,None,None,"""0xFF""","""Server rejects the ClientHello with an illegal_parameter alert."""
30,4.2.9.. Handshake Protocol_Extensions_Pre-Shared Key Exchange Modes,Client Requirements for PSK Extensions,CLI-MSG-CONST,1,"""Clients MUST ensure that the key exchange mode offered is compatible with the modes advertised.""",SRV-MSG-PROC,1,"""Servers MUST NOT select a key exchange mode that is not listed by the client.""","""Set an incompatible key exchange mode in the ClientHello to test server's rejection of invalid modes.""",ClientHello,psk_key_exchange_modes,SET,None,None,"""0x04, 0x03, 0xff, 0xff, 0xff""","""Server rejects the ClientHello with an illegal_parameter alert."""
6,4.1.2.. Handshake Protocol_Key Exchange Messages_Client Hello,Field Descriptions,CLI-MSG-CONST,1,"""The 'random' field MUST contain 32 bytes generated by a secure random number generator.""",SRV-MSG-PROC,1,"""Servers MUST validate that the 'random' field contains 32 bytes.""","""Set the 'random' field to a value that is not 32 bytes long to test server's validation of the field length.""",ClientHello,random,SET,None,None,"""0x01, 0x23, 0x45, 0x67, 0x89, 0xAB, 0xCD, 0xEF""","""Server rejects the ClientHello with a handshake_failure alert."""
